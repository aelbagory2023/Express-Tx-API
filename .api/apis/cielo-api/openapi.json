{
  "openapi": "3.0.0",
  "info": {
    "title": "Cielo Public API",
    "description": "API",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://feed-api.cielo.finance",
      "description": "Endpoint"
    }
  ],
  "security": [
    {
      "api_key": [
        "read"
      ]
    }
  ],
  "paths": {
    "/api/v1/feed": {
      "get": {
        "tags": [
          "Feed"
        ],
        "summary": "Feed",
        "description": "This endpoint retrieves a feed of transactions based on specified query parameters.\nWhen set to true, the response will include the market capitalization of tokens, as well as liquidity swap and transfer events.  Note that enabling this option will double the cost per request to 10 credits. If the query is filtered by wallet address, the cost will increase to 6 credits per request.\n### Filters\n- **Wallet Address**: Filter transactions by wallet address.\n- **Number of Transactions (limit)**: Specify the number of transactions to retrieve.\n- **Specific Lists**: Filter transactions by specific lists.\n- **Chains**: Filter transactions by chains.\n- **Transaction Types**: Filter transactions by transaction types.\n- **Tokens**: Filter transactions by tokens.\n- **Minimum USD Value**: Filter transactions by minimum USD value.\n- **Starting Point**: Specify the starting point of the feed.\n- **New Trades**: Filter transactions by new trades.\n### Supported Chains\n- All EVM chains\n- Solana\n### Cost\n- **Cost per request**: 5 credits\n- **When filtered by wallet address**: 3 credits\n### Available Plans\nAvailable on the following plans:\n- Free\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getFeed",
        "parameters": [
          {
            "name": "wallet",
            "in": "query",
            "description": "Filter the feed by a specific wallet address.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the number of transactions returned in the feed. The maximum limit is 100.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 10
          },
          {
            "name": "list",
            "in": "query",
            "description": "Filter transactions by a specific List ID.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "chains",
            "in": "query",
            "description": "Filter transactions by specific blockchain chains (e.g. ethereum), comma-separated for multiple values (e.g, ethereum,polygon)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "ethereum",
              "base",
              "arbitrum"
            ]
          },
          {
            "name": "txTypes",
            "in": "query",
            "description": "Filter transactions by types (e.g. swap, nft_trade), comma-separated for multiple values (e.g, swap,transfer,nft_trade)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bridge",
                  "contract_creation",
                  "contract_interaction",
                  "flashloan",
                  "lending",
                  "lp",
                  "nft_lending",
                  "nft_liquidation",
                  "nft_mint",
                  "nft_sweep",
                  "nft_trade",
                  "nft_transfer",
                  "option",
                  "perp",
                  "reward",
                  "staking",
                  "sudo_pool",
                  "swap",
                  "transfer",
                  "wrap"
                ]
              }
            }
          },
          {
            "name": "tokens",
            "in": "query",
            "description": "Filter transactions by specific tokens, identified by either their address or symbol , comma-separated for multiple values (e.g, LINK,BITCOIN)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "minUSD",
            "in": "query",
            "description": "Set a minimum USD value for transactions. Default - 0",
            "required": false,
            "schema": {
              "type": "number"
            },
            "example": 100
          },
          {
            "name": "newTrades",
            "in": "query",
            "description": "Filter transactions by new trades.",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "startFrom",
            "in": "query",
            "description": "Set value from response 'paging.next_object_id' to get next page.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "NjUyZDFlOTZjYTU1MTNjM2M0NzAyMjk5XzE2OTc0NTU3NjM"
          },
          {
            "name": "fromTimestamp",
            "in": "query",
            "description": "Filter transactions from a specific UNIX timestamp.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 1630000000000
          },
          {
            "name": "toTimestamp",
            "in": "query",
            "description": "Filter transactions to a specific UNIX timestamp.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 1630000000000
          },
          {
            "name": "includeMarketCap",
            "in": "query",
            "description": "Include market capitalization of tokens in the response. Note that enabling this option will double the cost per request to 10 credits.",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull Feed response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /v1/feed endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response, including a list of transaction items and pagination details.",
                      "properties": {
                        "items": {
                          "type": "array",
                          "description": "An array of transaction items, each conforming to one of several types like Swap, LP, Transfer, Lending, etc. This array can contain a mix of these types.",
                          "items": {
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "This object type provides detailed information about a cryptocurrency swap transaction. It includes critical details such as wallet addresses, transaction hash, type of swap, blockchain specifics, and timestamps. The structure outlines the specifics of the assets involved in the swap, including their addresses, names, symbols, amounts, and USD values. It is particularly useful for platforms tracking and analyzing DeFi swap transactions, offering insights into the trade's details, such as the decentralized exchange (DEX) used, the tokens exchanged, and their respective values. This comprehensive structure is ideal for users or systems needing a detailed view of swap transactions on blockchain networks.\n",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address that initiated the swap transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A readable label for the wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique hash identifier of the swap transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Specifies the type of transaction, in this case, a token swap.",
                                    "example": "swap"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network where the swap transaction occurred.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "dex": {
                                    "type": "string",
                                    "description": "The decentralized exchange where the swap transaction took place.",
                                    "example": "Odos"
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address of the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address of the transaction (often the same as the 'from' address in swap transactions).",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "token0_address": {
                                    "type": "string",
                                    "description": "The address of the first token involved in the swap.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "token0_amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The amount of the first token involved in the swap.",
                                    "example": 25
                                  },
                                  "token0_amount_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The USD value of the first token amount at the time of the swap.",
                                    "example": 25
                                  },
                                  "token0_name": {
                                    "type": "string",
                                    "description": "The name of the first token involved in the swap.",
                                    "example": "USD Coin"
                                  },
                                  "token0_price_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the first token in USD.",
                                    "example": 1
                                  },
                                  "token0_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the first token involved in the swap.",
                                    "example": "USDC"
                                  },
                                  "token0_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  },
                                  "token1_address": {
                                    "type": "string",
                                    "description": "The address of the second token involved in the swap.",
                                    "example": "0x0000000000000000000000000000000000000000"
                                  },
                                  "token1_amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The amount of the second token involved in the swap.",
                                    "example": 0.011715203954716423
                                  },
                                  "token1_amount_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The USD value of the second token amount at the time of the swap.",
                                    "example": 25
                                  },
                                  "token1_name": {
                                    "type": "string",
                                    "description": "The name of the second token involved in the swap.",
                                    "example": "Ethereum"
                                  },
                                  "token1_price_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the second token in USD.",
                                    "example": 2133.979066573165
                                  },
                                  "token1_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the second token involved in the swap.",
                                    "example": "ETH"
                                  },
                                  "token1_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  },
                                  "first_interaction": {
                                    "type": "boolean",
                                    "description": "Indicates whether this transaction was the first interaction between the involved wallet addresses.",
                                    "example": "falsed"
                                  },
                                  "token_market_cap": {
                                    "type": "object",
                                    "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                                    "properties": {
                                      "token_address": {
                                        "type": "string",
                                        "description": "The address of the token.",
                                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                      },
                                      "market_cap": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The market capitalization of the token.",
                                        "example": 28567534.5964843
                                      },
                                      "liquidity": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The liquidity of the token.",
                                        "example": 832322.8431867727
                                      }
                                    },
                                    "required": [
                                      "token_address",
                                      "market_cap",
                                      "liquidity"
                                    ]
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "dex",
                                  "from",
                                  "to",
                                  "token0_address",
                                  "token0_amount",
                                  "token0_amount_usd",
                                  "token0_name",
                                  "token0_price_usd",
                                  "token0_symbol",
                                  "token0_icon_link",
                                  "token1_address",
                                  "token1_amount",
                                  "token1_amount_usd",
                                  "token1_name",
                                  "token1_price_usd",
                                  "token1_symbol",
                                  "token1_icon_link",
                                  "first_interaction"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a comprehensive overview of a liquidity pool (LP) transaction on a decentralized exchange (DEX). It includes details about the wallet involved, the transaction hash, type, and associated blockchain, as well as specific information about the assets involved in the transaction. This structure is particularly useful for platforms that track and analyze liquidity pool actions, such as adding or removing liquidity, offering insights into the specifics of each action, including the assets involved, their amounts in both the native token and USD value, and their respective prices in USD.\n",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "dex": {
                                    "type": "string",
                                    "description": "The name of the decentralized exchange where the LP transaction occurred.",
                                    "example": "Odos"
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Specifies the nature of the LP transaction, such as 'add' or 'remove'.",
                                    "example": "add"
                                  },
                                  "token0_address": {
                                    "type": "string",
                                    "description": "The address of the first token involved in the LP transaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "token0_amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The amount of the first token involved in the transaction.",
                                    "example": 25
                                  },
                                  "token0_amount_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The USD value of the first token amount at the time of the transaction.",
                                    "example": 25
                                  },
                                  "token0_name": {
                                    "type": "string",
                                    "description": "The name of the first token involved in the transaction.",
                                    "example": "USD Coin"
                                  },
                                  "token0_price_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the first token in USD.",
                                    "example": 1
                                  },
                                  "token0_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the first token involved in the transaction.",
                                    "example": "USDC"
                                  },
                                  "token0_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  },
                                  "token1_address": {
                                    "type": "string",
                                    "description": "The address of the second token involved in the LP transaction.",
                                    "example": "0x0000000000000000000000000000000000000000"
                                  },
                                  "token1_amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The amount of the second token involved in the transaction.",
                                    "example": 25
                                  },
                                  "token1_amount_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The USD value of the second token amount at the time of the transaction.",
                                    "example": 25
                                  },
                                  "token1_name": {
                                    "type": "string",
                                    "description": "The name of the second token involved in the transaction.",
                                    "example": "USD Coin"
                                  },
                                  "token1_price_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the second token in USD.",
                                    "example": 1
                                  },
                                  "token1_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the second token involved in the transaction.",
                                    "example": "USDC"
                                  },
                                  "token1_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  },
                                  "lower_bound": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Indicates the lower bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                                    "example": 0
                                  },
                                  "upper_bound": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Indicates the upper bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                                    "example": 0
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "dex",
                                  "from",
                                  "type",
                                  "token0_address",
                                  "token0_amount",
                                  "token0_amount_usd",
                                  "token0_name",
                                  "token0_price_usd",
                                  "token0_symbol",
                                  "token0_icon_link",
                                  "token1_address",
                                  "token1_amount",
                                  "token1_amount_usd",
                                  "token1_name",
                                  "token1_price_usd",
                                  "token1_symbol",
                                  "token1_icon_link",
                                  "lower_bound",
                                  "upper_bound"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object represents the details of a cryptocurrency transfer transaction. It includes essential information such as wallet addresses, transaction hash, type of transfer, blockchain details, and timestamps. The structure is particularly useful for tracking standard token transfers on blockchain networks, providing a comprehensive overview of the transaction, including the amount transferred in USD, the token's contract address, its name, and symbol. This detailed structure is ideal for users or systems requiring a thorough view of token transfer transactions, including the specifics of the token involved and the value of the transaction.\n",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address involved in the transfer transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A readable label for the wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique hash identifier of the transfer transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Specifies the type of transaction, in this case, a token transfer.",
                                    "example": "transfer"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network where the transfer transaction occurred.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address of the transaction.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address of the transaction.",
                                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                                  },
                                  "from_label": {
                                    "type": "string",
                                    "description": "A readable version of the 'from' wallet address.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to_label": {
                                    "type": "string",
                                    "description": "A readable version of the 'to' wallet address.",
                                    "example": "0xcfdb...6f8ff"
                                  },
                                  "amount_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The USD value of the amount transferred in the transaction.",
                                    "example": 117.412291
                                  },
                                  "contract_address": {
                                    "type": "string",
                                    "description": "The blockchain address of the contract under which the token is registered.",
                                    "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the token being transferred.",
                                    "example": "Tether USD"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The symbol of the token being transferred.",
                                    "example": "USDT"
                                  },
                                  "token_price_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the token in USD at the time of the transaction.",
                                    "example": 1
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates the contract standard of the token, such as ERC20.",
                                    "example": "ERC20"
                                  },
                                  "token_icon_link": {
                                    "type": "string",
                                    "description": "A URL link to the token's icon image.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  },
                                  "token_market_cap": {
                                    "type": "object",
                                    "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                                    "properties": {
                                      "token_address": {
                                        "type": "string",
                                        "description": "The address of the token.",
                                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                      },
                                      "market_cap": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The market capitalization of the token.",
                                        "example": 28567534.5964843
                                      },
                                      "liquidity": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The liquidity of the token.",
                                        "example": 832322.8431867727
                                      }
                                    },
                                    "required": [
                                      "token_address",
                                      "market_cap",
                                      "liquidity"
                                    ]
                                  },
                                  "mempool": {
                                    "type": "boolean",
                                    "description": "For Bitcoin transactions, this field indicates whether the transaction is in the mempool."
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "to",
                                  "from_label",
                                  "to_label",
                                  "amount_usd",
                                  "contract_address",
                                  "name",
                                  "symbol",
                                  "token_price_usd",
                                  "type",
                                  "token_icon_link"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object represents the data structure for a specific transaction related to decentralized finance (DeFi) activities such as lending, borrowing, and other related actions. It provides detailed information about the transaction, including wallet addresses, transaction hash, type of transaction, chain details, and financial figures. This structure is particularly useful for platforms tracking DeFi activities, offering insights into the specifics of each transaction, such as the asset involved, the amount, the health factor in lending platforms, and the price of the asset in USD at the time of the transaction.\n",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address associated with the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A more readable, shortened version of the wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique identifier of the transaction, represented as a hash.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Specifies the type of DeFi transaction, such as lending, borrowing, etc.",
                                    "example": "lending"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "Indicates the blockchain network on which the transaction occurred.",
                                    "example": "base"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A sequential index or identifier for the transaction within a particular dataset or list.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number in the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "from_label": {
                                    "type": "string",
                                    "description": "A readable, abbreviated form of the 'from' wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "action": {
                                    "type": "string",
                                    "description": "Describes the action taken in the transaction, such as 'Repaid' in a lending scenario.",
                                    "example": "Repaid"
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "The smart contract address involved in the transaction.",
                                    "example": "0x4200000000000000000000000000000000000006"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The amount of the asset involved in the transaction.",
                                    "example": 50.007801987424834
                                  },
                                  "amount_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The equivalent value of the transaction amount in USD.",
                                    "example": 106652.63945462069
                                  },
                                  "dex": {
                                    "type": "string",
                                    "description": "The decentralized exchange or platform where the transaction occurred, such as AaveV2.",
                                    "example": "AaveV2"
                                  },
                                  "health_factor": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "A metric specific to lending platforms, indicating the health of the loan or position.",
                                    "example": 1000
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the asset involved in the transaction.",
                                    "example": "Wrapped Ether"
                                  },
                                  "platform": {
                                    "type": "string",
                                    "description": "The DeFi platform associated with the transaction, like AaveV3.",
                                    "example": "AaveV3"
                                  },
                                  "price_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the asset in USD at the time of the transaction.",
                                    "example": 2132.72
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The symbol of the asset involved in the transaction.",
                                    "example": "WETH"
                                  },
                                  "token_icon_link": {
                                    "type": "string",
                                    "description": "A URL link to the icon image of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "from_label",
                                  "action",
                                  "address",
                                  "amount",
                                  "amount_usd",
                                  "dex",
                                  "health_factor",
                                  "name",
                                  "platform",
                                  "price_usd",
                                  "symbol",
                                  "token_icon_link"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object represents the data structure for a Non-Fungible Token (NFT) minting transaction. It provides detailed information about the transaction, including wallet addresses, transaction hash, the type of NFT transaction (in this case, minting), and blockchain specifics. Additionally, it includes detailed information about the NFT minted, such as its image, contract address, token ID, and associated fees. This structure is particularly useful for platforms tracking NFT minting activities, offering insights into the creation of new NFTs, their associated costs, and the blockchain details.\n",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address involved in the NFT minting transaction.",
                                    "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A more readable label or identifier for the wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique hash identifier of the NFT minting transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Specifies the type of transaction, in this case, NFT minting.",
                                    "example": "nft_mint"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network on which the minting transaction was conducted.",
                                    "example": "ethereum"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address of the transaction.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address of the transaction.",
                                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                                  },
                                  "from_label": {
                                    "type": "string",
                                    "description": "A readable version of the 'from' wallet address.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to_label": {
                                    "type": "string",
                                    "description": "A readable version of the 'to' wallet address.",
                                    "example": "0xcfdb...6f8ff"
                                  },
                                  "thumbnail": {
                                    "type": "string",
                                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "image": {
                                    "type": "string",
                                    "description": "A full image URL of the NFT.",
                                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The number of items of the NFT minted in the transaction.",
                                    "example": 1
                                  },
                                  "contract_address": {
                                    "type": "string",
                                    "description": "The blockchain address of the contract under which the NFT is minted.",
                                    "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                                  },
                                  "contract_type": {
                                    "type": "string",
                                    "description": "The type of contract used for the NFT, such as ERC721.",
                                    "example": "ERC721"
                                  },
                                  "fee": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The transaction fee incurred for minting the NFT.",
                                    "example": 0.21357696
                                  },
                                  "nft_name": {
                                    "type": "string",
                                    "description": "The name of the NFT minted.",
                                    "example": "unknown"
                                  },
                                  "nft_symbol": {
                                    "type": "string",
                                    "description": "The symbol associated with the NFT.",
                                    "example": "unknown"
                                  },
                                  "nft_token_id": {
                                    "type": "string",
                                    "description": "The unique token ID of the minted NFT.",
                                    "example": 14
                                  },
                                  "currency_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the currency used in the transaction (e.g., ETH, MATIC).",
                                    "example": "MATIC"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates the contract standard of the NFT, such as ERC721.",
                                    "example": "ERC721"
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The value of the transaction. For minting, this is often zero since the NFT is being created.",
                                    "example": 0
                                  },
                                  "value_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The equivalent USD value of the transaction.",
                                    "example": 0
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "to",
                                  "from_label",
                                  "to_label",
                                  "thumbnail",
                                  "image",
                                  "amount",
                                  "contract_address",
                                  "contract_type",
                                  "fee",
                                  "nft_name",
                                  "nft_symbol",
                                  "nft_token_id",
                                  "currency_symbol",
                                  "type",
                                  "value",
                                  "value_usd"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object encapsulates the details of a Non-Fungible Token (NFT) trading transaction. It includes comprehensive information such as wallet addresses, transaction hash, type of transaction (NFT trade), blockchain details, and timestamps. The structure provides specific data about the NFT trade, including the NFT's image, contract address, marketplace of the trade, and price details in both cryptocurrency and USD. Additionally, it includes information about the buyer, seller, and whether the transaction involved a bid being accepted. This structure is ideal for platforms that monitor and analyze NFT trading activities, offering detailed insights into each trade, its valuation, and the parties involved.\n",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address involved in the NFT trading transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A readable label for the wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique hash identifier of the NFT trading transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Specifies the type of transaction, in this case, NFT trading.",
                                    "example": "nft_trade"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network where the trading transaction occurred.",
                                    "example": "ethereum"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address of the transaction.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address of the transaction.",
                                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                                  },
                                  "thumbnail": {
                                    "type": "string",
                                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "image": {
                                    "type": "string",
                                    "description": "A full image URL of the NFT.",
                                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "action": {
                                    "type": "string",
                                    "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                                    "example": "buy"
                                  },
                                  "contract": {
                                    "type": "string",
                                    "description": "The blockchain contract address associated with the NFT.",
                                    "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                                  },
                                  "marketplace": {
                                    "type": "string",
                                    "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                                    "example": "OpenSea"
                                  },
                                  "nft_address": {
                                    "type": "string",
                                    "description": "The blockchain address of the NFT involved in the trade.",
                                    "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                                  },
                                  "nft_name": {
                                    "type": "string",
                                    "description": "The name of the NFT traded.",
                                    "example": "Gemesis"
                                  },
                                  "nft_symbol": {
                                    "type": "string",
                                    "description": "The symbol associated with the NFT.",
                                    "example": "OSP"
                                  },
                                  "nft_token_id": {
                                    "type": "string",
                                    "description": "The unique token ID of the NFT involved in the trade.",
                                    "example": 32507
                                  },
                                  "price": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price at which the NFT was traded.",
                                    "example": 0.0151
                                  },
                                  "price_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The equivalent USD value of the NFT trade.",
                                    "example": 32.911356
                                  },
                                  "profit": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The profit earned from the trade. This may be zero in some transactions.",
                                    "example": 0
                                  },
                                  "currency_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                                    "example": "WETH"
                                  },
                                  "buyer": {
                                    "type": "string",
                                    "description": "The wallet address of the buyer in the trade."
                                  },
                                  "seller": {
                                    "type": "string",
                                    "description": "The wallet address of the seller in the trade."
                                  },
                                  "token": {
                                    "type": "string",
                                    "description": "The token type used in the transaction."
                                  },
                                  "first_interaction": {
                                    "type": "boolean",
                                    "description": "Indicates whether this was the first interaction between the buyer and seller."
                                  },
                                  "bid_accepted": {
                                    "type": "boolean",
                                    "description": "Specifies if the transaction involved a bid being accepted."
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "to",
                                  "thumbnail",
                                  "image",
                                  "action",
                                  "contract",
                                  "marketplace",
                                  "nft_address",
                                  "nft_name",
                                  "nft_symbol",
                                  "nft_token_id",
                                  "price",
                                  "price_usd",
                                  "profit",
                                  "currency_symbol",
                                  "buyer",
                                  "seller",
                                  "token",
                                  "first_interaction",
                                  "bid_accepted"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object type details a Non-Fungible Token (NFT) transfer transaction. It includes essential information such as wallet addresses, transaction hash, NFT details, and blockchain specifics. This structure is particularly useful for tracking NFT transfers, providing a complete overview of the transaction, including the involved parties (from and to addresses), the NFT's contract details, and the transaction's metadata such as timestamps and blockchain network. The object also includes the NFT's image, name, symbol, and token ID, offering a comprehensive view of the NFT being transferred.\n",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address involved in the NFT transfer transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A readable label for the wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique hash identifier of the NFT transfer transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Specifies the type of transaction, in this case, NFT transfer.",
                                    "example": "nft_transfer"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network where the transfer transaction occurred.",
                                    "example": "ethereum"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address of the transaction.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address of the transaction.",
                                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                                  },
                                  "from_label": {
                                    "type": "string",
                                    "description": "A readable version of the 'from' wallet address.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to_label": {
                                    "type": "string",
                                    "description": "A readable version of the 'to' wallet address.",
                                    "example": "0xcfdb...6f8ff"
                                  },
                                  "thumbnail": {
                                    "type": "string",
                                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "image": {
                                    "type": "string",
                                    "description": "A full image URL of the NFT.",
                                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "contract_address": {
                                    "type": "string",
                                    "description": "The blockchain address of the contract under which the NFT is registered.",
                                    "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                                  },
                                  "contract_type": {
                                    "type": "string",
                                    "description": "The type of contract used for the NFT, such as ERC721.",
                                    "example": "ERC721"
                                  },
                                  "fee": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The transaction fee incurred for the transfer of the NFT.",
                                    "example": 0.21357696
                                  },
                                  "nft_name": {
                                    "type": "string",
                                    "description": "The name of the NFT being transferred.",
                                    "example": "unknown"
                                  },
                                  "nft_symbol": {
                                    "type": "string",
                                    "description": "The symbol associated with the NFT.",
                                    "example": "unknown"
                                  },
                                  "nft_token_id": {
                                    "type": "string",
                                    "description": "The unique token ID of the NFT involved in the transfer.",
                                    "example": 3
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Indicates the contract standard of the NFT, such as ERC721.",
                                    "example": "ERC721"
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The value of the NFT at the time of the transfer. This might be represented in the native cryptocurrency of the blockchain."
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "to",
                                  "from_label",
                                  "to_label",
                                  "thumbnail",
                                  "image",
                                  "contract_address",
                                  "contract_type",
                                  "fee",
                                  "nft_name",
                                  "nft_symbol",
                                  "nft_token_id",
                                  "type",
                                  "value"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object encapsulates detailed information about a Non-Fungible Token (NFT) lending transaction. It includes comprehensive details such as wallet addresses, transaction hash, the type of NFT transaction, the blockchain used, and timestamps. Additionally, it provides specifics about the NFT involved, including its address, name, symbol, image, and the terms of the lending agreement. This structure is particularly useful for platforms that need to track and manage NFT lending activities, providing all necessary details for analyzing and processing such transactions.\n",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address involved in the NFT lending transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A more readable label or identifier for the wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique hash identifier of the NFT lending transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Specifies the type of transaction, in this case, NFT lending.",
                                    "example": "nft_lending"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network on which the transaction was conducted.",
                                    "example": "ethereum"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address of the transaction.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address of the transaction.",
                                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                                  },
                                  "from_label": {
                                    "type": "string",
                                    "description": "A readable version of the 'from' wallet address.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to_label": {
                                    "type": "string",
                                    "description": "A readable version of the 'to' wallet address.",
                                    "example": "0xcfdb...6f8ff"
                                  },
                                  "thumbnail": {
                                    "type": "string",
                                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "image": {
                                    "type": "string",
                                    "description": "A full image URL of the NFT.",
                                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "action": {
                                    "type": "string",
                                    "description": "Describes the action taken in the NFT lending transaction, such as 'buy', 'lend', etc.",
                                    "example": "buy"
                                  },
                                  "currency_address": {
                                    "type": "string",
                                    "description": "The blockchain address of the currency used in the transaction.",
                                    "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                                  },
                                  "currency_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the currency used in the transaction.",
                                    "example": "OpenSea"
                                  },
                                  "interest": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The interest rate applied in the NFT lending transaction.",
                                    "example": 0.0151
                                  },
                                  "nft_address": {
                                    "type": "string",
                                    "description": "The blockchain address of the NFT involved in the transaction.",
                                    "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                                  },
                                  "nft_name": {
                                    "type": "string",
                                    "description": "The name of the NFT.",
                                    "example": "Gemesis"
                                  },
                                  "nft_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the NFT.",
                                    "example": "OSP"
                                  },
                                  "platform": {
                                    "type": "string",
                                    "description": "The platform or service through which the NFT lending transaction was conducted.",
                                    "example": "Blend"
                                  },
                                  "nft_token_id": {
                                    "type": "string",
                                    "description": "The unique identifier for the specific NFT within its collection.",
                                    "example": 32507
                                  },
                                  "price": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price at which the NFT was lent or transacted.",
                                    "example": 0.0151
                                  },
                                  "price_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The equivalent USD value of the transaction price.",
                                    "example": 32.911356
                                  },
                                  "terms": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Specifies the terms of the NFT lending agreement.",
                                    "example": 0.0151
                                  },
                                  "refinance": {
                                    "type": "boolean",
                                    "description": "Indicates whether the transaction involved refinancing of the NFT.",
                                    "example": false
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "to",
                                  "from_label",
                                  "to_label",
                                  "thumbnail",
                                  "image",
                                  "action",
                                  "currency_address",
                                  "currency_symbol",
                                  "interest",
                                  "nft_address",
                                  "nft_name",
                                  "nft_symbol",
                                  "platform",
                                  "nft_token_id",
                                  "price",
                                  "price_usd",
                                  "terms",
                                  "refinance"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object represents a detailed structure for a blockchain transaction, encompassing various aspects like wallet addresses, transaction hash, type, associated chains, and financial details. It is designed to provide a comprehensive view of a transaction, including the wallets involved, the transaction's nature, the chains it spans, and the financial details like the amount and its equivalent in USD. This structure is ideal for applications that require detailed tracking and analysis of blockchain transactions.\n",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address involved in the transaction.",
                                    "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A shortened, more readable version of the wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique hash identifier of the transaction.",
                                    "example": "0xb23dc807e8063feaefe20644f85d13a7238a8b01b9fd167135ef664146692f99"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "The type of transaction.",
                                    "example": "bridge"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain on which the transaction occurred, like 'ethereum'.",
                                    "example": "ethereum"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numeric index or identifier for the transaction.",
                                    "example": 7
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp when the transaction occurred.",
                                    "example": 1702899899
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain in which the transaction is included.",
                                    "example": 18812661
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address of the transaction.",
                                    "example": "0xecc19e177d24551aa7ed6bc6fe566eca726cc8a9"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address of the transaction.",
                                    "example": "0xbf3b71decbcefabb3210b9d8f18ec22e0556f5f0"
                                  },
                                  "from_label": {
                                    "type": "string",
                                    "description": "A shortened, more readable version of the originating wallet address.",
                                    "example": "0xecc1...cc8a9"
                                  },
                                  "to_label": {
                                    "type": "string",
                                    "description": "A shortened, more readable version of the destination wallet address.",
                                    "example": "0xbf3b...6f5f0"
                                  },
                                  "token_address": {
                                    "type": "string",
                                    "description": "The address of the token involved in the transaction.",
                                    "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                                  },
                                  "token_name": {
                                    "type": "string",
                                    "description": "The name of the token involved in the transaction.",
                                    "example": "Wrapped Ether"
                                  },
                                  "token_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the token involved in the transaction.",
                                    "example": "WETH"
                                  },
                                  "token_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The amount of the token involved in the transaction.",
                                    "example": 0.09956219862680922
                                  },
                                  "amount_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                                    "example": 212.00276764599622
                                  },
                                  "from_chain": {
                                    "type": "string",
                                    "description": "The originating chain of the transaction, in cases of cross-chain activities.",
                                    "example": "Arbitrum"
                                  },
                                  "to_chain": {
                                    "type": "string",
                                    "description": "The destination chain of the transaction, in cases of cross-chain activities.",
                                    "example": "Ethereum"
                                  },
                                  "platform": {
                                    "type": "string",
                                    "description": "The platform or service used for the transaction.",
                                    "example": "Stargate"
                                  },
                                  "price": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the token at the time of the transaction.",
                                    "example": 2129.35
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Specifies the nature of the transaction, like 'withdraw', 'deposit', etc.",
                                    "example": "withdraw"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "to",
                                  "from_label",
                                  "to_label",
                                  "token_address",
                                  "token_name",
                                  "token_symbol",
                                  "amount",
                                  "amount_usd",
                                  "from_chain",
                                  "to_chain",
                                  "platform",
                                  "price",
                                  "type",
                                  "token_icon_link"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a contract interaction event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "contract_address": {
                                    "type": "string",
                                    "description": "The address of the smart contract involved in the interaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "contract_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the smart contract.",
                                    "example": "Uniswap V3"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "to",
                                  "contract_address",
                                  "contract_label"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a wrap event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "dex": {
                                    "type": "string",
                                    "description": "The decentralized exchange where the wrap transaction occurred.",
                                    "example": "Uniswap"
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "action": {
                                    "type": "string"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount of tokens wrapped in the transaction.",
                                    "example": 100
                                  },
                                  "amount_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the wrapped tokens.",
                                    "example": "100.0"
                                  },
                                  "contract_address": {
                                    "type": "string",
                                    "description": "The address of the smart contract involved in the interaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the token wrapped in the transaction.",
                                    "example": "Wrapped Ether"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The symbol of the token wrapped in the transaction.",
                                    "example": "WETH"
                                  },
                                  "token_price_usd": {
                                    "type": "number",
                                    "description": "The price of the token in USD at the time of the transaction.",
                                    "example": "100.0"
                                  },
                                  "token_type": {
                                    "type": "string",
                                    "description": "The type of token wrapped in the transaction.",
                                    "example": "ERC20"
                                  },
                                  "token_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "dex",
                                  "from",
                                  "to",
                                  "action",
                                  "amount",
                                  "amount_usd",
                                  "contract_address",
                                  "name",
                                  "symbol",
                                  "token_price_usd",
                                  "token_type",
                                  "token_icon_link"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a Sudo Pool event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "dex": {
                                    "type": "string",
                                    "description": "The decentralized exchange where the wrap transaction occurred.",
                                    "example": "Uniswap"
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "nft_address": {
                                    "type": "string",
                                    "description": "The address of the NFT contract involved in the interaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "nft_amount": {
                                    "type": "integer",
                                    "description": "The amount of NFTs involved in the transaction.",
                                    "example": 1
                                  },
                                  "nft_price": {
                                    "type": "number",
                                    "description": "The price of the NFT in the transaction.",
                                    "example": 100
                                  },
                                  "nft_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the NFT in the transaction.",
                                    "example": "NFT"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "token0_address": {
                                    "type": "string",
                                    "description": "The address of the first token in the LP pair.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "token0_amount": {
                                    "type": "number",
                                    "description": "The amount of the first token in the LP pair.",
                                    "example": 100
                                  },
                                  "token0_amount_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the first token in the LP pair.",
                                    "example": 100
                                  },
                                  "token0_name": {
                                    "type": "string",
                                    "description": "The name of the first token in the LP pair.",
                                    "example": "Wrapped Ether"
                                  },
                                  "token0_price_usd": {
                                    "type": "number",
                                    "description": "The price of the first token in the LP pair in USD.",
                                    "example": 100
                                  },
                                  "token0_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the first token in the LP pair.",
                                    "example": "WETH"
                                  },
                                  "token0_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "nft_address",
                                  "nft_amount",
                                  "nft_price",
                                  "nft_symbol",
                                  "token0_address",
                                  "token0_amount",
                                  "token0_amount_usd",
                                  "token0_name",
                                  "token0_price_usd",
                                  "token0_symbol",
                                  "from",
                                  "to",
                                  "token0_icon_link"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a reward event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "The address of the token involved in the transaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount of tokens involved in the transaction.",
                                    "example": 100
                                  },
                                  "amount_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                                    "example": 100
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the token involved in the transaction.",
                                    "example": "Wrapped Ether"
                                  },
                                  "price_usd": {
                                    "type": "number",
                                    "description": "The price of the token in USD.",
                                    "example": 100
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The symbol of the token involved in the transaction.",
                                    "example": "WETH"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "address",
                                  "amount",
                                  "amount_usd",
                                  "from",
                                  "name",
                                  "price_usd",
                                  "symbol"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a staking event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "from_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the originating wallet.",
                                    "example": "Alice"
                                  },
                                  "to_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the destination wallet.",
                                    "example": "Bob"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount of tokens staked in the transaction.",
                                    "example": 100
                                  },
                                  "amount_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the staked tokens.",
                                    "example": 100
                                  },
                                  "token_price_usd": {
                                    "type": "number",
                                    "description": "The price of the token in USD.",
                                    "example": 100
                                  },
                                  "contract_address": {
                                    "type": "string",
                                    "description": "The address of the smart contract involved in the interaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The symbol of the token staked in the transaction.",
                                    "example": "WETH"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the token staked in the transaction.",
                                    "example": "Wrapped Ether"
                                  },
                                  "action": {
                                    "type": "string",
                                    "description": "The action taken in the staking transaction.",
                                    "example": "stake"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "to",
                                  "from_label",
                                  "to_label",
                                  "amount",
                                  "amount_usd",
                                  "token_price_usd",
                                  "contract_address",
                                  "symbol",
                                  "name",
                                  "action"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a Perpetual event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "action": {
                                    "type": "string",
                                    "description": "The action taken in the Perpetual event.",
                                    "example": "buy"
                                  },
                                  "amount_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                                    "example": 100
                                  },
                                  "average_price": {
                                    "type": "number",
                                    "description": "The average price of the tokens involved in the transaction.",
                                    "example": 100
                                  },
                                  "base_token_address": {
                                    "type": "string",
                                    "description": "The address of the base token involved in the transaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "base_token_amount": {
                                    "type": "number",
                                    "description": "The amount of base tokens involved in the transaction.",
                                    "example": 100
                                  },
                                  "base_token_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the base token involved in the transaction.",
                                    "example": "ETH"
                                  },
                                  "dex": {
                                    "type": "string",
                                    "description": "The decentralized exchange where the Perpetual transaction occurred.",
                                    "example": "Uniswap"
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "liquidation": {
                                    "type": "boolean",
                                    "description": "Indicates whether the transaction was a liquidation.",
                                    "example": false
                                  },
                                  "liquidation_price": {
                                    "type": "number",
                                    "description": "The price at which the liquidation occurred.",
                                    "example": 100
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "trade_direction": {
                                    "type": "string",
                                    "description": "The direction of the trade in the Perpetual transaction.",
                                    "example": "long"
                                  },
                                  "perp_details": {
                                    "type": "string",
                                    "description": "Additional details about the Perpetual transaction.",
                                    "example": "details"
                                  },
                                  "token0_address": {
                                    "type": "string",
                                    "description": "The address of the first token in the LP pair.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "token0_amount": {
                                    "type": "number",
                                    "description": "The amount of the first token in the LP pair.",
                                    "example": 100
                                  },
                                  "token0_amount_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the first token in the LP pair.",
                                    "example": 100
                                  },
                                  "token0_name": {
                                    "type": "string",
                                    "description": "The name of the first token in the LP pair.",
                                    "example": "Wrapped Ether"
                                  },
                                  "token0_price_usd": {
                                    "type": "number",
                                    "description": "The price of the first token in the LP pair in USD.",
                                    "example": 100
                                  },
                                  "token0_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the first token in the LP pair.",
                                    "example": "WETH"
                                  },
                                  "token0_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  },
                                  "token1_address": {
                                    "type": "string",
                                    "description": "The address of the second token in the LP pair.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "token1_amount": {
                                    "type": "number",
                                    "description": "The amount of the second token in the LP pair.",
                                    "example": 100
                                  },
                                  "token1_amount_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the second token in the LP pair.",
                                    "example": 100
                                  },
                                  "token1_name": {
                                    "type": "string",
                                    "description": "The name of the second token in the LP pair.",
                                    "example": "Wrapped Ether"
                                  },
                                  "token1_price_usd": {
                                    "type": "number",
                                    "description": "The price of the second token in the LP pair in USD.",
                                    "example": 100
                                  },
                                  "token1_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the second token in the LP pair.",
                                    "example": "WETH"
                                  },
                                  "token1_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  },
                                  "realized_pnl": {
                                    "type": "number",
                                    "description": "The realized profit and loss of the Perpetual transaction.",
                                    "example": 100
                                  },
                                  "is_nft_perp": {
                                    "type": "boolean",
                                    "description": "Indicates whether the Perpetual transaction involves an NFT.",
                                    "example": false
                                  },
                                  "position_size": {
                                    "type": "number",
                                    "description": "The size of the position in the Perpetual transaction.",
                                    "example": 100
                                  },
                                  "position_size_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the position size.",
                                    "example": 100
                                  },
                                  "leverage": {
                                    "type": "number",
                                    "description": "The leverage used in the Perpetual transaction.",
                                    "example": 100
                                  },
                                  "unrealized_pnl": {
                                    "type": "number",
                                    "description": "The unrealized profit and loss of the Perpetual transaction.",
                                    "example": 100
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "action",
                                  "amount_usd",
                                  "average_price",
                                  "base_token_address",
                                  "base_token_amount",
                                  "base_token_symbol",
                                  "dex",
                                  "from",
                                  "liquidation",
                                  "liquidation_price",
                                  "to",
                                  "trade_direction",
                                  "perp_details",
                                  "token0_address",
                                  "token0_amount",
                                  "token0_amount_usd",
                                  "token0_name",
                                  "token0_price_usd",
                                  "token0_symbol",
                                  "token0_icon_link",
                                  "token1_address",
                                  "token1_amount",
                                  "token1_amount_usd",
                                  "token1_name",
                                  "token1_price_usd",
                                  "token1_symbol",
                                  "token1_icon_link",
                                  "realized_pnl",
                                  "is_nft_perp"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a flashloan event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "address": {
                                    "type": "string",
                                    "description": "The address of the token involved in the transaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount of tokens involved in the transaction.",
                                    "example": 100
                                  },
                                  "amount_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                                    "example": 100
                                  },
                                  "dex": {
                                    "type": "string",
                                    "description": "The decentralized exchange (DEX) where the flashloan transaction took place.",
                                    "example": "Uniswap"
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "health_factor": {
                                    "type": "number",
                                    "description": "The health factor of the wallet after the flashloan transaction.",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the token involved in the transaction.",
                                    "example": "Wrapped Ether"
                                  },
                                  "platform": {
                                    "type": "string",
                                    "description": "The platform where the flashloan transaction took place.",
                                    "example": "Aave"
                                  },
                                  "price_usd": {
                                    "type": "number",
                                    "description": "The price of the token in USD.",
                                    "example": 100
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "description": "The symbol of the token involved in the transaction.",
                                    "example": "ETH"
                                  },
                                  "token_icon_link": {
                                    "type": "string",
                                    "description": "A link to the icon of the token involved in the transaction.",
                                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "address",
                                  "amount",
                                  "amount_usd",
                                  "dex",
                                  "from",
                                  "health_factor",
                                  "name",
                                  "platform",
                                  "price_usd",
                                  "symbol",
                                  "token_icon_link"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a contract creation event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "amount_usd": {
                                    "type": "number",
                                    "description": "The equivalent amount in USD of the wrapped tokens.",
                                    "example": "100.0"
                                  },
                                  "contract_address": {
                                    "type": "string",
                                    "description": "The address of the smart contract involved in the interaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "from_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the originating wallet.",
                                    "example": "Alice"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "amount_usd",
                                  "contract_address",
                                  "from",
                                  "from_label"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a NFT liquidation event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "contract_address": {
                                    "type": "string",
                                    "description": "The address of the NFT contract involved in the interaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "currency_address": {
                                    "type": "string",
                                    "description": "The address of the currency involved in the transaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "currency_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the currency involved in the transaction.",
                                    "example": "ETH"
                                  },
                                  "dex": {
                                    "type": "string",
                                    "description": "The decentralized exchange where the wrap transaction occurred.",
                                    "example": "Uniswap"
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "nft_address": {
                                    "type": "string",
                                    "description": "The address of the NFT contract involved in the interaction.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "nft_name": {
                                    "type": "string",
                                    "description": "The name of the NFT in the transaction.",
                                    "example": "NFT"
                                  },
                                  "nft_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the NFT in the transaction.",
                                    "example": "NFT"
                                  },
                                  "platform": {
                                    "type": "string",
                                    "description": "The platform where the flashloan transaction took place.",
                                    "example": "Aave"
                                  },
                                  "price": {
                                    "type": "number",
                                    "description": "The price of the NFT in the transaction.",
                                    "example": 100
                                  },
                                  "price_usd": {
                                    "type": "number",
                                    "description": "The price of the NFT in USD.",
                                    "example": 100
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "token_id": {
                                    "type": "string",
                                    "description": "The unique identifier of the NFT in the transaction.",
                                    "example": "1"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "contract_address",
                                  "currency_address",
                                  "currency_symbol",
                                  "dex",
                                  "from",
                                  "nft_address",
                                  "nft_name",
                                  "nft_symbol",
                                  "platform",
                                  "price",
                                  "price_usd",
                                  "to",
                                  "token_id"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing an option event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address participating in the LP transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                    "example": "vitalik.eth"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique transaction hash identifying this specific LP transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                    "example": "lp"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                    "example": "optimism"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "action": {
                                    "type": "string",
                                    "description": "The action taken in the option event.",
                                    "example": "buy"
                                  },
                                  "amount": {
                                    "type": "number",
                                    "description": "The amount of tokens involved in the transaction.",
                                    "example": 100
                                  },
                                  "asset": {
                                    "type": "string",
                                    "description": "The asset involved in the option event.",
                                    "example": "ETH"
                                  },
                                  "dex": {
                                    "type": "string",
                                    "description": "The decentralized exchange (DEX) where the option event took place.",
                                    "example": "Uniswap"
                                  },
                                  "direction": {
                                    "type": "string",
                                    "description": "The direction of the option event.",
                                    "example": "call"
                                  },
                                  "expiry": {
                                    "type": "string",
                                    "description": "The expiry date of the option.",
                                    "example": "2022-12-31"
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "option_price_usd": {
                                    "type": "number",
                                    "description": "The price of the option in USD.",
                                    "example": 100
                                  },
                                  "position_status": {
                                    "type": "string",
                                    "description": "The status of the option position.",
                                    "example": "open"
                                  },
                                  "spot_price_usd": {
                                    "type": "number",
                                    "description": "The spot price of the asset in USD.",
                                    "example": 100
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the option event.",
                                    "example": "active"
                                  },
                                  "strike_price_usd": {
                                    "type": "number",
                                    "description": "The strike price of the option in USD.",
                                    "example": 100
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address for the transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of option event.",
                                    "example": "call"
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "action",
                                  "amount",
                                  "asset",
                                  "dex",
                                  "direction",
                                  "expiry",
                                  "from",
                                  "option_price_usd",
                                  "position_status",
                                  "spot_price_usd",
                                  "status",
                                  "strike_price_usd",
                                  "to",
                                  "type"
                                ]
                              },
                              {
                                "type": "object",
                                "description": "This object provides a structure for representing a NFT sweep event on the blockchain.",
                                "properties": {
                                  "wallet": {
                                    "type": "string",
                                    "description": "The wallet address involved in the NFT trading transaction.",
                                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                                  },
                                  "wallet_label": {
                                    "type": "string",
                                    "description": "A readable label for the wallet address.",
                                    "example": "0xa4c8...f9457d"
                                  },
                                  "tx_hash": {
                                    "type": "string",
                                    "description": "The unique hash identifier of the NFT trading transaction.",
                                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                                  },
                                  "tx_type": {
                                    "type": "string",
                                    "description": "Specifies the type of transaction, in this case, NFT trading.",
                                    "example": "nft_trade"
                                  },
                                  "chain": {
                                    "type": "string",
                                    "description": "The blockchain network where the trading transaction occurred.",
                                    "example": "ethereum"
                                  },
                                  "index": {
                                    "type": "integer",
                                    "description": "A numerical index or identifier for the transaction.",
                                    "example": 10
                                  },
                                  "timestamp": {
                                    "type": "integer",
                                    "description": "The timestamp marking when the transaction was executed.",
                                    "example": 1702899395
                                  },
                                  "block": {
                                    "type": "integer",
                                    "description": "The block number on the blockchain where this transaction is recorded.",
                                    "example": 113650309
                                  },
                                  "from": {
                                    "type": "string",
                                    "description": "The originating wallet address of the transaction.",
                                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "The destination wallet address of the transaction.",
                                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                                  },
                                  "thumbnail": {
                                    "type": "string",
                                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "image": {
                                    "type": "string",
                                    "description": "A full image URL of the NFT.",
                                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                                  },
                                  "action": {
                                    "type": "string",
                                    "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                                    "example": "buy"
                                  },
                                  "contract": {
                                    "type": "string",
                                    "description": "The blockchain contract address associated with the NFT.",
                                    "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                                  },
                                  "marketplace": {
                                    "type": "string",
                                    "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                                    "example": "OpenSea"
                                  },
                                  "nft_address": {
                                    "type": "string",
                                    "description": "The blockchain address of the NFT involved in the trade.",
                                    "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                                  },
                                  "nft_name": {
                                    "type": "string",
                                    "description": "The name of the NFT traded.",
                                    "example": "Gemesis"
                                  },
                                  "nft_symbol": {
                                    "type": "string",
                                    "description": "The symbol associated with the NFT.",
                                    "example": "OSP"
                                  },
                                  "nft_token_id": {
                                    "type": "string",
                                    "description": "The unique token ID of the NFT involved in the trade.",
                                    "example": 32507
                                  },
                                  "price": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price at which the NFT was traded.",
                                    "example": 0.0151
                                  },
                                  "price_usd": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The equivalent USD value of the NFT trade.",
                                    "example": 32.911356
                                  },
                                  "profit": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The profit earned from the trade. This may be zero in some transactions.",
                                    "example": 0
                                  },
                                  "currency_symbol": {
                                    "type": "string",
                                    "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                                    "example": "WETH"
                                  },
                                  "buyer": {
                                    "type": "string",
                                    "description": "The wallet address of the buyer in the trade."
                                  },
                                  "seller": {
                                    "type": "string",
                                    "description": "The wallet address of the seller in the trade."
                                  },
                                  "token": {
                                    "type": "string",
                                    "description": "The token type used in the transaction."
                                  },
                                  "first_interaction": {
                                    "type": "boolean",
                                    "description": "Indicates whether this was the first interaction between the buyer and seller."
                                  },
                                  "bid_accepted": {
                                    "type": "boolean",
                                    "description": "Specifies if the transaction involved a bid being accepted."
                                  }
                                },
                                "required": [
                                  "wallet",
                                  "wallet_label",
                                  "tx_hash",
                                  "tx_type",
                                  "chain",
                                  "index",
                                  "timestamp",
                                  "block",
                                  "from",
                                  "to",
                                  "thumbnail",
                                  "image",
                                  "action",
                                  "contract",
                                  "marketplace",
                                  "nft_address",
                                  "nft_name",
                                  "nft_symbol",
                                  "nft_token_id",
                                  "price",
                                  "price_usd",
                                  "profit",
                                  "currency_symbol",
                                  "buyer",
                                  "seller",
                                  "token",
                                  "first_interaction",
                                  "bid_accepted"
                                ]
                              }
                            ]
                          }
                        },
                        "paging": {
                          "type": "object",
                          "description": "Provides details about pagination, indicating the total number of rows on the current page, whether a next page exists, and the identifier for the next object.",
                          "properties": {
                            "total_rows_in_page": {
                              "type": "integer",
                              "minimum": 0,
                              "description": "The total number of rows present in the current page of the response.",
                              "example": 10
                            },
                            "has_next_page": {
                              "type": "boolean",
                              "description": "A boolean flag indicating if there is a subsequent page available after the current page.",
                              "example": true
                            },
                            "next_object": {
                              "type": "string",
                              "description": "An identifier for the next object or page, used for pagination purposes."
                            }
                          },
                          "required": [
                            "total_rows_in_page",
                            "has_next_page"
                          ]
                        }
                      },
                      "required": [
                        "items",
                        "paging"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{wallet}/pnl/tokens": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Token PNL",
        "description": "This endpoint retrieves a PnL values for a specified wallet by different tokens.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getTokensPNL",
        "parameters": [
          {
            "name": "wallet",
            "in": "path",
            "description": "Get P&L values for wallet.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
          },
          {
            "name": "chains",
            "in": "query",
            "description": "Filter data by specific blockchain chains (e.g. ethereum), comma-separated for multiple values (e.g, ethereum,polygon)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "ethereum",
              "base",
              "arbitrum"
            ]
          },
          {
            "name": "timeframe",
            "in": "query",
            "description": "Set time range for filtering data, number of days from 1d to max. Default - max timeframe.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "5d"
          },
          {
            "name": "next_object",
            "in": "query",
            "description": "Next page for pagination.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 4
          },
          {
            "name": "token",
            "in": "query",
            "description": "Filter data by specific tokens (e.g. PEPECAT or FfhArvgv8WB7eZ6qwENMouJRzcVpQVDoDtTuHrCk4Cxi), comma-separated for multiple values (e.g, usdc,usdt)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "PEPECAT",
              "FfhArvgv8WB7eZ6qwENMouJRzcVpQVDoDtTuHrCk4Cxi"
            ]
          },
          {
            "name": "cex_transfers",
            "in": "query",
            "description": "Include cex transfers for calculating P&L. Default - false.",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull tokens PnL response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /v1/tokens_pnl endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response, including a list of tokens PNL items and pagination details.",
                      "properties": {
                        "items": {
                          "type": "array",
                          "description": "An array of tokens PNL items, each providing detailed information on token transactions and performance.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "num_swaps": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "total_buy_usd": {
                                "type": "number",
                                "format": "double"
                              },
                              "total_buy_amount": {
                                "type": "number",
                                "format": "double"
                              },
                              "total_sell_usd": {
                                "type": "number",
                                "format": "double"
                              },
                              "total_sell_amount": {
                                "type": "number",
                                "format": "double"
                              },
                              "average_buy_price": {
                                "type": "number",
                                "format": "double"
                              },
                              "average_sell_price": {
                                "type": "number",
                                "format": "double"
                              },
                              "total_pnl_usd": {
                                "type": "number",
                                "format": "double"
                              },
                              "roi_percentage": {
                                "type": "number",
                                "format": "double"
                              },
                              "unrealized_pnl_usd": {
                                "type": "number",
                                "format": "double"
                              },
                              "unrealized_roi_percentage": {
                                "type": "number",
                                "format": "double"
                              },
                              "token_price": {
                                "type": "number",
                                "format": "double"
                              },
                              "token_address": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_name": {
                                "type": "string"
                              },
                              "chain": {
                                "type": "string"
                              },
                              "is_honeypot": {
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "paging": {
                          "type": "object",
                          "properties": {
                            "total_rows_in_page": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "has_next_page": {
                              "type": "boolean"
                            },
                            "next_object": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total_rows_in_page",
                            "has_next_page"
                          ]
                        }
                      },
                      "required": [
                        "items",
                        "paging"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{wallet}/pnl/nfts": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "NFT PNL",
        "description": "This endpoint retrieves the PnL value for an NFT collection on Ethereum.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getNftsPNL",
        "parameters": [
          {
            "name": "wallet",
            "in": "path",
            "description": "Get NFT P&L values for wallet.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
          },
          {
            "name": "timeframe",
            "in": "query",
            "description": "Set time range for filtering data, number of days from 1d to max. Default - max timeframe.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "5d"
          },
          {
            "name": "next_object",
            "in": "query",
            "description": "Next page for pagination.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull Nft PnL response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /v1/nftss_pnl endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response, including a list of Nft PnL items and pagination details.",
                      "properties": {
                        "items": {
                          "type": "array",
                          "description": "An array of Nft PnL items, each providing detailed information on token transactions and performance.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "num_swaps": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "total_buy_amount": {
                                "type": "number",
                                "format": "double"
                              },
                              "total_sell_amount": {
                                "type": "number",
                                "format": "double"
                              },
                              "total_buy_avg": {
                                "type": "number",
                                "format": "double"
                              },
                              "total_sell_avg": {
                                "type": "number",
                                "format": "double"
                              },
                              "total_buy_usd": {
                                "type": "number",
                                "format": "double"
                              },
                              "total_sell_usd": {
                                "type": "number",
                                "format": "double"
                              },
                              "profit_loss": {
                                "type": "number",
                                "format": "double"
                              },
                              "roi_percentage": {
                                "type": "number",
                                "format": "double"
                              },
                              "chain": {
                                "type": "string"
                              },
                              "token_address": {
                                "type": "string"
                              },
                              "nft_symbol": {
                                "type": "string"
                              },
                              "nft_name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "paging": {
                          "type": "object",
                          "properties": {
                            "total_rows_in_page": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "has_next_page": {
                              "type": "boolean"
                            },
                            "next_object": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total_rows_in_page",
                            "has_next_page"
                          ]
                        }
                      },
                      "required": [
                        "items",
                        "paging"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{wallet}/pnl/total-stats": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Aggregated Token PNL",
        "description": "This endpoint retrieves aggregated PnL stats for a specified wallet.\n### Cost per Request\nCost per request = 20 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getTotalStats",
        "parameters": [
          {
            "name": "wallet",
            "in": "path",
            "description": "Get tags associated with wallet.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
          },
          {
            "name": "chains",
            "in": "query",
            "description": "Filter transactions by specific blockchain chains (e.g. ethereum), comma-separated for multiple values (e.g, ethereum,polygon)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "ethereum",
              "base",
              "arbitrum"
            ]
          },
          {
            "name": "timeframe",
            "in": "query",
            "description": "Set time range for filtering data, number of days from 1d, 7d or 30d. Default - max timeframe.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "7d"
          },
          {
            "name": "cex_transfers",
            "in": "query",
            "description": "Include CEX transfers in the response.",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull Total Stats response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /v1/{wallet}/pnl/total-stats endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response, including aggregated PnL stats for the specified wallet.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address for which the PnL stats are provided.",
                          "example": "6sdb5o3XWM27RSjcYqoVZ88ruuPzHTfqFQEq26nN6eVq"
                        },
                        "realized_pnl_usd": {
                          "type": "integer",
                          "format": "float64",
                          "description": "The total PnL in usd for the specified wallet.",
                          "example": 10000
                        },
                        "realized_roi_percentage": {
                          "type": "integer",
                          "format": "float64",
                          "description": "The total ROI percentage for the specified wallet.",
                          "example": 52.2
                        },
                        "tokens_traded": {
                          "type": "integer",
                          "format": "float64",
                          "description": "The total number of tokens traded for the specified wallet.",
                          "example": 25
                        },
                        "unrealized_pnl_usd": {
                          "type": "integer",
                          "format": "float64",
                          "description": "The total unrealized PnL in usd for the specified wallet.",
                          "example": 5000
                        },
                        "unrealized_roi_percentage": {
                          "type": "integer",
                          "format": "float64",
                          "description": "The total unrealized ROI percentage for the specified wallet.",
                          "example": 75.2
                        },
                        "winrate": {
                          "type": "integer",
                          "format": "float64",
                          "description": "The winrate percentage for the specified wallet.",
                          "example": 53.5
                        },
                        "average_holding_time": {
                          "type": "integer",
                          "format": "float64",
                          "description": "The average holding time for the specified wallet in hours.",
                          "example": 5
                        },
                        "combined_pnl_usd": {
                          "type": "integer",
                          "format": "float64",
                          "description": "The combined PnL in usd for the specified wallet.",
                          "example": 15000
                        },
                        "combined_roi_percentage": {
                          "type": "integer",
                          "format": "float64",
                          "description": "The combined ROI percentage for the specified wallet.",
                          "example": 127.4
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{wallet}/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Tags",
        "deprecated": true,
        "x-deprecated-replacement": "/api/v1/tags",
        "description": "# This endpoint is deprecated. Please use the `/api/v1/tags` endpoint instead.\nThis endpoint retrieves tags associated with a specific wallet address. Tags provide insights into wallet activity, such as NFT trading volume or participation in DeFi protocols.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getWalletTags",
        "parameters": [
          {
            "name": "wallet",
            "in": "path",
            "description": "Get tags associated with wallet.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull Tags response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /v1/{wallet}/tags endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response.",
                      "properties": {
                        "tags": {
                          "type": "array",
                          "description": "An array of tags associated with the wallet address.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "A unique identifier for the tag.",
                                "example": "nft_trader",
                                "type": "string",
                                "enum": [
                                  "high_volume_dex_trader",
                                  "early_defi",
                                  "multichain",
                                  "new_wallet",
                                  "high_leverage_trader",
                                  "nft_trader",
                                  "nftfi",
                                  "nft_high_pnl",
                                  "popular_wallet",
                                  "airdrop_hunter",
                                  "gem_finder",
                                  "high_win_rate",
                                  "new_whale",
                                  "flipper",
                                  "honeypot",
                                  "mev"
                                ]
                              },
                              "tag": {
                                "type": "string",
                                "description": "The tag label or name.",
                                "example": "NFT Trader"
                              },
                              "description": {
                                "type": "string",
                                "description": "A description of what the tag represents.",
                                "example": "More than 50 ETH volume trading NFTs"
                              }
                            },
                            "required": [
                              "key",
                              "tag",
                              "description"
                            ]
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{wallet}/related-wallets": {
      "get": {
        "tags": [
          "Related Wallets"
        ],
        "summary": "Related Wallets",
        "description": "This endpoint retrieves a list of wallets related to the specified wallet address. Related wallets are determined based on shared activity, such as token transfers, NFT trades, or participation in DeFi protocols.\n### Cost per Request\nCost per request = 10 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getRelatedWallets",
        "parameters": [
          {
            "name": "wallet",
            "in": "path",
            "description": "Get related wallets for wallet.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
          },
          {
            "name": "sort_criteria",
            "in": "query",
            "description": "Sort wallets by the specified criteria.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "inflow_asc",
                "inflow_desc",
                "outflow_asc",
                "outflow_desc",
                "transactions_asc",
                "transactions_desc"
              ]
            },
            "example": "inflow_asc"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull Related Wallets response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /v1/{wallet}/related-wallets endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response.",
                      "properties": {
                        "related_wallets": {
                          "type": "array",
                          "description": "An array of related wallets associated with the wallet address.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address for which the related wallets are provided.",
                                "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
                              },
                              "inflow_usd": {
                                "type": "integer",
                                "description": "The total inflow in usd for the specified wallet.",
                                "example": 10000
                              },
                              "outflow_usd": {
                                "type": "integer",
                                "description": "The total outflow in usd for the specified wallet.",
                                "example": 15000
                              },
                              "total_usd": {
                                "type": "integer",
                                "description": "The total inflow and outflow in usd for the specified wallet.",
                                "example": 25000
                              },
                              "count": {
                                "type": "integer",
                                "description": "The total number of transactions for the specified wallet.",
                                "example": 2
                              },
                              "label": {
                                "type": "string",
                                "description": "The label for the related wallet.",
                                "example": "Wallet Name"
                              }
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Wallets Tags",
        "description": "This endpoint retrieves tags associated with a specific wallet address.  Tags provide insights into wallet activity.\nNote, tags will only be returned for wallets indexed by the Cielo engine.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getWalletsTags",
        "parameters": [
          {
            "name": "wallet",
            "in": "query",
            "description": "Get tags associated with wallets in the list. Maximum of 50 wallets.",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": [
              "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull Wallets Tags response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /v1/tags endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "description": "Contains the main data of the response.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "wallet": {
                            "type": "string",
                            "description": "The wallet address associated with the tags.",
                            "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
                          },
                          "tags": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "A unique identifier for the tag.",
                                "example": "nft_trader",
                                "type": "string",
                                "enum": [
                                  "high_volume_dex_trader",
                                  "early_defi",
                                  "multichain",
                                  "new_wallet",
                                  "high_leverage_trader",
                                  "nft_trader",
                                  "nftfi",
                                  "nft_high_pnl",
                                  "popular_wallet",
                                  "airdrop_hunter",
                                  "gem_finder",
                                  "high_win_rate",
                                  "new_whale",
                                  "flipper",
                                  "honeypot",
                                  "mev"
                                ]
                              },
                              "tag": {
                                "type": "string",
                                "description": "The tag label or name.",
                                "example": "NFT Trader"
                              },
                              "description": {
                                "type": "string",
                                "description": "A description of what the tag represents.",
                                "example": "More than 50 ETH volume trading NFTs"
                              }
                            },
                            "required": [
                              "key",
                              "tag",
                              "description"
                            ]
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tags/wallets": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Wallets by Tag",
        "description": "This endpoint retrieves wallets associated with a specific tag. Tags provide insights into wallet activity.\n### Cost per Request\nCost per request = 10 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getWalletsByTag",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Filter wallets by a specific tag.",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "high_volume_dex_trader",
                  "early_defi",
                  "multichain",
                  "new_wallet",
                  "high_leverage_trader",
                  "nft_trader",
                  "nftfi",
                  "nft_high_pnl",
                  "popular_wallet",
                  "airdrop_hunter",
                  "gem_finder",
                  "high_win_rate",
                  "new_whale",
                  "flipper",
                  "honeypot",
                  "mev"
                ]
              }
            },
            "example": [
              "new_wallet",
              "flipper",
              "honeypot"
            ]
          },
          {
            "name": "wallet_type",
            "in": "query",
            "description": "Filter wallets by a specific wallet type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "evm",
                "solana"
              ]
            },
            "example": "solana"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of wallets to return. The default is 20. The maximum value is 50.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 10
          },
          {
            "name": "next_object",
            "in": "query",
            "description": "Next page for pagination.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull Wallets by Tag response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /v1/tags/wallets endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response.",
                      "properties": {
                        "items": {
                          "type": "array",
                          "description": "An array of related wallets associated with the wallet address.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address for a wallet with the provided tags.",
                                "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
                              },
                              "wallet_type": {
                                "type": "string",
                                "enum": [
                                  "evm",
                                  "solana"
                                ],
                                "description": "The wallet type for the wallet returned.",
                                "example": "evm"
                              }
                            }
                          }
                        },
                        "paging": {
                          "type": "object",
                          "description": "Provides details about pagination, indicating the total number of rows on the current page, whether a next page exists, and the identifier for the next object.",
                          "properties": {
                            "next_page": {
                              "type": "string",
                              "description": "An identifier for the next page, used for pagination purposes."
                            },
                            "has_next_page": {
                              "type": "boolean",
                              "description": "Indicates whether a next page exists."
                            }
                          },
                          "required": [
                            "has_next_page"
                          ]
                        }
                      },
                      "required": [
                        "items",
                        "paging"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracked-wallets": {
      "get": {
        "tags": [
          "Wallet Management"
        ],
        "summary": "Get Tracked Wallets",
        "description": "This endpoint retrieves a list of wallets that are being tracked. Tracked wallets are wallets that are being monitored for activity, such as token transfers, NFT trades, or participation in DeFi protocols.\nPlans Included = Free, Builder, Architect Cost per request = 5 credits.\n",
        "operationId": "getTrackedWallets",
        "parameters": [
          {
            "name": "next_object",
            "in": "query",
            "description": "Next page for pagination.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 4
          },
          {
            "name": "list_id",
            "in": "query",
            "description": "The ID of the list to filter by.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull Get Tracked Wallets response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/tracked-wallets endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response.",
                      "properties": {
                        "tracked_wallets": {
                          "type": "array",
                          "description": "An array of tracked wallets.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "The unique identifier for the tracked wallet.",
                                "example": 1
                              },
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address for which the related wallets are provided.",
                                "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
                              },
                              "label": {
                                "type": "string",
                                "description": "The label for the related wallet.",
                                "example": "Wallet Name"
                              },
                              "type": {
                                "type": "object",
                                "description": "Enumerates the different types of wallets.",
                                "enum": [
                                  "unknown",
                                  "evm",
                                  "solana",
                                  "dydx",
                                  "bitcoin"
                                ]
                              },
                              "list_id": {
                                "type": "number",
                                "description": "The list id for the tracked wallet.",
                                "example": 1
                              },
                              "list": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "integer"
                                  },
                                  "bot_id": {
                                    "type": "integer"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "is_public": {
                                    "type": "boolean"
                                  },
                                  "followed_count": {
                                    "type": "integer"
                                  },
                                  "wallets_count": {
                                    "type": "integer"
                                  },
                                  "share_url": {
                                    "type": "string"
                                  },
                                  "image_url": {
                                    "type": "string"
                                  },
                                  "followed": {
                                    "type": "boolean"
                                  },
                                  "is_creator": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "name",
                                  "created_at",
                                  "bot_id",
                                  "description",
                                  "is_public",
                                  "followed_count",
                                  "wallets_count",
                                  "share_url",
                                  "image_url",
                                  "followed",
                                  "is_creator"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "wallet",
                              "label",
                              "type"
                            ]
                          }
                        },
                        "Paging": {
                          "type": "object",
                          "properties": {
                            "total_rows_in_page": {
                              "type": "number",
                              "description": "The total number of rows in the current page.",
                              "example": 10
                            },
                            "has_next_page": {
                              "type": "boolean",
                              "description": "Indicates whether there is a next page of results.",
                              "example": true
                            },
                            "next_object": {
                              "type": "number",
                              "description": "The index of the next object in the result set.",
                              "example": 11
                            }
                          },
                          "required": [
                            "total_rows_in_page",
                            "has_next_page",
                            "next_object"
                          ]
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Wallet Management"
        ],
        "summary": "Add Tracked Wallet",
        "description": "This endpoint adds a wallet to the list of tracked wallets. Tracked wallets are wallets that are being monitored for activity, such as token transfers, NFT trades, or participation in DeFi protocols.\nPlans Included = Free, Builder, Architect Cost per request = 5 credits.\n",
        "operationId": "addTrackedWallet",
        "requestBody": {
          "description": "The wallet information to be tracked",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The address of the wallet to be tracked"
                  },
                  "label": {
                    "type": "string",
                    "description": "A label for the tracked wallet"
                  },
                  "list_id": {
                    "type": "integer",
                    "description": "The ID of the list to add the wallet to"
                  }
                },
                "required": [
                  "wallet",
                  "label"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfull Add Tracked Wallets response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/tracked-wallets endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "The unique identifier for the tracked wallet.",
                          "example": 1
                        },
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address for which the related wallets are provided.",
                          "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
                        },
                        "label": {
                          "type": "string",
                          "description": "The label for the related wallet.",
                          "example": "Wallet Name"
                        },
                        "type": {
                          "type": "object",
                          "description": "Enumerates the different types of wallets.",
                          "enum": [
                            "unknown",
                            "evm",
                            "solana",
                            "dydx",
                            "bitcoin"
                          ]
                        },
                        "list_id": {
                          "type": "number",
                          "description": "The list id for the tracked wallet.",
                          "example": 1
                        },
                        "list": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "integer"
                            },
                            "bot_id": {
                              "type": "integer"
                            },
                            "description": {
                              "type": "string"
                            },
                            "is_public": {
                              "type": "boolean"
                            },
                            "followed_count": {
                              "type": "integer"
                            },
                            "wallets_count": {
                              "type": "integer"
                            },
                            "share_url": {
                              "type": "string"
                            },
                            "image_url": {
                              "type": "string"
                            },
                            "followed": {
                              "type": "boolean"
                            },
                            "is_creator": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "name",
                            "created_at",
                            "bot_id",
                            "description",
                            "is_public",
                            "followed_count",
                            "wallets_count",
                            "share_url",
                            "image_url",
                            "followed",
                            "is_creator"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "wallet",
                        "label",
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Wallet Management"
        ],
        "summary": "Remove Tracked Wallets",
        "description": "This endpoint removes a wallet from the list of tracked wallets. Tracked wallets are wallets that are being monitored for activity, such as token transfers, NFT trades, or participation in DeFi protocols.\nPlans Included = Free, Builder, Architect Cost per request = 5 credits.\n",
        "operationId": "removeTrackedWallets",
        "requestBody": {
          "description": "The IDs of the wallets to be removed from tracking",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "wallet_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "The list of wallet IDs to be removed from tracking"
                  }
                },
                "required": [
                  "wallet_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfull Delete Tracked Wallets response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/tracked-wallets endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tracked-wallets/{wallet_id}": {
      "put": {
        "tags": [
          "Wallet Management"
        ],
        "summary": "Update Tracked Wallet",
        "description": "This endpoint updates a tracked wallet. Tracked wallets are wallets that are being monitored for activity, such as token transfers, NFT trades, or participation in DeFi protocols.\nPlans Included = Free, Builder, Architect Cost per request = 5 credits.\n",
        "operationId": "updateTrackedWallet",
        "parameters": [
          {
            "name": "wallet_id",
            "in": "path",
            "description": "The ID of the wallet to update",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 123
          }
        ],
        "requestBody": {
          "description": "The wallet information to be tracked",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The address of the wallet to be tracked"
                  },
                  "label": {
                    "type": "string",
                    "description": "A label for the tracked wallet"
                  },
                  "list_id": {
                    "type": "integer",
                    "description": "The ID of the list to add the wallet to"
                  }
                },
                "required": [
                  "wallet",
                  "label"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfull Update Tracked Wallets response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/tracked-wallets/{wallet_id} endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "The unique identifier for the tracked wallet.",
                          "example": 1
                        },
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address for which the related wallets are provided.",
                          "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
                        },
                        "label": {
                          "type": "string",
                          "description": "The label for the related wallet.",
                          "example": "Wallet Name"
                        },
                        "type": {
                          "type": "object",
                          "description": "Enumerates the different types of wallets.",
                          "enum": [
                            "unknown",
                            "evm",
                            "solana",
                            "dydx",
                            "bitcoin"
                          ]
                        },
                        "list_id": {
                          "type": "number",
                          "description": "The list id for the tracked wallet.",
                          "example": 1
                        },
                        "list": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "integer"
                            },
                            "bot_id": {
                              "type": "integer"
                            },
                            "description": {
                              "type": "string"
                            },
                            "is_public": {
                              "type": "boolean"
                            },
                            "followed_count": {
                              "type": "integer"
                            },
                            "wallets_count": {
                              "type": "integer"
                            },
                            "share_url": {
                              "type": "string"
                            },
                            "image_url": {
                              "type": "string"
                            },
                            "followed": {
                              "type": "boolean"
                            },
                            "is_creator": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "name",
                            "created_at",
                            "bot_id",
                            "description",
                            "is_public",
                            "followed_count",
                            "wallets_count",
                            "share_url",
                            "image_url",
                            "followed",
                            "is_creator"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "wallet",
                        "label",
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lists/all": {
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get all wallets lists",
        "description": "This endpoint retrieves public wallets lists.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getAllLists",
        "parameters": [
          {
            "name": "follow_only",
            "in": "query",
            "description": "Filter lists by followed status.",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order lists by creation date.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "popular",
                "new"
              ]
            },
            "example": "popular"
          },
          {
            "name": "next_object",
            "in": "query",
            "description": "Next page for pagination.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/lists/all endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response.",
                      "properties": {
                        "lists": {
                          "type": "array",
                          "description": "An array of all lists.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "integer"
                              },
                              "bot_id": {
                                "type": "integer"
                              },
                              "description": {
                                "type": "string"
                              },
                              "is_public": {
                                "type": "boolean"
                              },
                              "followed_count": {
                                "type": "integer"
                              },
                              "wallets_count": {
                                "type": "integer"
                              },
                              "share_url": {
                                "type": "string"
                              },
                              "image_url": {
                                "type": "string"
                              },
                              "followed": {
                                "type": "boolean"
                              },
                              "is_creator": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "created_at",
                              "bot_id",
                              "description",
                              "is_public",
                              "followed_count",
                              "wallets_count",
                              "share_url",
                              "image_url",
                              "followed",
                              "is_creator"
                            ]
                          }
                        },
                        "Paging": {
                          "type": "object",
                          "properties": {
                            "total_rows_in_page": {
                              "type": "integer"
                            },
                            "has_next_page": {
                              "type": "boolean"
                            },
                            "next_object": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "total_rows_in_page",
                            "has_next_page",
                            "next_object"
                          ]
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lists/": {
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get all lists for a user",
        "description": "This endpoint retrieves user's wallets lists.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getUserLists",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/lists endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "description": "Contains the main data of the response.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "integer"
                          },
                          "bot_id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "is_public": {
                            "type": "boolean"
                          },
                          "followed_count": {
                            "type": "integer"
                          },
                          "wallets_count": {
                            "type": "integer"
                          },
                          "share_url": {
                            "type": "string"
                          },
                          "image_url": {
                            "type": "string"
                          },
                          "followed": {
                            "type": "boolean"
                          },
                          "is_creator": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "created_at",
                          "bot_id",
                          "description",
                          "is_public",
                          "followed_count",
                          "wallets_count",
                          "share_url",
                          "image_url",
                          "followed",
                          "is_creator"
                        ]
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Lists"
        ],
        "summary": "Add a list",
        "description": "This endpoint creates a new list for a user.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "addUserList",
        "requestBody": {
          "description": "The list to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "is_public": {
                    "type": "boolean"
                  },
                  "wallets": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "followed_list_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/lists endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "integer"
                        },
                        "bot_id": {
                          "type": "integer"
                        },
                        "description": {
                          "type": "string"
                        },
                        "is_public": {
                          "type": "boolean"
                        },
                        "followed_count": {
                          "type": "integer"
                        },
                        "wallets_count": {
                          "type": "integer"
                        },
                        "share_url": {
                          "type": "string"
                        },
                        "image_url": {
                          "type": "string"
                        },
                        "followed": {
                          "type": "boolean"
                        },
                        "is_creator": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "name",
                        "created_at",
                        "bot_id",
                        "description",
                        "is_public",
                        "followed_count",
                        "wallets_count",
                        "share_url",
                        "image_url",
                        "followed",
                        "is_creator"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lists/{list_id}": {
      "put": {
        "tags": [
          "Lists"
        ],
        "summary": "Update a list",
        "description": "This endpoint updates a user's list.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "updateUserList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "The list to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "is_public": {
                    "type": "boolean"
                  },
                  "wallets": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "followed_list_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/lists/{list_id} endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "integer"
                        },
                        "bot_id": {
                          "type": "integer"
                        },
                        "description": {
                          "type": "string"
                        },
                        "is_public": {
                          "type": "boolean"
                        },
                        "followed_count": {
                          "type": "integer"
                        },
                        "wallets_count": {
                          "type": "integer"
                        },
                        "share_url": {
                          "type": "string"
                        },
                        "image_url": {
                          "type": "string"
                        },
                        "followed": {
                          "type": "boolean"
                        },
                        "is_creator": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "name",
                        "created_at",
                        "bot_id",
                        "description",
                        "is_public",
                        "followed_count",
                        "wallets_count",
                        "share_url",
                        "image_url",
                        "followed",
                        "is_creator"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lists"
        ],
        "summary": "Delete a list",
        "description": "This endpoint deletes a user's list.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "deleteUserList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "delete_wallets",
            "in": "query",
            "description": "Delete wallets in the list",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/lists/{list_id} endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lists/{list_id}/toggle-follow": {
      "put": {
        "tags": [
          "Lists"
        ],
        "summary": "Toggle follow a list",
        "description": "This endpoint toggles follow a list for a user.\n### Cost per Request\nCost per request = 5 credits.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "toggleFollowList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "The ID of the list to follow",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The response schema for the /api/v1/lists/{list_id}/toggle-follow endpoint.",
                  "properties": {
                    "status": {
                      "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the main data of the response.",
                      "properties": {
                        "followed": {
                          "type": "boolean",
                          "description": "The follow status of the list."
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request was unacceptable, often due to missing a required parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ws": {
      "get": {
        "tags": [
          "Web Socket"
        ],
        "summary": "WebSocket Connection",
        "description": "This endpoint sets up a WebSocket connection to receive updates on new transactions.\n\nOnce connected, the client can send command messages to the WebSocket in the following formats:\n### Subscribe to a feed:\nRefer to the `FeedSubscribeCommand` schema for the command structure.\n#### Subscribe to all feed events:\n```json\n{\n  \"type\": \"subscribe_feed\",\n}\n```\n#### Subscribe to feed with filters. Filters tx_types, chains, tokens, min_usd_value, new_trade are optional:\n```json\n{\n  \"type\": \"subscribe_feed\",\n  \"filter\": {\n      \"tx_types\": [\"transfer\", \"swap\"],\n      \"chains\": [\"eth\", \"bsc\"],\n      \"tokens\": [\"0x1234\", \"0x5678\"],\n      \"min_usd_value\": 1000,\n      \"new_trade\": true\n  }\n}\n```\n#### Subscribe to feed for an new trades:\n```json\n{\n  \"type\": \"subscribe_feed\",\n  \"filter\": {\n      \"new_trade\": true\n  }\n}\n```\n### Subscribe to feed for a certain list:\n```json\n{\n  \"type\": \"subscribe_feed\",\n  \"list_id\": \"list-id\"\n}\n```\n### Unsubscribe from a feed:\nRefer to the `FeedUnsubscribeCommand` schema for the command structure.\n```json\n{\n  \"type\": \"unsubscribe_feed\"\n}\n```\n### Subscribe to a wallet:\nRefer to the `WalletSubscribeCommand` schema for the command structure.\n#### Subscribe to all wallet events:\n```json\n{\n      \"type\": \"subscribe_wallet\",\n      \"wallet\": \"wallet-address\",\n}\n```\n#### Subscribe to wallet events with filters. Filters tx_types, chains, tokens, min_usd_value, new_trade are optional:\n```json\n{\n  \"type\": \"subscribe_wallet\",\n  \"wallet\": \"wallet-address\",\n  \"filter\": {\n      \"tx_types\": [\"transfer\", \"swap\"],\n      \"chains\": [\"ethereum\", \"bsc\"],\n      \"tokens\": [\"0x1234\", \"0x5678\"],\n      \"min_usd_value\": 1000,\n      \"new_trade\": true\n  }\n}\n```\n### Unsubscribe from a wallet:\nRefer to the `WalletUnsubscribeCommand` schema for the command structure.\n```json\n{\n  \"type\": \"unsubscribe_wallet\",\n  \"wallet\": \"wallet-address\"\n}\n```\nThe server will send back messages in the following schema:\n### Websocket Event Message:\nRefer to the `WebsocketEvent` schema for the message structure.\n```json\n{\n  \"type\": \"event_type\",\n  \"data\": {}\n}\n```\n### Pricing Information\nEvery 10 messages sent over the WebSocket connection consume 1 credit.\n### Available Plans\nAvailable on the following plans:\n- Builder\n- Architect\n- Enterprise\n",
        "operationId": "getWebSocket",
        "responses": {
          "101": {
            "description": "Switching Protocols - The server has switched protocols in response to a client request.",
            "headers": {
              "Upgrade": {
                "description": "The protocol to which the server is switching.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "websocket"
                  ],
                  "default": "websocket"
                }
              },
              "Connection": {
                "description": "Indicates that the server is willing to upgrade the connection.",
                "schema": {
                  "type": "string",
                  "enum": [
                    "Upgrade"
                  ],
                  "default": "Upgrade"
                }
              },
              "Sec-WebSocket-Accept": {
                "description": "A WebSocket-specific header used in the WebSocket handshake.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - The client does not have access rights to the content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server's end.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
                  "properties": {
                    "status": {
                      "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
                      "example": "error",
                      "type": "string",
                      "enum": [
                        "ok",
                        "error"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
                      "example": "error message"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Feed"
    },
    {
      "name": "Wallet"
    },
    {
      "name": "Tags"
    },
    {
      "name": "Web Socket"
    },
    {
      "name": "Lists"
    }
  ],
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "description": "This object represents a response structure typically used to convey the outcome of a request. It primarily consists of a status indicator and a message, which together provide essential feedback about the request's processing. The status reflects the overall result of the request (such as success, error, etc.), while the message gives a more detailed explanation or the nature of the response, especially useful in cases of errors or exceptions.\n",
        "properties": {
          "status": {
            "description": "A reference to the response status object. This status is a key indicator of whether the request was processed successfully or resulted in an error.",
            "example": "error",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "A flexible object intended to hold the actual data payload of the response. The structure of this object can vary depending on the specific endpoint and the nature of the response."
          },
          "message": {
            "type": "string",
            "description": "A descriptive message providing additional details about the response. In case of an error, this message typically contains information useful for understanding the error's cause or nature.",
            "example": "error message"
          }
        },
        "required": [
          "status",
          "message"
        ]
      },
      "Feed": {
        "type": "object",
        "description": "The response schema for the /v1/feed endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response, including a list of transaction items and pagination details.",
            "properties": {
              "items": {
                "type": "array",
                "description": "An array of transaction items, each conforming to one of several types like Swap, LP, Transfer, Lending, etc. This array can contain a mix of these types.",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "This object type provides detailed information about a cryptocurrency swap transaction. It includes critical details such as wallet addresses, transaction hash, type of swap, blockchain specifics, and timestamps. The structure outlines the specifics of the assets involved in the swap, including their addresses, names, symbols, amounts, and USD values. It is particularly useful for platforms tracking and analyzing DeFi swap transactions, offering insights into the trade's details, such as the decentralized exchange (DEX) used, the tokens exchanged, and their respective values. This comprehensive structure is ideal for users or systems needing a detailed view of swap transactions on blockchain networks.\n",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address that initiated the swap transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A readable label for the wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique hash identifier of the swap transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Specifies the type of transaction, in this case, a token swap.",
                          "example": "swap"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network where the swap transaction occurred.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "dex": {
                          "type": "string",
                          "description": "The decentralized exchange where the swap transaction took place.",
                          "example": "Odos"
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address of the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address of the transaction (often the same as the 'from' address in swap transactions).",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "token0_address": {
                          "type": "string",
                          "description": "The address of the first token involved in the swap.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "token0_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "The amount of the first token involved in the swap.",
                          "example": 25
                        },
                        "token0_amount_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The USD value of the first token amount at the time of the swap.",
                          "example": 25
                        },
                        "token0_name": {
                          "type": "string",
                          "description": "The name of the first token involved in the swap.",
                          "example": "USD Coin"
                        },
                        "token0_price_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the first token in USD.",
                          "example": 1
                        },
                        "token0_symbol": {
                          "type": "string",
                          "description": "The symbol of the first token involved in the swap.",
                          "example": "USDC"
                        },
                        "token0_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        },
                        "token1_address": {
                          "type": "string",
                          "description": "The address of the second token involved in the swap.",
                          "example": "0x0000000000000000000000000000000000000000"
                        },
                        "token1_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "The amount of the second token involved in the swap.",
                          "example": 0.011715203954716423
                        },
                        "token1_amount_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The USD value of the second token amount at the time of the swap.",
                          "example": 25
                        },
                        "token1_name": {
                          "type": "string",
                          "description": "The name of the second token involved in the swap.",
                          "example": "Ethereum"
                        },
                        "token1_price_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the second token in USD.",
                          "example": 2133.979066573165
                        },
                        "token1_symbol": {
                          "type": "string",
                          "description": "The symbol of the second token involved in the swap.",
                          "example": "ETH"
                        },
                        "token1_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        },
                        "first_interaction": {
                          "type": "boolean",
                          "description": "Indicates whether this transaction was the first interaction between the involved wallet addresses.",
                          "example": "falsed"
                        },
                        "token_market_cap": {
                          "type": "object",
                          "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                          "properties": {
                            "token_address": {
                              "type": "string",
                              "description": "The address of the token.",
                              "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                            },
                            "market_cap": {
                              "type": "number",
                              "format": "double",
                              "description": "The market capitalization of the token.",
                              "example": 28567534.5964843
                            },
                            "liquidity": {
                              "type": "number",
                              "format": "double",
                              "description": "The liquidity of the token.",
                              "example": 832322.8431867727
                            }
                          },
                          "required": [
                            "token_address",
                            "market_cap",
                            "liquidity"
                          ]
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "dex",
                        "from",
                        "to",
                        "token0_address",
                        "token0_amount",
                        "token0_amount_usd",
                        "token0_name",
                        "token0_price_usd",
                        "token0_symbol",
                        "token0_icon_link",
                        "token1_address",
                        "token1_amount",
                        "token1_amount_usd",
                        "token1_name",
                        "token1_price_usd",
                        "token1_symbol",
                        "token1_icon_link",
                        "first_interaction"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a comprehensive overview of a liquidity pool (LP) transaction on a decentralized exchange (DEX). It includes details about the wallet involved, the transaction hash, type, and associated blockchain, as well as specific information about the assets involved in the transaction. This structure is particularly useful for platforms that track and analyze liquidity pool actions, such as adding or removing liquidity, offering insights into the specifics of each action, including the assets involved, their amounts in both the native token and USD value, and their respective prices in USD.\n",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "dex": {
                          "type": "string",
                          "description": "The name of the decentralized exchange where the LP transaction occurred.",
                          "example": "Odos"
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the nature of the LP transaction, such as 'add' or 'remove'.",
                          "example": "add"
                        },
                        "token0_address": {
                          "type": "string",
                          "description": "The address of the first token involved in the LP transaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "token0_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "The amount of the first token involved in the transaction.",
                          "example": 25
                        },
                        "token0_amount_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The USD value of the first token amount at the time of the transaction.",
                          "example": 25
                        },
                        "token0_name": {
                          "type": "string",
                          "description": "The name of the first token involved in the transaction.",
                          "example": "USD Coin"
                        },
                        "token0_price_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the first token in USD.",
                          "example": 1
                        },
                        "token0_symbol": {
                          "type": "string",
                          "description": "The symbol of the first token involved in the transaction.",
                          "example": "USDC"
                        },
                        "token0_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        },
                        "token1_address": {
                          "type": "string",
                          "description": "The address of the second token involved in the LP transaction.",
                          "example": "0x0000000000000000000000000000000000000000"
                        },
                        "token1_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "The amount of the second token involved in the transaction.",
                          "example": 25
                        },
                        "token1_amount_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The USD value of the second token amount at the time of the transaction.",
                          "example": 25
                        },
                        "token1_name": {
                          "type": "string",
                          "description": "The name of the second token involved in the transaction.",
                          "example": "USD Coin"
                        },
                        "token1_price_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the second token in USD.",
                          "example": 1
                        },
                        "token1_symbol": {
                          "type": "string",
                          "description": "The symbol of the second token involved in the transaction.",
                          "example": "USDC"
                        },
                        "token1_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        },
                        "lower_bound": {
                          "type": "number",
                          "format": "double",
                          "description": "Indicates the lower bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                          "example": 0
                        },
                        "upper_bound": {
                          "type": "number",
                          "format": "double",
                          "description": "Indicates the upper bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                          "example": 0
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "dex",
                        "from",
                        "type",
                        "token0_address",
                        "token0_amount",
                        "token0_amount_usd",
                        "token0_name",
                        "token0_price_usd",
                        "token0_symbol",
                        "token0_icon_link",
                        "token1_address",
                        "token1_amount",
                        "token1_amount_usd",
                        "token1_name",
                        "token1_price_usd",
                        "token1_symbol",
                        "token1_icon_link",
                        "lower_bound",
                        "upper_bound"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object represents the details of a cryptocurrency transfer transaction. It includes essential information such as wallet addresses, transaction hash, type of transfer, blockchain details, and timestamps. The structure is particularly useful for tracking standard token transfers on blockchain networks, providing a comprehensive overview of the transaction, including the amount transferred in USD, the token's contract address, its name, and symbol. This detailed structure is ideal for users or systems requiring a thorough view of token transfer transactions, including the specifics of the token involved and the value of the transaction.\n",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address involved in the transfer transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A readable label for the wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique hash identifier of the transfer transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Specifies the type of transaction, in this case, a token transfer.",
                          "example": "transfer"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network where the transfer transaction occurred.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address of the transaction.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address of the transaction.",
                          "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                        },
                        "from_label": {
                          "type": "string",
                          "description": "A readable version of the 'from' wallet address.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to_label": {
                          "type": "string",
                          "description": "A readable version of the 'to' wallet address.",
                          "example": "0xcfdb...6f8ff"
                        },
                        "amount_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The USD value of the amount transferred in the transaction.",
                          "example": 117.412291
                        },
                        "contract_address": {
                          "type": "string",
                          "description": "The blockchain address of the contract under which the token is registered.",
                          "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the token being transferred.",
                          "example": "Tether USD"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol of the token being transferred.",
                          "example": "USDT"
                        },
                        "token_price_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the token in USD at the time of the transaction.",
                          "example": 1
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates the contract standard of the token, such as ERC20.",
                          "example": "ERC20"
                        },
                        "token_icon_link": {
                          "type": "string",
                          "description": "A URL link to the token's icon image.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        },
                        "token_market_cap": {
                          "type": "object",
                          "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                          "properties": {
                            "token_address": {
                              "type": "string",
                              "description": "The address of the token.",
                              "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                            },
                            "market_cap": {
                              "type": "number",
                              "format": "double",
                              "description": "The market capitalization of the token.",
                              "example": 28567534.5964843
                            },
                            "liquidity": {
                              "type": "number",
                              "format": "double",
                              "description": "The liquidity of the token.",
                              "example": 832322.8431867727
                            }
                          },
                          "required": [
                            "token_address",
                            "market_cap",
                            "liquidity"
                          ]
                        },
                        "mempool": {
                          "type": "boolean",
                          "description": "For Bitcoin transactions, this field indicates whether the transaction is in the mempool."
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "to",
                        "from_label",
                        "to_label",
                        "amount_usd",
                        "contract_address",
                        "name",
                        "symbol",
                        "token_price_usd",
                        "type",
                        "token_icon_link"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object represents the data structure for a specific transaction related to decentralized finance (DeFi) activities such as lending, borrowing, and other related actions. It provides detailed information about the transaction, including wallet addresses, transaction hash, type of transaction, chain details, and financial figures. This structure is particularly useful for platforms tracking DeFi activities, offering insights into the specifics of each transaction, such as the asset involved, the amount, the health factor in lending platforms, and the price of the asset in USD at the time of the transaction.\n",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address associated with the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A more readable, shortened version of the wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique identifier of the transaction, represented as a hash.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Specifies the type of DeFi transaction, such as lending, borrowing, etc.",
                          "example": "lending"
                        },
                        "chain": {
                          "type": "string",
                          "description": "Indicates the blockchain network on which the transaction occurred.",
                          "example": "base"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A sequential index or identifier for the transaction within a particular dataset or list.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number in the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "from_label": {
                          "type": "string",
                          "description": "A readable, abbreviated form of the 'from' wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "action": {
                          "type": "string",
                          "description": "Describes the action taken in the transaction, such as 'Repaid' in a lending scenario.",
                          "example": "Repaid"
                        },
                        "address": {
                          "type": "string",
                          "description": "The smart contract address involved in the transaction.",
                          "example": "0x4200000000000000000000000000000000000006"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "description": "The amount of the asset involved in the transaction.",
                          "example": 50.007801987424834
                        },
                        "amount_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The equivalent value of the transaction amount in USD.",
                          "example": 106652.63945462069
                        },
                        "dex": {
                          "type": "string",
                          "description": "The decentralized exchange or platform where the transaction occurred, such as AaveV2.",
                          "example": "AaveV2"
                        },
                        "health_factor": {
                          "type": "number",
                          "format": "double",
                          "description": "A metric specific to lending platforms, indicating the health of the loan or position.",
                          "example": 1000
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the asset involved in the transaction.",
                          "example": "Wrapped Ether"
                        },
                        "platform": {
                          "type": "string",
                          "description": "The DeFi platform associated with the transaction, like AaveV3.",
                          "example": "AaveV3"
                        },
                        "price_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the asset in USD at the time of the transaction.",
                          "example": 2132.72
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol of the asset involved in the transaction.",
                          "example": "WETH"
                        },
                        "token_icon_link": {
                          "type": "string",
                          "description": "A URL link to the icon image of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "from_label",
                        "action",
                        "address",
                        "amount",
                        "amount_usd",
                        "dex",
                        "health_factor",
                        "name",
                        "platform",
                        "price_usd",
                        "symbol",
                        "token_icon_link"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object represents the data structure for a Non-Fungible Token (NFT) minting transaction. It provides detailed information about the transaction, including wallet addresses, transaction hash, the type of NFT transaction (in this case, minting), and blockchain specifics. Additionally, it includes detailed information about the NFT minted, such as its image, contract address, token ID, and associated fees. This structure is particularly useful for platforms tracking NFT minting activities, offering insights into the creation of new NFTs, their associated costs, and the blockchain details.\n",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address involved in the NFT minting transaction.",
                          "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A more readable label or identifier for the wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique hash identifier of the NFT minting transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Specifies the type of transaction, in this case, NFT minting.",
                          "example": "nft_mint"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network on which the minting transaction was conducted.",
                          "example": "ethereum"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address of the transaction.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address of the transaction.",
                          "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                        },
                        "from_label": {
                          "type": "string",
                          "description": "A readable version of the 'from' wallet address.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to_label": {
                          "type": "string",
                          "description": "A readable version of the 'to' wallet address.",
                          "example": "0xcfdb...6f8ff"
                        },
                        "thumbnail": {
                          "type": "string",
                          "description": "A thumbnail image URL of the NFT involved in the transaction.",
                          "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "image": {
                          "type": "string",
                          "description": "A full image URL of the NFT.",
                          "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "description": "The number of items of the NFT minted in the transaction.",
                          "example": 1
                        },
                        "contract_address": {
                          "type": "string",
                          "description": "The blockchain address of the contract under which the NFT is minted.",
                          "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                        },
                        "contract_type": {
                          "type": "string",
                          "description": "The type of contract used for the NFT, such as ERC721.",
                          "example": "ERC721"
                        },
                        "fee": {
                          "type": "number",
                          "format": "double",
                          "description": "The transaction fee incurred for minting the NFT.",
                          "example": 0.21357696
                        },
                        "nft_name": {
                          "type": "string",
                          "description": "The name of the NFT minted.",
                          "example": "unknown"
                        },
                        "nft_symbol": {
                          "type": "string",
                          "description": "The symbol associated with the NFT.",
                          "example": "unknown"
                        },
                        "nft_token_id": {
                          "type": "string",
                          "description": "The unique token ID of the minted NFT.",
                          "example": 14
                        },
                        "currency_symbol": {
                          "type": "string",
                          "description": "The symbol of the currency used in the transaction (e.g., ETH, MATIC).",
                          "example": "MATIC"
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates the contract standard of the NFT, such as ERC721.",
                          "example": "ERC721"
                        },
                        "value": {
                          "type": "number",
                          "format": "double",
                          "description": "The value of the transaction. For minting, this is often zero since the NFT is being created.",
                          "example": 0
                        },
                        "value_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The equivalent USD value of the transaction.",
                          "example": 0
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "to",
                        "from_label",
                        "to_label",
                        "thumbnail",
                        "image",
                        "amount",
                        "contract_address",
                        "contract_type",
                        "fee",
                        "nft_name",
                        "nft_symbol",
                        "nft_token_id",
                        "currency_symbol",
                        "type",
                        "value",
                        "value_usd"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object encapsulates the details of a Non-Fungible Token (NFT) trading transaction. It includes comprehensive information such as wallet addresses, transaction hash, type of transaction (NFT trade), blockchain details, and timestamps. The structure provides specific data about the NFT trade, including the NFT's image, contract address, marketplace of the trade, and price details in both cryptocurrency and USD. Additionally, it includes information about the buyer, seller, and whether the transaction involved a bid being accepted. This structure is ideal for platforms that monitor and analyze NFT trading activities, offering detailed insights into each trade, its valuation, and the parties involved.\n",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address involved in the NFT trading transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A readable label for the wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique hash identifier of the NFT trading transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Specifies the type of transaction, in this case, NFT trading.",
                          "example": "nft_trade"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network where the trading transaction occurred.",
                          "example": "ethereum"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address of the transaction.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address of the transaction.",
                          "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                        },
                        "thumbnail": {
                          "type": "string",
                          "description": "A thumbnail image URL of the NFT involved in the transaction.",
                          "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "image": {
                          "type": "string",
                          "description": "A full image URL of the NFT.",
                          "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "action": {
                          "type": "string",
                          "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                          "example": "buy"
                        },
                        "contract": {
                          "type": "string",
                          "description": "The blockchain contract address associated with the NFT.",
                          "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                        },
                        "marketplace": {
                          "type": "string",
                          "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                          "example": "OpenSea"
                        },
                        "nft_address": {
                          "type": "string",
                          "description": "The blockchain address of the NFT involved in the trade.",
                          "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                        },
                        "nft_name": {
                          "type": "string",
                          "description": "The name of the NFT traded.",
                          "example": "Gemesis"
                        },
                        "nft_symbol": {
                          "type": "string",
                          "description": "The symbol associated with the NFT.",
                          "example": "OSP"
                        },
                        "nft_token_id": {
                          "type": "string",
                          "description": "The unique token ID of the NFT involved in the trade.",
                          "example": 32507
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "The price at which the NFT was traded.",
                          "example": 0.0151
                        },
                        "price_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The equivalent USD value of the NFT trade.",
                          "example": 32.911356
                        },
                        "profit": {
                          "type": "number",
                          "format": "double",
                          "description": "The profit earned from the trade. This may be zero in some transactions.",
                          "example": 0
                        },
                        "currency_symbol": {
                          "type": "string",
                          "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                          "example": "WETH"
                        },
                        "buyer": {
                          "type": "string",
                          "description": "The wallet address of the buyer in the trade."
                        },
                        "seller": {
                          "type": "string",
                          "description": "The wallet address of the seller in the trade."
                        },
                        "token": {
                          "type": "string",
                          "description": "The token type used in the transaction."
                        },
                        "first_interaction": {
                          "type": "boolean",
                          "description": "Indicates whether this was the first interaction between the buyer and seller."
                        },
                        "bid_accepted": {
                          "type": "boolean",
                          "description": "Specifies if the transaction involved a bid being accepted."
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "to",
                        "thumbnail",
                        "image",
                        "action",
                        "contract",
                        "marketplace",
                        "nft_address",
                        "nft_name",
                        "nft_symbol",
                        "nft_token_id",
                        "price",
                        "price_usd",
                        "profit",
                        "currency_symbol",
                        "buyer",
                        "seller",
                        "token",
                        "first_interaction",
                        "bid_accepted"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object type details a Non-Fungible Token (NFT) transfer transaction. It includes essential information such as wallet addresses, transaction hash, NFT details, and blockchain specifics. This structure is particularly useful for tracking NFT transfers, providing a complete overview of the transaction, including the involved parties (from and to addresses), the NFT's contract details, and the transaction's metadata such as timestamps and blockchain network. The object also includes the NFT's image, name, symbol, and token ID, offering a comprehensive view of the NFT being transferred.\n",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address involved in the NFT transfer transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A readable label for the wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique hash identifier of the NFT transfer transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Specifies the type of transaction, in this case, NFT transfer.",
                          "example": "nft_transfer"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network where the transfer transaction occurred.",
                          "example": "ethereum"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address of the transaction.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address of the transaction.",
                          "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                        },
                        "from_label": {
                          "type": "string",
                          "description": "A readable version of the 'from' wallet address.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to_label": {
                          "type": "string",
                          "description": "A readable version of the 'to' wallet address.",
                          "example": "0xcfdb...6f8ff"
                        },
                        "thumbnail": {
                          "type": "string",
                          "description": "A thumbnail image URL of the NFT involved in the transaction.",
                          "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "image": {
                          "type": "string",
                          "description": "A full image URL of the NFT.",
                          "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "contract_address": {
                          "type": "string",
                          "description": "The blockchain address of the contract under which the NFT is registered.",
                          "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                        },
                        "contract_type": {
                          "type": "string",
                          "description": "The type of contract used for the NFT, such as ERC721.",
                          "example": "ERC721"
                        },
                        "fee": {
                          "type": "number",
                          "format": "double",
                          "description": "The transaction fee incurred for the transfer of the NFT.",
                          "example": 0.21357696
                        },
                        "nft_name": {
                          "type": "string",
                          "description": "The name of the NFT being transferred.",
                          "example": "unknown"
                        },
                        "nft_symbol": {
                          "type": "string",
                          "description": "The symbol associated with the NFT.",
                          "example": "unknown"
                        },
                        "nft_token_id": {
                          "type": "string",
                          "description": "The unique token ID of the NFT involved in the transfer.",
                          "example": 3
                        },
                        "type": {
                          "type": "string",
                          "description": "Indicates the contract standard of the NFT, such as ERC721.",
                          "example": "ERC721"
                        },
                        "value": {
                          "type": "number",
                          "format": "double",
                          "description": "The value of the NFT at the time of the transfer. This might be represented in the native cryptocurrency of the blockchain."
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "to",
                        "from_label",
                        "to_label",
                        "thumbnail",
                        "image",
                        "contract_address",
                        "contract_type",
                        "fee",
                        "nft_name",
                        "nft_symbol",
                        "nft_token_id",
                        "type",
                        "value"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object encapsulates detailed information about a Non-Fungible Token (NFT) lending transaction. It includes comprehensive details such as wallet addresses, transaction hash, the type of NFT transaction, the blockchain used, and timestamps. Additionally, it provides specifics about the NFT involved, including its address, name, symbol, image, and the terms of the lending agreement. This structure is particularly useful for platforms that need to track and manage NFT lending activities, providing all necessary details for analyzing and processing such transactions.\n",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address involved in the NFT lending transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A more readable label or identifier for the wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique hash identifier of the NFT lending transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Specifies the type of transaction, in this case, NFT lending.",
                          "example": "nft_lending"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network on which the transaction was conducted.",
                          "example": "ethereum"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address of the transaction.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address of the transaction.",
                          "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                        },
                        "from_label": {
                          "type": "string",
                          "description": "A readable version of the 'from' wallet address.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to_label": {
                          "type": "string",
                          "description": "A readable version of the 'to' wallet address.",
                          "example": "0xcfdb...6f8ff"
                        },
                        "thumbnail": {
                          "type": "string",
                          "description": "A thumbnail image URL of the NFT involved in the transaction.",
                          "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "image": {
                          "type": "string",
                          "description": "A full image URL of the NFT.",
                          "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "action": {
                          "type": "string",
                          "description": "Describes the action taken in the NFT lending transaction, such as 'buy', 'lend', etc.",
                          "example": "buy"
                        },
                        "currency_address": {
                          "type": "string",
                          "description": "The blockchain address of the currency used in the transaction.",
                          "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                        },
                        "currency_symbol": {
                          "type": "string",
                          "description": "The symbol of the currency used in the transaction.",
                          "example": "OpenSea"
                        },
                        "interest": {
                          "type": "number",
                          "format": "double",
                          "description": "The interest rate applied in the NFT lending transaction.",
                          "example": 0.0151
                        },
                        "nft_address": {
                          "type": "string",
                          "description": "The blockchain address of the NFT involved in the transaction.",
                          "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                        },
                        "nft_name": {
                          "type": "string",
                          "description": "The name of the NFT.",
                          "example": "Gemesis"
                        },
                        "nft_symbol": {
                          "type": "string",
                          "description": "The symbol of the NFT.",
                          "example": "OSP"
                        },
                        "platform": {
                          "type": "string",
                          "description": "The platform or service through which the NFT lending transaction was conducted.",
                          "example": "Blend"
                        },
                        "nft_token_id": {
                          "type": "string",
                          "description": "The unique identifier for the specific NFT within its collection.",
                          "example": 32507
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "The price at which the NFT was lent or transacted.",
                          "example": 0.0151
                        },
                        "price_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The equivalent USD value of the transaction price.",
                          "example": 32.911356
                        },
                        "terms": {
                          "type": "number",
                          "format": "double",
                          "description": "Specifies the terms of the NFT lending agreement.",
                          "example": 0.0151
                        },
                        "refinance": {
                          "type": "boolean",
                          "description": "Indicates whether the transaction involved refinancing of the NFT.",
                          "example": false
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "to",
                        "from_label",
                        "to_label",
                        "thumbnail",
                        "image",
                        "action",
                        "currency_address",
                        "currency_symbol",
                        "interest",
                        "nft_address",
                        "nft_name",
                        "nft_symbol",
                        "platform",
                        "nft_token_id",
                        "price",
                        "price_usd",
                        "terms",
                        "refinance"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object represents a detailed structure for a blockchain transaction, encompassing various aspects like wallet addresses, transaction hash, type, associated chains, and financial details. It is designed to provide a comprehensive view of a transaction, including the wallets involved, the transaction's nature, the chains it spans, and the financial details like the amount and its equivalent in USD. This structure is ideal for applications that require detailed tracking and analysis of blockchain transactions.\n",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address involved in the transaction.",
                          "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A shortened, more readable version of the wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique hash identifier of the transaction.",
                          "example": "0xb23dc807e8063feaefe20644f85d13a7238a8b01b9fd167135ef664146692f99"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "The type of transaction.",
                          "example": "bridge"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain on which the transaction occurred, like 'ethereum'.",
                          "example": "ethereum"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numeric index or identifier for the transaction.",
                          "example": 7
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp when the transaction occurred.",
                          "example": 1702899899
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain in which the transaction is included.",
                          "example": 18812661
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address of the transaction.",
                          "example": "0xecc19e177d24551aa7ed6bc6fe566eca726cc8a9"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address of the transaction.",
                          "example": "0xbf3b71decbcefabb3210b9d8f18ec22e0556f5f0"
                        },
                        "from_label": {
                          "type": "string",
                          "description": "A shortened, more readable version of the originating wallet address.",
                          "example": "0xecc1...cc8a9"
                        },
                        "to_label": {
                          "type": "string",
                          "description": "A shortened, more readable version of the destination wallet address.",
                          "example": "0xbf3b...6f5f0"
                        },
                        "token_address": {
                          "type": "string",
                          "description": "The address of the token involved in the transaction.",
                          "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                        },
                        "token_name": {
                          "type": "string",
                          "description": "The name of the token involved in the transaction.",
                          "example": "Wrapped Ether"
                        },
                        "token_symbol": {
                          "type": "string",
                          "description": "The symbol of the token involved in the transaction.",
                          "example": "WETH"
                        },
                        "token_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "description": "The amount of the token involved in the transaction.",
                          "example": 0.09956219862680922
                        },
                        "amount_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                          "example": 212.00276764599622
                        },
                        "from_chain": {
                          "type": "string",
                          "description": "The originating chain of the transaction, in cases of cross-chain activities.",
                          "example": "Arbitrum"
                        },
                        "to_chain": {
                          "type": "string",
                          "description": "The destination chain of the transaction, in cases of cross-chain activities.",
                          "example": "Ethereum"
                        },
                        "platform": {
                          "type": "string",
                          "description": "The platform or service used for the transaction.",
                          "example": "Stargate"
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the token at the time of the transaction.",
                          "example": 2129.35
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the nature of the transaction, like 'withdraw', 'deposit', etc.",
                          "example": "withdraw"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "to",
                        "from_label",
                        "to_label",
                        "token_address",
                        "token_name",
                        "token_symbol",
                        "amount",
                        "amount_usd",
                        "from_chain",
                        "to_chain",
                        "platform",
                        "price",
                        "type",
                        "token_icon_link"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a contract interaction event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "contract_address": {
                          "type": "string",
                          "description": "The address of the smart contract involved in the interaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "contract_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the smart contract.",
                          "example": "Uniswap V3"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "to",
                        "contract_address",
                        "contract_label"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a wrap event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "dex": {
                          "type": "string",
                          "description": "The decentralized exchange where the wrap transaction occurred.",
                          "example": "Uniswap"
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "action": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number",
                          "description": "The amount of tokens wrapped in the transaction.",
                          "example": 100
                        },
                        "amount_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the wrapped tokens.",
                          "example": "100.0"
                        },
                        "contract_address": {
                          "type": "string",
                          "description": "The address of the smart contract involved in the interaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the token wrapped in the transaction.",
                          "example": "Wrapped Ether"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol of the token wrapped in the transaction.",
                          "example": "WETH"
                        },
                        "token_price_usd": {
                          "type": "number",
                          "description": "The price of the token in USD at the time of the transaction.",
                          "example": "100.0"
                        },
                        "token_type": {
                          "type": "string",
                          "description": "The type of token wrapped in the transaction.",
                          "example": "ERC20"
                        },
                        "token_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "dex",
                        "from",
                        "to",
                        "action",
                        "amount",
                        "amount_usd",
                        "contract_address",
                        "name",
                        "symbol",
                        "token_price_usd",
                        "token_type",
                        "token_icon_link"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a Sudo Pool event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "dex": {
                          "type": "string",
                          "description": "The decentralized exchange where the wrap transaction occurred.",
                          "example": "Uniswap"
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "nft_address": {
                          "type": "string",
                          "description": "The address of the NFT contract involved in the interaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "nft_amount": {
                          "type": "integer",
                          "description": "The amount of NFTs involved in the transaction.",
                          "example": 1
                        },
                        "nft_price": {
                          "type": "number",
                          "description": "The price of the NFT in the transaction.",
                          "example": 100
                        },
                        "nft_symbol": {
                          "type": "string",
                          "description": "The symbol of the NFT in the transaction.",
                          "example": "NFT"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "token0_address": {
                          "type": "string",
                          "description": "The address of the first token in the LP pair.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "token0_amount": {
                          "type": "number",
                          "description": "The amount of the first token in the LP pair.",
                          "example": 100
                        },
                        "token0_amount_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the first token in the LP pair.",
                          "example": 100
                        },
                        "token0_name": {
                          "type": "string",
                          "description": "The name of the first token in the LP pair.",
                          "example": "Wrapped Ether"
                        },
                        "token0_price_usd": {
                          "type": "number",
                          "description": "The price of the first token in the LP pair in USD.",
                          "example": 100
                        },
                        "token0_symbol": {
                          "type": "string",
                          "description": "The symbol of the first token in the LP pair.",
                          "example": "WETH"
                        },
                        "token0_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "nft_address",
                        "nft_amount",
                        "nft_price",
                        "nft_symbol",
                        "token0_address",
                        "token0_amount",
                        "token0_amount_usd",
                        "token0_name",
                        "token0_price_usd",
                        "token0_symbol",
                        "from",
                        "to",
                        "token0_icon_link"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a reward event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "address": {
                          "type": "string",
                          "description": "The address of the token involved in the transaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "amount": {
                          "type": "number",
                          "description": "The amount of tokens involved in the transaction.",
                          "example": 100
                        },
                        "amount_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                          "example": 100
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the token involved in the transaction.",
                          "example": "Wrapped Ether"
                        },
                        "price_usd": {
                          "type": "number",
                          "description": "The price of the token in USD.",
                          "example": 100
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol of the token involved in the transaction.",
                          "example": "WETH"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "address",
                        "amount",
                        "amount_usd",
                        "from",
                        "name",
                        "price_usd",
                        "symbol"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a staking event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "from_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the originating wallet.",
                          "example": "Alice"
                        },
                        "to_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the destination wallet.",
                          "example": "Bob"
                        },
                        "amount": {
                          "type": "number",
                          "description": "The amount of tokens staked in the transaction.",
                          "example": 100
                        },
                        "amount_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the staked tokens.",
                          "example": 100
                        },
                        "token_price_usd": {
                          "type": "number",
                          "description": "The price of the token in USD.",
                          "example": 100
                        },
                        "contract_address": {
                          "type": "string",
                          "description": "The address of the smart contract involved in the interaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol of the token staked in the transaction.",
                          "example": "WETH"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the token staked in the transaction.",
                          "example": "Wrapped Ether"
                        },
                        "action": {
                          "type": "string",
                          "description": "The action taken in the staking transaction.",
                          "example": "stake"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "to",
                        "from_label",
                        "to_label",
                        "amount",
                        "amount_usd",
                        "token_price_usd",
                        "contract_address",
                        "symbol",
                        "name",
                        "action"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a Perpetual event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "action": {
                          "type": "string",
                          "description": "The action taken in the Perpetual event.",
                          "example": "buy"
                        },
                        "amount_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                          "example": 100
                        },
                        "average_price": {
                          "type": "number",
                          "description": "The average price of the tokens involved in the transaction.",
                          "example": 100
                        },
                        "base_token_address": {
                          "type": "string",
                          "description": "The address of the base token involved in the transaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "base_token_amount": {
                          "type": "number",
                          "description": "The amount of base tokens involved in the transaction.",
                          "example": 100
                        },
                        "base_token_symbol": {
                          "type": "string",
                          "description": "The symbol of the base token involved in the transaction.",
                          "example": "ETH"
                        },
                        "dex": {
                          "type": "string",
                          "description": "The decentralized exchange where the Perpetual transaction occurred.",
                          "example": "Uniswap"
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "liquidation": {
                          "type": "boolean",
                          "description": "Indicates whether the transaction was a liquidation.",
                          "example": false
                        },
                        "liquidation_price": {
                          "type": "number",
                          "description": "The price at which the liquidation occurred.",
                          "example": 100
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "trade_direction": {
                          "type": "string",
                          "description": "The direction of the trade in the Perpetual transaction.",
                          "example": "long"
                        },
                        "perp_details": {
                          "type": "string",
                          "description": "Additional details about the Perpetual transaction.",
                          "example": "details"
                        },
                        "token0_address": {
                          "type": "string",
                          "description": "The address of the first token in the LP pair.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "token0_amount": {
                          "type": "number",
                          "description": "The amount of the first token in the LP pair.",
                          "example": 100
                        },
                        "token0_amount_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the first token in the LP pair.",
                          "example": 100
                        },
                        "token0_name": {
                          "type": "string",
                          "description": "The name of the first token in the LP pair.",
                          "example": "Wrapped Ether"
                        },
                        "token0_price_usd": {
                          "type": "number",
                          "description": "The price of the first token in the LP pair in USD.",
                          "example": 100
                        },
                        "token0_symbol": {
                          "type": "string",
                          "description": "The symbol of the first token in the LP pair.",
                          "example": "WETH"
                        },
                        "token0_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        },
                        "token1_address": {
                          "type": "string",
                          "description": "The address of the second token in the LP pair.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "token1_amount": {
                          "type": "number",
                          "description": "The amount of the second token in the LP pair.",
                          "example": 100
                        },
                        "token1_amount_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the second token in the LP pair.",
                          "example": 100
                        },
                        "token1_name": {
                          "type": "string",
                          "description": "The name of the second token in the LP pair.",
                          "example": "Wrapped Ether"
                        },
                        "token1_price_usd": {
                          "type": "number",
                          "description": "The price of the second token in the LP pair in USD.",
                          "example": 100
                        },
                        "token1_symbol": {
                          "type": "string",
                          "description": "The symbol of the second token in the LP pair.",
                          "example": "WETH"
                        },
                        "token1_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        },
                        "realized_pnl": {
                          "type": "number",
                          "description": "The realized profit and loss of the Perpetual transaction.",
                          "example": 100
                        },
                        "is_nft_perp": {
                          "type": "boolean",
                          "description": "Indicates whether the Perpetual transaction involves an NFT.",
                          "example": false
                        },
                        "position_size": {
                          "type": "number",
                          "description": "The size of the position in the Perpetual transaction.",
                          "example": 100
                        },
                        "position_size_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the position size.",
                          "example": 100
                        },
                        "leverage": {
                          "type": "number",
                          "description": "The leverage used in the Perpetual transaction.",
                          "example": 100
                        },
                        "unrealized_pnl": {
                          "type": "number",
                          "description": "The unrealized profit and loss of the Perpetual transaction.",
                          "example": 100
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "action",
                        "amount_usd",
                        "average_price",
                        "base_token_address",
                        "base_token_amount",
                        "base_token_symbol",
                        "dex",
                        "from",
                        "liquidation",
                        "liquidation_price",
                        "to",
                        "trade_direction",
                        "perp_details",
                        "token0_address",
                        "token0_amount",
                        "token0_amount_usd",
                        "token0_name",
                        "token0_price_usd",
                        "token0_symbol",
                        "token0_icon_link",
                        "token1_address",
                        "token1_amount",
                        "token1_amount_usd",
                        "token1_name",
                        "token1_price_usd",
                        "token1_symbol",
                        "token1_icon_link",
                        "realized_pnl",
                        "is_nft_perp"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a flashloan event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "address": {
                          "type": "string",
                          "description": "The address of the token involved in the transaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "amount": {
                          "type": "number",
                          "description": "The amount of tokens involved in the transaction.",
                          "example": 100
                        },
                        "amount_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                          "example": 100
                        },
                        "dex": {
                          "type": "string",
                          "description": "The decentralized exchange (DEX) where the flashloan transaction took place.",
                          "example": "Uniswap"
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "health_factor": {
                          "type": "number",
                          "description": "The health factor of the wallet after the flashloan transaction.",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the token involved in the transaction.",
                          "example": "Wrapped Ether"
                        },
                        "platform": {
                          "type": "string",
                          "description": "The platform where the flashloan transaction took place.",
                          "example": "Aave"
                        },
                        "price_usd": {
                          "type": "number",
                          "description": "The price of the token in USD.",
                          "example": 100
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol of the token involved in the transaction.",
                          "example": "ETH"
                        },
                        "token_icon_link": {
                          "type": "string",
                          "description": "A link to the icon of the token involved in the transaction.",
                          "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "address",
                        "amount",
                        "amount_usd",
                        "dex",
                        "from",
                        "health_factor",
                        "name",
                        "platform",
                        "price_usd",
                        "symbol",
                        "token_icon_link"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a contract creation event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "amount_usd": {
                          "type": "number",
                          "description": "The equivalent amount in USD of the wrapped tokens.",
                          "example": "100.0"
                        },
                        "contract_address": {
                          "type": "string",
                          "description": "The address of the smart contract involved in the interaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "from_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the originating wallet.",
                          "example": "Alice"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "amount_usd",
                        "contract_address",
                        "from",
                        "from_label"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a NFT liquidation event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "contract_address": {
                          "type": "string",
                          "description": "The address of the NFT contract involved in the interaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "currency_address": {
                          "type": "string",
                          "description": "The address of the currency involved in the transaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "currency_symbol": {
                          "type": "string",
                          "description": "The symbol of the currency involved in the transaction.",
                          "example": "ETH"
                        },
                        "dex": {
                          "type": "string",
                          "description": "The decentralized exchange where the wrap transaction occurred.",
                          "example": "Uniswap"
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "nft_address": {
                          "type": "string",
                          "description": "The address of the NFT contract involved in the interaction.",
                          "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                        },
                        "nft_name": {
                          "type": "string",
                          "description": "The name of the NFT in the transaction.",
                          "example": "NFT"
                        },
                        "nft_symbol": {
                          "type": "string",
                          "description": "The symbol of the NFT in the transaction.",
                          "example": "NFT"
                        },
                        "platform": {
                          "type": "string",
                          "description": "The platform where the flashloan transaction took place.",
                          "example": "Aave"
                        },
                        "price": {
                          "type": "number",
                          "description": "The price of the NFT in the transaction.",
                          "example": 100
                        },
                        "price_usd": {
                          "type": "number",
                          "description": "The price of the NFT in USD.",
                          "example": 100
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "token_id": {
                          "type": "string",
                          "description": "The unique identifier of the NFT in the transaction.",
                          "example": "1"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "contract_address",
                        "currency_address",
                        "currency_symbol",
                        "dex",
                        "from",
                        "nft_address",
                        "nft_name",
                        "nft_symbol",
                        "platform",
                        "price",
                        "price_usd",
                        "to",
                        "token_id"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing an option event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address participating in the LP transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                          "example": "vitalik.eth"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique transaction hash identifying this specific LP transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                          "example": "lp"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                          "example": "optimism"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "action": {
                          "type": "string",
                          "description": "The action taken in the option event.",
                          "example": "buy"
                        },
                        "amount": {
                          "type": "number",
                          "description": "The amount of tokens involved in the transaction.",
                          "example": 100
                        },
                        "asset": {
                          "type": "string",
                          "description": "The asset involved in the option event.",
                          "example": "ETH"
                        },
                        "dex": {
                          "type": "string",
                          "description": "The decentralized exchange (DEX) where the option event took place.",
                          "example": "Uniswap"
                        },
                        "direction": {
                          "type": "string",
                          "description": "The direction of the option event.",
                          "example": "call"
                        },
                        "expiry": {
                          "type": "string",
                          "description": "The expiry date of the option.",
                          "example": "2022-12-31"
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "option_price_usd": {
                          "type": "number",
                          "description": "The price of the option in USD.",
                          "example": 100
                        },
                        "position_status": {
                          "type": "string",
                          "description": "The status of the option position.",
                          "example": "open"
                        },
                        "spot_price_usd": {
                          "type": "number",
                          "description": "The spot price of the asset in USD.",
                          "example": 100
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the option event.",
                          "example": "active"
                        },
                        "strike_price_usd": {
                          "type": "number",
                          "description": "The strike price of the option in USD.",
                          "example": 100
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address for the transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of option event.",
                          "example": "call"
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "action",
                        "amount",
                        "asset",
                        "dex",
                        "direction",
                        "expiry",
                        "from",
                        "option_price_usd",
                        "position_status",
                        "spot_price_usd",
                        "status",
                        "strike_price_usd",
                        "to",
                        "type"
                      ]
                    },
                    {
                      "type": "object",
                      "description": "This object provides a structure for representing a NFT sweep event on the blockchain.",
                      "properties": {
                        "wallet": {
                          "type": "string",
                          "description": "The wallet address involved in the NFT trading transaction.",
                          "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                        },
                        "wallet_label": {
                          "type": "string",
                          "description": "A readable label for the wallet address.",
                          "example": "0xa4c8...f9457d"
                        },
                        "tx_hash": {
                          "type": "string",
                          "description": "The unique hash identifier of the NFT trading transaction.",
                          "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                        },
                        "tx_type": {
                          "type": "string",
                          "description": "Specifies the type of transaction, in this case, NFT trading.",
                          "example": "nft_trade"
                        },
                        "chain": {
                          "type": "string",
                          "description": "The blockchain network where the trading transaction occurred.",
                          "example": "ethereum"
                        },
                        "index": {
                          "type": "integer",
                          "description": "A numerical index or identifier for the transaction.",
                          "example": 10
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "The timestamp marking when the transaction was executed.",
                          "example": 1702899395
                        },
                        "block": {
                          "type": "integer",
                          "description": "The block number on the blockchain where this transaction is recorded.",
                          "example": 113650309
                        },
                        "from": {
                          "type": "string",
                          "description": "The originating wallet address of the transaction.",
                          "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                        },
                        "to": {
                          "type": "string",
                          "description": "The destination wallet address of the transaction.",
                          "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                        },
                        "thumbnail": {
                          "type": "string",
                          "description": "A thumbnail image URL of the NFT involved in the transaction.",
                          "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "image": {
                          "type": "string",
                          "description": "A full image URL of the NFT.",
                          "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                        },
                        "action": {
                          "type": "string",
                          "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                          "example": "buy"
                        },
                        "contract": {
                          "type": "string",
                          "description": "The blockchain contract address associated with the NFT.",
                          "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                        },
                        "marketplace": {
                          "type": "string",
                          "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                          "example": "OpenSea"
                        },
                        "nft_address": {
                          "type": "string",
                          "description": "The blockchain address of the NFT involved in the trade.",
                          "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                        },
                        "nft_name": {
                          "type": "string",
                          "description": "The name of the NFT traded.",
                          "example": "Gemesis"
                        },
                        "nft_symbol": {
                          "type": "string",
                          "description": "The symbol associated with the NFT.",
                          "example": "OSP"
                        },
                        "nft_token_id": {
                          "type": "string",
                          "description": "The unique token ID of the NFT involved in the trade.",
                          "example": 32507
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "The price at which the NFT was traded.",
                          "example": 0.0151
                        },
                        "price_usd": {
                          "type": "number",
                          "format": "double",
                          "description": "The equivalent USD value of the NFT trade.",
                          "example": 32.911356
                        },
                        "profit": {
                          "type": "number",
                          "format": "double",
                          "description": "The profit earned from the trade. This may be zero in some transactions.",
                          "example": 0
                        },
                        "currency_symbol": {
                          "type": "string",
                          "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                          "example": "WETH"
                        },
                        "buyer": {
                          "type": "string",
                          "description": "The wallet address of the buyer in the trade."
                        },
                        "seller": {
                          "type": "string",
                          "description": "The wallet address of the seller in the trade."
                        },
                        "token": {
                          "type": "string",
                          "description": "The token type used in the transaction."
                        },
                        "first_interaction": {
                          "type": "boolean",
                          "description": "Indicates whether this was the first interaction between the buyer and seller."
                        },
                        "bid_accepted": {
                          "type": "boolean",
                          "description": "Specifies if the transaction involved a bid being accepted."
                        }
                      },
                      "required": [
                        "wallet",
                        "wallet_label",
                        "tx_hash",
                        "tx_type",
                        "chain",
                        "index",
                        "timestamp",
                        "block",
                        "from",
                        "to",
                        "thumbnail",
                        "image",
                        "action",
                        "contract",
                        "marketplace",
                        "nft_address",
                        "nft_name",
                        "nft_symbol",
                        "nft_token_id",
                        "price",
                        "price_usd",
                        "profit",
                        "currency_symbol",
                        "buyer",
                        "seller",
                        "token",
                        "first_interaction",
                        "bid_accepted"
                      ]
                    }
                  ]
                }
              },
              "paging": {
                "type": "object",
                "description": "Provides details about pagination, indicating the total number of rows on the current page, whether a next page exists, and the identifier for the next object.",
                "properties": {
                  "total_rows_in_page": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "The total number of rows present in the current page of the response.",
                    "example": 10
                  },
                  "has_next_page": {
                    "type": "boolean",
                    "description": "A boolean flag indicating if there is a subsequent page available after the current page.",
                    "example": true
                  },
                  "next_object": {
                    "type": "string",
                    "description": "An identifier for the next object or page, used for pagination purposes."
                  }
                },
                "required": [
                  "total_rows_in_page",
                  "has_next_page"
                ]
              }
            },
            "required": [
              "items",
              "paging"
            ]
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "TotalStats": {
        "type": "object",
        "description": "The response schema for the /v1/{wallet}/pnl/total-stats endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response, including aggregated PnL stats for the specified wallet.",
            "properties": {
              "wallet": {
                "type": "string",
                "description": "The wallet address for which the PnL stats are provided.",
                "example": "6sdb5o3XWM27RSjcYqoVZ88ruuPzHTfqFQEq26nN6eVq"
              },
              "realized_pnl_usd": {
                "type": "integer",
                "format": "float64",
                "description": "The total PnL in usd for the specified wallet.",
                "example": 10000
              },
              "realized_roi_percentage": {
                "type": "integer",
                "format": "float64",
                "description": "The total ROI percentage for the specified wallet.",
                "example": 52.2
              },
              "tokens_traded": {
                "type": "integer",
                "format": "float64",
                "description": "The total number of tokens traded for the specified wallet.",
                "example": 25
              },
              "unrealized_pnl_usd": {
                "type": "integer",
                "format": "float64",
                "description": "The total unrealized PnL in usd for the specified wallet.",
                "example": 5000
              },
              "unrealized_roi_percentage": {
                "type": "integer",
                "format": "float64",
                "description": "The total unrealized ROI percentage for the specified wallet.",
                "example": 75.2
              },
              "winrate": {
                "type": "integer",
                "format": "float64",
                "description": "The winrate percentage for the specified wallet.",
                "example": 53.5
              },
              "average_holding_time": {
                "type": "integer",
                "format": "float64",
                "description": "The average holding time for the specified wallet in hours.",
                "example": 5
              },
              "combined_pnl_usd": {
                "type": "integer",
                "format": "float64",
                "description": "The combined PnL in usd for the specified wallet.",
                "example": 15000
              },
              "combined_roi_percentage": {
                "type": "integer",
                "format": "float64",
                "description": "The combined ROI percentage for the specified wallet.",
                "example": 127.4
              }
            }
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "TagTypes": {
        "type": "string",
        "enum": [
          "high_volume_dex_trader",
          "early_defi",
          "multichain",
          "new_wallet",
          "high_leverage_trader",
          "nft_trader",
          "nftfi",
          "nft_high_pnl",
          "popular_wallet",
          "airdrop_hunter",
          "gem_finder",
          "high_win_rate",
          "new_whale",
          "flipper",
          "honeypot",
          "mev"
        ]
      },
      "TagModel": {
        "type": "object",
        "properties": {
          "key": {
            "description": "A unique identifier for the tag.",
            "example": "nft_trader",
            "type": "string",
            "enum": [
              "high_volume_dex_trader",
              "early_defi",
              "multichain",
              "new_wallet",
              "high_leverage_trader",
              "nft_trader",
              "nftfi",
              "nft_high_pnl",
              "popular_wallet",
              "airdrop_hunter",
              "gem_finder",
              "high_win_rate",
              "new_whale",
              "flipper",
              "honeypot",
              "mev"
            ]
          },
          "tag": {
            "type": "string",
            "description": "The tag label or name.",
            "example": "NFT Trader"
          },
          "description": {
            "type": "string",
            "description": "A description of what the tag represents.",
            "example": "More than 50 ETH volume trading NFTs"
          }
        },
        "required": [
          "key",
          "tag",
          "description"
        ]
      },
      "Tags": {
        "type": "object",
        "description": "The response schema for the /v1/{wallet}/tags endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response.",
            "properties": {
              "tags": {
                "type": "array",
                "description": "An array of tags associated with the wallet address.",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "A unique identifier for the tag.",
                      "example": "nft_trader",
                      "type": "string",
                      "enum": [
                        "high_volume_dex_trader",
                        "early_defi",
                        "multichain",
                        "new_wallet",
                        "high_leverage_trader",
                        "nft_trader",
                        "nftfi",
                        "nft_high_pnl",
                        "popular_wallet",
                        "airdrop_hunter",
                        "gem_finder",
                        "high_win_rate",
                        "new_whale",
                        "flipper",
                        "honeypot",
                        "mev"
                      ]
                    },
                    "tag": {
                      "type": "string",
                      "description": "The tag label or name.",
                      "example": "NFT Trader"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of what the tag represents.",
                      "example": "More than 50 ETH volume trading NFTs"
                    }
                  },
                  "required": [
                    "key",
                    "tag",
                    "description"
                  ]
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "WalletsTags": {
        "type": "object",
        "description": "The response schema for the /v1/tags endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "array",
            "description": "Contains the main data of the response.",
            "items": {
              "type": "object",
              "properties": {
                "wallet": {
                  "type": "string",
                  "description": "The wallet address associated with the tags.",
                  "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
                },
                "tags": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "A unique identifier for the tag.",
                      "example": "nft_trader",
                      "type": "string",
                      "enum": [
                        "high_volume_dex_trader",
                        "early_defi",
                        "multichain",
                        "new_wallet",
                        "high_leverage_trader",
                        "nft_trader",
                        "nftfi",
                        "nft_high_pnl",
                        "popular_wallet",
                        "airdrop_hunter",
                        "gem_finder",
                        "high_win_rate",
                        "new_whale",
                        "flipper",
                        "honeypot",
                        "mev"
                      ]
                    },
                    "tag": {
                      "type": "string",
                      "description": "The tag label or name.",
                      "example": "NFT Trader"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of what the tag represents.",
                      "example": "More than 50 ETH volume trading NFTs"
                    }
                  },
                  "required": [
                    "key",
                    "tag",
                    "description"
                  ]
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "WalletsByTag": {
        "type": "object",
        "description": "The response schema for the /v1/tags/wallets endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response.",
            "properties": {
              "items": {
                "type": "array",
                "description": "An array of related wallets associated with the wallet address.",
                "items": {
                  "type": "object",
                  "properties": {
                    "wallet": {
                      "type": "string",
                      "description": "The wallet address for a wallet with the provided tags.",
                      "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
                    },
                    "wallet_type": {
                      "type": "string",
                      "enum": [
                        "evm",
                        "solana"
                      ],
                      "description": "The wallet type for the wallet returned.",
                      "example": "evm"
                    }
                  }
                }
              },
              "paging": {
                "type": "object",
                "description": "Provides details about pagination, indicating the total number of rows on the current page, whether a next page exists, and the identifier for the next object.",
                "properties": {
                  "next_page": {
                    "type": "string",
                    "description": "An identifier for the next page, used for pagination purposes."
                  },
                  "has_next_page": {
                    "type": "boolean",
                    "description": "Indicates whether a next page exists."
                  }
                },
                "required": [
                  "has_next_page"
                ]
              }
            },
            "required": [
              "items",
              "paging"
            ]
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "RelatedWallets": {
        "type": "object",
        "description": "The response schema for the /v1/{wallet}/related-wallets endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response.",
            "properties": {
              "related_wallets": {
                "type": "array",
                "description": "An array of related wallets associated with the wallet address.",
                "items": {
                  "type": "object",
                  "properties": {
                    "wallet": {
                      "type": "string",
                      "description": "The wallet address for which the related wallets are provided.",
                      "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
                    },
                    "inflow_usd": {
                      "type": "integer",
                      "description": "The total inflow in usd for the specified wallet.",
                      "example": 10000
                    },
                    "outflow_usd": {
                      "type": "integer",
                      "description": "The total outflow in usd for the specified wallet.",
                      "example": 15000
                    },
                    "total_usd": {
                      "type": "integer",
                      "description": "The total inflow and outflow in usd for the specified wallet.",
                      "example": 25000
                    },
                    "count": {
                      "type": "integer",
                      "description": "The total number of transactions for the specified wallet.",
                      "example": 2
                    },
                    "label": {
                      "type": "string",
                      "description": "The label for the related wallet.",
                      "example": "Wallet Name"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "WalletTypes": {
        "type": "object",
        "description": "Enumerates the different types of wallets.",
        "enum": [
          "unknown",
          "evm",
          "solana",
          "dydx",
          "bitcoin"
        ]
      },
      "GetTrackedWallets": {
        "type": "object",
        "description": "The response schema for the /api/v1/tracked-wallets endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response.",
            "properties": {
              "tracked_wallets": {
                "type": "array",
                "description": "An array of tracked wallets.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The unique identifier for the tracked wallet.",
                      "example": 1
                    },
                    "wallet": {
                      "type": "string",
                      "description": "The wallet address for which the related wallets are provided.",
                      "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
                    },
                    "label": {
                      "type": "string",
                      "description": "The label for the related wallet.",
                      "example": "Wallet Name"
                    },
                    "type": {
                      "type": "object",
                      "description": "Enumerates the different types of wallets.",
                      "enum": [
                        "unknown",
                        "evm",
                        "solana",
                        "dydx",
                        "bitcoin"
                      ]
                    },
                    "list_id": {
                      "type": "number",
                      "description": "The list id for the tracked wallet.",
                      "example": 1
                    },
                    "list": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "integer"
                        },
                        "bot_id": {
                          "type": "integer"
                        },
                        "description": {
                          "type": "string"
                        },
                        "is_public": {
                          "type": "boolean"
                        },
                        "followed_count": {
                          "type": "integer"
                        },
                        "wallets_count": {
                          "type": "integer"
                        },
                        "share_url": {
                          "type": "string"
                        },
                        "image_url": {
                          "type": "string"
                        },
                        "followed": {
                          "type": "boolean"
                        },
                        "is_creator": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "name",
                        "created_at",
                        "bot_id",
                        "description",
                        "is_public",
                        "followed_count",
                        "wallets_count",
                        "share_url",
                        "image_url",
                        "followed",
                        "is_creator"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "wallet",
                    "label",
                    "type"
                  ]
                }
              },
              "Paging": {
                "type": "object",
                "properties": {
                  "total_rows_in_page": {
                    "type": "number",
                    "description": "The total number of rows in the current page.",
                    "example": 10
                  },
                  "has_next_page": {
                    "type": "boolean",
                    "description": "Indicates whether there is a next page of results.",
                    "example": true
                  },
                  "next_object": {
                    "type": "number",
                    "description": "The index of the next object in the result set.",
                    "example": 11
                  }
                },
                "required": [
                  "total_rows_in_page",
                  "has_next_page",
                  "next_object"
                ]
              }
            }
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "AddTrackedWallet": {
        "type": "object",
        "description": "The response schema for the /api/v1/tracked-wallets endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "The unique identifier for the tracked wallet.",
                "example": 1
              },
              "wallet": {
                "type": "string",
                "description": "The wallet address for which the related wallets are provided.",
                "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
              },
              "label": {
                "type": "string",
                "description": "The label for the related wallet.",
                "example": "Wallet Name"
              },
              "type": {
                "type": "object",
                "description": "Enumerates the different types of wallets.",
                "enum": [
                  "unknown",
                  "evm",
                  "solana",
                  "dydx",
                  "bitcoin"
                ]
              },
              "list_id": {
                "type": "number",
                "description": "The list id for the tracked wallet.",
                "example": 1
              },
              "list": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "integer"
                  },
                  "bot_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "is_public": {
                    "type": "boolean"
                  },
                  "followed_count": {
                    "type": "integer"
                  },
                  "wallets_count": {
                    "type": "integer"
                  },
                  "share_url": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "followed": {
                    "type": "boolean"
                  },
                  "is_creator": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "created_at",
                  "bot_id",
                  "description",
                  "is_public",
                  "followed_count",
                  "wallets_count",
                  "share_url",
                  "image_url",
                  "followed",
                  "is_creator"
                ]
              }
            },
            "required": [
              "id",
              "wallet",
              "label",
              "type"
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateTrackedWallet": {
        "type": "object",
        "description": "The response schema for the /api/v1/tracked-wallets/{wallet_id} endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "The unique identifier for the tracked wallet.",
                "example": 1
              },
              "wallet": {
                "type": "string",
                "description": "The wallet address for which the related wallets are provided.",
                "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
              },
              "label": {
                "type": "string",
                "description": "The label for the related wallet.",
                "example": "Wallet Name"
              },
              "type": {
                "type": "object",
                "description": "Enumerates the different types of wallets.",
                "enum": [
                  "unknown",
                  "evm",
                  "solana",
                  "dydx",
                  "bitcoin"
                ]
              },
              "list_id": {
                "type": "number",
                "description": "The list id for the tracked wallet.",
                "example": 1
              },
              "list": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "integer"
                  },
                  "bot_id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "is_public": {
                    "type": "boolean"
                  },
                  "followed_count": {
                    "type": "integer"
                  },
                  "wallets_count": {
                    "type": "integer"
                  },
                  "share_url": {
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "followed": {
                    "type": "boolean"
                  },
                  "is_creator": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "created_at",
                  "bot_id",
                  "description",
                  "is_public",
                  "followed_count",
                  "wallets_count",
                  "share_url",
                  "image_url",
                  "followed",
                  "is_creator"
                ]
              }
            },
            "required": [
              "id",
              "wallet",
              "label",
              "type"
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "DeleteTrackedWallets": {
        "type": "object",
        "description": "The response schema for the /api/v1/tracked-wallets endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "message"
        ]
      },
      "TrackedWallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier for the tracked wallet.",
            "example": 1
          },
          "wallet": {
            "type": "string",
            "description": "The wallet address for which the related wallets are provided.",
            "example": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2"
          },
          "label": {
            "type": "string",
            "description": "The label for the related wallet.",
            "example": "Wallet Name"
          },
          "type": {
            "type": "object",
            "description": "Enumerates the different types of wallets.",
            "enum": [
              "unknown",
              "evm",
              "solana",
              "dydx",
              "bitcoin"
            ]
          },
          "list_id": {
            "type": "number",
            "description": "The list id for the tracked wallet.",
            "example": 1
          },
          "list": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "created_at": {
                "type": "integer"
              },
              "bot_id": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              },
              "is_public": {
                "type": "boolean"
              },
              "followed_count": {
                "type": "integer"
              },
              "wallets_count": {
                "type": "integer"
              },
              "share_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "followed": {
                "type": "boolean"
              },
              "is_creator": {
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "created_at",
              "bot_id",
              "description",
              "is_public",
              "followed_count",
              "wallets_count",
              "share_url",
              "image_url",
              "followed",
              "is_creator"
            ]
          }
        },
        "required": [
          "id",
          "wallet",
          "label",
          "type"
        ]
      },
      "TrackedWalletsPaging": {
        "type": "object",
        "properties": {
          "total_rows_in_page": {
            "type": "number",
            "description": "The total number of rows in the current page.",
            "example": 10
          },
          "has_next_page": {
            "type": "boolean",
            "description": "Indicates whether there is a next page of results.",
            "example": true
          },
          "next_object": {
            "type": "number",
            "description": "The index of the next object in the result set.",
            "example": 11
          }
        },
        "required": [
          "total_rows_in_page",
          "has_next_page",
          "next_object"
        ]
      },
      "ResponseStatus": {
        "type": "string",
        "enum": [
          "ok",
          "error"
        ]
      },
      "TokensPNL": {
        "type": "object",
        "description": "The response schema for the /v1/tokens_pnl endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response, including a list of tokens PNL items and pagination details.",
            "properties": {
              "items": {
                "type": "array",
                "description": "An array of tokens PNL items, each providing detailed information on token transactions and performance.",
                "items": {
                  "type": "object",
                  "properties": {
                    "num_swaps": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_buy_usd": {
                      "type": "number",
                      "format": "double"
                    },
                    "total_buy_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "total_sell_usd": {
                      "type": "number",
                      "format": "double"
                    },
                    "total_sell_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "average_buy_price": {
                      "type": "number",
                      "format": "double"
                    },
                    "average_sell_price": {
                      "type": "number",
                      "format": "double"
                    },
                    "total_pnl_usd": {
                      "type": "number",
                      "format": "double"
                    },
                    "roi_percentage": {
                      "type": "number",
                      "format": "double"
                    },
                    "unrealized_pnl_usd": {
                      "type": "number",
                      "format": "double"
                    },
                    "unrealized_roi_percentage": {
                      "type": "number",
                      "format": "double"
                    },
                    "token_price": {
                      "type": "number",
                      "format": "double"
                    },
                    "token_address": {
                      "type": "string"
                    },
                    "token_symbol": {
                      "type": "string"
                    },
                    "token_name": {
                      "type": "string"
                    },
                    "chain": {
                      "type": "string"
                    },
                    "is_honeypot": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "paging": {
                "type": "object",
                "properties": {
                  "total_rows_in_page": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "has_next_page": {
                    "type": "boolean"
                  },
                  "next_object": {
                    "type": "string"
                  }
                },
                "required": [
                  "total_rows_in_page",
                  "has_next_page"
                ]
              }
            },
            "required": [
              "items",
              "paging"
            ]
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "TokensPNLItem": {
        "type": "object",
        "properties": {
          "num_swaps": {
            "type": "integer",
            "format": "int64"
          },
          "total_buy_usd": {
            "type": "number",
            "format": "double"
          },
          "total_buy_amount": {
            "type": "number",
            "format": "double"
          },
          "total_sell_usd": {
            "type": "number",
            "format": "double"
          },
          "total_sell_amount": {
            "type": "number",
            "format": "double"
          },
          "average_buy_price": {
            "type": "number",
            "format": "double"
          },
          "average_sell_price": {
            "type": "number",
            "format": "double"
          },
          "total_pnl_usd": {
            "type": "number",
            "format": "double"
          },
          "roi_percentage": {
            "type": "number",
            "format": "double"
          },
          "unrealized_pnl_usd": {
            "type": "number",
            "format": "double"
          },
          "unrealized_roi_percentage": {
            "type": "number",
            "format": "double"
          },
          "token_price": {
            "type": "number",
            "format": "double"
          },
          "token_address": {
            "type": "string"
          },
          "token_symbol": {
            "type": "string"
          },
          "token_name": {
            "type": "string"
          },
          "chain": {
            "type": "string"
          },
          "is_honeypot": {
            "type": "boolean"
          }
        }
      },
      "NftsPnL": {
        "type": "object",
        "description": "The response schema for the /v1/nftss_pnl endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response, including a list of Nft PnL items and pagination details.",
            "properties": {
              "items": {
                "type": "array",
                "description": "An array of Nft PnL items, each providing detailed information on token transactions and performance.",
                "items": {
                  "type": "object",
                  "properties": {
                    "num_swaps": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_buy_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "total_sell_amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "total_buy_avg": {
                      "type": "number",
                      "format": "double"
                    },
                    "total_sell_avg": {
                      "type": "number",
                      "format": "double"
                    },
                    "total_buy_usd": {
                      "type": "number",
                      "format": "double"
                    },
                    "total_sell_usd": {
                      "type": "number",
                      "format": "double"
                    },
                    "profit_loss": {
                      "type": "number",
                      "format": "double"
                    },
                    "roi_percentage": {
                      "type": "number",
                      "format": "double"
                    },
                    "chain": {
                      "type": "string"
                    },
                    "token_address": {
                      "type": "string"
                    },
                    "nft_symbol": {
                      "type": "string"
                    },
                    "nft_name": {
                      "type": "string"
                    }
                  }
                }
              },
              "paging": {
                "type": "object",
                "properties": {
                  "total_rows_in_page": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "has_next_page": {
                    "type": "boolean"
                  },
                  "next_object": {
                    "type": "string"
                  }
                },
                "required": [
                  "total_rows_in_page",
                  "has_next_page"
                ]
              }
            },
            "required": [
              "items",
              "paging"
            ]
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "NftPnLItem": {
        "type": "object",
        "properties": {
          "num_swaps": {
            "type": "integer",
            "format": "int64"
          },
          "total_buy_amount": {
            "type": "number",
            "format": "double"
          },
          "total_sell_amount": {
            "type": "number",
            "format": "double"
          },
          "total_buy_avg": {
            "type": "number",
            "format": "double"
          },
          "total_sell_avg": {
            "type": "number",
            "format": "double"
          },
          "total_buy_usd": {
            "type": "number",
            "format": "double"
          },
          "total_sell_usd": {
            "type": "number",
            "format": "double"
          },
          "profit_loss": {
            "type": "number",
            "format": "double"
          },
          "roi_percentage": {
            "type": "number",
            "format": "double"
          },
          "chain": {
            "type": "string"
          },
          "token_address": {
            "type": "string"
          },
          "nft_symbol": {
            "type": "string"
          },
          "nft_name": {
            "type": "string"
          }
        }
      },
      "PnLPaging": {
        "type": "object",
        "properties": {
          "total_rows_in_page": {
            "type": "integer",
            "format": "int32"
          },
          "has_next_page": {
            "type": "boolean"
          },
          "next_object": {
            "type": "string"
          }
        },
        "required": [
          "total_rows_in_page",
          "has_next_page"
        ]
      },
      "Paging": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1
          },
          "total_rows_in_page": {
            "type": "integer",
            "minimum": 0,
            "example": 10
          },
          "has_next_page": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "page",
          "total_rows_in_page",
          "has_next_page"
        ]
      },
      "GetAllWalletsListsResponse": {
        "type": "object",
        "description": "The response schema for the /api/v1/lists/all endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response.",
            "properties": {
              "lists": {
                "type": "array",
                "description": "An array of all lists.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "integer"
                    },
                    "bot_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "is_public": {
                      "type": "boolean"
                    },
                    "followed_count": {
                      "type": "integer"
                    },
                    "wallets_count": {
                      "type": "integer"
                    },
                    "share_url": {
                      "type": "string"
                    },
                    "image_url": {
                      "type": "string"
                    },
                    "followed": {
                      "type": "boolean"
                    },
                    "is_creator": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "created_at",
                    "bot_id",
                    "description",
                    "is_public",
                    "followed_count",
                    "wallets_count",
                    "share_url",
                    "image_url",
                    "followed",
                    "is_creator"
                  ]
                }
              },
              "Paging": {
                "type": "object",
                "properties": {
                  "total_rows_in_page": {
                    "type": "integer"
                  },
                  "has_next_page": {
                    "type": "boolean"
                  },
                  "next_object": {
                    "type": "string"
                  }
                },
                "required": [
                  "total_rows_in_page",
                  "has_next_page",
                  "next_object"
                ]
              }
            }
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "GetUserListsResponse": {
        "type": "object",
        "description": "The response schema for the /api/v1/lists endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "array",
            "description": "Contains the main data of the response.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "created_at": {
                  "type": "integer"
                },
                "bot_id": {
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "is_public": {
                  "type": "boolean"
                },
                "followed_count": {
                  "type": "integer"
                },
                "wallets_count": {
                  "type": "integer"
                },
                "share_url": {
                  "type": "string"
                },
                "image_url": {
                  "type": "string"
                },
                "followed": {
                  "type": "boolean"
                },
                "is_creator": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "created_at",
                "bot_id",
                "description",
                "is_public",
                "followed_count",
                "wallets_count",
                "share_url",
                "image_url",
                "followed",
                "is_creator"
              ]
            }
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateUserListRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "wallets": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "followed_list_id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateUserListResponse": {
        "type": "object",
        "description": "The response schema for the /api/v1/lists endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "created_at": {
                "type": "integer"
              },
              "bot_id": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              },
              "is_public": {
                "type": "boolean"
              },
              "followed_count": {
                "type": "integer"
              },
              "wallets_count": {
                "type": "integer"
              },
              "share_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "followed": {
                "type": "boolean"
              },
              "is_creator": {
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "created_at",
              "bot_id",
              "description",
              "is_public",
              "followed_count",
              "wallets_count",
              "share_url",
              "image_url",
              "followed",
              "is_creator"
            ]
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "UpdateUserListRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "wallets": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "followed_list_id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateUserListResponse": {
        "type": "object",
        "description": "The response schema for the /api/v1/lists/{list_id} endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "created_at": {
                "type": "integer"
              },
              "bot_id": {
                "type": "integer"
              },
              "description": {
                "type": "string"
              },
              "is_public": {
                "type": "boolean"
              },
              "followed_count": {
                "type": "integer"
              },
              "wallets_count": {
                "type": "integer"
              },
              "share_url": {
                "type": "string"
              },
              "image_url": {
                "type": "string"
              },
              "followed": {
                "type": "boolean"
              },
              "is_creator": {
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "created_at",
              "bot_id",
              "description",
              "is_public",
              "followed_count",
              "wallets_count",
              "share_url",
              "image_url",
              "followed",
              "is_creator"
            ]
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "DeleteUserListResponse": {
        "type": "object",
        "description": "The response schema for the /api/v1/lists/{list_id} endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "message"
        ]
      },
      "ToggleFollowListResponse": {
        "type": "object",
        "description": "The response schema for the /api/v1/lists/{list_id}/toggle-follow endpoint.",
        "properties": {
          "status": {
            "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
            "type": "string",
            "enum": [
              "ok",
              "error"
            ]
          },
          "data": {
            "type": "object",
            "description": "Contains the main data of the response.",
            "properties": {
              "followed": {
                "type": "boolean",
                "description": "The follow status of the list."
              }
            }
          },
          "message": {
            "type": "string",
            "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "WalletsList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "integer"
          },
          "bot_id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "followed_count": {
            "type": "integer"
          },
          "wallets_count": {
            "type": "integer"
          },
          "share_url": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          },
          "followed": {
            "type": "boolean"
          },
          "is_creator": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "created_at",
          "bot_id",
          "description",
          "is_public",
          "followed_count",
          "wallets_count",
          "share_url",
          "image_url",
          "followed",
          "is_creator"
        ]
      },
      "WalletsListPaging": {
        "type": "object",
        "properties": {
          "total_rows_in_page": {
            "type": "integer"
          },
          "has_next_page": {
            "type": "boolean"
          },
          "next_object": {
            "type": "string"
          }
        },
        "required": [
          "total_rows_in_page",
          "has_next_page",
          "next_object"
        ]
      },
      "WebsocketCommand": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscribe_wallet"
                ]
              },
              "wallet": {
                "type": "string"
              },
              "filter": {
                "type": "object",
                "properties": {
                  "tx_types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "bridge",
                        "contract_creation",
                        "contract_interaction",
                        "flashloan",
                        "lending",
                        "lp",
                        "nft_lending",
                        "nft_liquidation",
                        "nft_mint",
                        "nft_sweep",
                        "nft_trade",
                        "nft_transfer",
                        "option",
                        "perp",
                        "reward",
                        "staking",
                        "sudo_pool",
                        "swap",
                        "transfer",
                        "wrap"
                      ]
                    },
                    "description": "The types of transactions to filter."
                  },
                  "chains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The chains to filter."
                  },
                  "tokens": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The tokens to filter."
                  },
                  "min_usd_value": {
                    "type": "number",
                    "description": "The minimum USD value to filter."
                  }
                },
                "example": {
                  "tx_types": [
                    "transfer",
                    "swap"
                  ],
                  "chains": [
                    "chain1",
                    "chain2"
                  ],
                  "tokens": [
                    "token1",
                    "token2"
                  ],
                  "min_usd_value": 100
                }
              }
            },
            "required": [
              "type",
              "wallet"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unsubscribe_wallet"
                ]
              },
              "wallet": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "wallet"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscribe_feed"
                ]
              },
              "list_id": {
                "type": "string"
              },
              "filter": {
                "type": "object",
                "properties": {
                  "tx_types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "bridge",
                        "contract_creation",
                        "contract_interaction",
                        "flashloan",
                        "lending",
                        "lp",
                        "nft_lending",
                        "nft_liquidation",
                        "nft_mint",
                        "nft_sweep",
                        "nft_trade",
                        "nft_transfer",
                        "option",
                        "perp",
                        "reward",
                        "staking",
                        "sudo_pool",
                        "swap",
                        "transfer",
                        "wrap"
                      ]
                    },
                    "description": "The types of transactions to filter."
                  },
                  "chains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The chains to filter."
                  },
                  "tokens": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The tokens to filter."
                  },
                  "min_usd_value": {
                    "type": "number",
                    "description": "The minimum USD value to filter."
                  }
                },
                "example": {
                  "tx_types": [
                    "transfer",
                    "swap"
                  ],
                  "chains": [
                    "chain1",
                    "chain2"
                  ],
                  "tokens": [
                    "token1",
                    "token2"
                  ],
                  "min_usd_value": 100
                }
              }
            },
            "required": [
              "type",
              "list_id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unsubscribe_feed"
                ]
              }
            },
            "required": [
              "type"
            ]
          }
        ]
      },
      "WalletSubscribeCommand": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscribe_wallet"
            ]
          },
          "wallet": {
            "type": "string"
          },
          "filter": {
            "type": "object",
            "properties": {
              "tx_types": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "bridge",
                    "contract_creation",
                    "contract_interaction",
                    "flashloan",
                    "lending",
                    "lp",
                    "nft_lending",
                    "nft_liquidation",
                    "nft_mint",
                    "nft_sweep",
                    "nft_trade",
                    "nft_transfer",
                    "option",
                    "perp",
                    "reward",
                    "staking",
                    "sudo_pool",
                    "swap",
                    "transfer",
                    "wrap"
                  ]
                },
                "description": "The types of transactions to filter."
              },
              "chains": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The chains to filter."
              },
              "tokens": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The tokens to filter."
              },
              "min_usd_value": {
                "type": "number",
                "description": "The minimum USD value to filter."
              }
            },
            "example": {
              "tx_types": [
                "transfer",
                "swap"
              ],
              "chains": [
                "chain1",
                "chain2"
              ],
              "tokens": [
                "token1",
                "token2"
              ],
              "min_usd_value": 100
            }
          }
        },
        "required": [
          "type",
          "wallet"
        ]
      },
      "WalletUnsubscribeCommand": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "unsubscribe_wallet"
            ]
          },
          "wallet": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "wallet"
        ]
      },
      "FeedSubscribeCommand": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscribe_feed"
            ]
          },
          "list_id": {
            "type": "string"
          },
          "filter": {
            "type": "object",
            "properties": {
              "tx_types": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "bridge",
                    "contract_creation",
                    "contract_interaction",
                    "flashloan",
                    "lending",
                    "lp",
                    "nft_lending",
                    "nft_liquidation",
                    "nft_mint",
                    "nft_sweep",
                    "nft_trade",
                    "nft_transfer",
                    "option",
                    "perp",
                    "reward",
                    "staking",
                    "sudo_pool",
                    "swap",
                    "transfer",
                    "wrap"
                  ]
                },
                "description": "The types of transactions to filter."
              },
              "chains": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The chains to filter."
              },
              "tokens": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The tokens to filter."
              },
              "min_usd_value": {
                "type": "number",
                "description": "The minimum USD value to filter."
              }
            },
            "example": {
              "tx_types": [
                "transfer",
                "swap"
              ],
              "chains": [
                "chain1",
                "chain2"
              ],
              "tokens": [
                "token1",
                "token2"
              ],
              "min_usd_value": 100
            }
          }
        },
        "required": [
          "type",
          "list_id"
        ]
      },
      "FeedUnsubscribeCommand": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "unsubscribe_feed"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "CommandFilter": {
        "type": "object",
        "properties": {
          "tx_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "bridge",
                "contract_creation",
                "contract_interaction",
                "flashloan",
                "lending",
                "lp",
                "nft_lending",
                "nft_liquidation",
                "nft_mint",
                "nft_sweep",
                "nft_trade",
                "nft_transfer",
                "option",
                "perp",
                "reward",
                "staking",
                "sudo_pool",
                "swap",
                "transfer",
                "wrap"
              ]
            },
            "description": "The types of transactions to filter."
          },
          "chains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The chains to filter."
          },
          "tokens": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The tokens to filter."
          },
          "min_usd_value": {
            "type": "number",
            "description": "The minimum USD value to filter."
          }
        },
        "example": {
          "tx_types": [
            "transfer",
            "swap"
          ],
          "chains": [
            "chain1",
            "chain2"
          ],
          "tokens": [
            "token1",
            "token2"
          ],
          "min_usd_value": 100
        }
      },
      "WebsocketEvent": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of event.",
                "enum": [
                  "tx"
                ]
              },
              "data": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "description": "This object type provides detailed information about a cryptocurrency swap transaction. It includes critical details such as wallet addresses, transaction hash, type of swap, blockchain specifics, and timestamps. The structure outlines the specifics of the assets involved in the swap, including their addresses, names, symbols, amounts, and USD values. It is particularly useful for platforms tracking and analyzing DeFi swap transactions, offering insights into the trade's details, such as the decentralized exchange (DEX) used, the tokens exchanged, and their respective values. This comprehensive structure is ideal for users or systems needing a detailed view of swap transactions on blockchain networks.\n",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address that initiated the swap transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A readable label for the wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique hash identifier of the swap transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Specifies the type of transaction, in this case, a token swap.",
                        "example": "swap"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network where the swap transaction occurred.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "dex": {
                        "type": "string",
                        "description": "The decentralized exchange where the swap transaction took place.",
                        "example": "Odos"
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address of the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address of the transaction (often the same as the 'from' address in swap transactions).",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "token0_address": {
                        "type": "string",
                        "description": "The address of the first token involved in the swap.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "token0_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of the first token involved in the swap.",
                        "example": 25
                      },
                      "token0_amount_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The USD value of the first token amount at the time of the swap.",
                        "example": 25
                      },
                      "token0_name": {
                        "type": "string",
                        "description": "The name of the first token involved in the swap.",
                        "example": "USD Coin"
                      },
                      "token0_price_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the first token in USD.",
                        "example": 1
                      },
                      "token0_symbol": {
                        "type": "string",
                        "description": "The symbol of the first token involved in the swap.",
                        "example": "USDC"
                      },
                      "token0_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      },
                      "token1_address": {
                        "type": "string",
                        "description": "The address of the second token involved in the swap.",
                        "example": "0x0000000000000000000000000000000000000000"
                      },
                      "token1_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of the second token involved in the swap.",
                        "example": 0.011715203954716423
                      },
                      "token1_amount_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The USD value of the second token amount at the time of the swap.",
                        "example": 25
                      },
                      "token1_name": {
                        "type": "string",
                        "description": "The name of the second token involved in the swap.",
                        "example": "Ethereum"
                      },
                      "token1_price_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the second token in USD.",
                        "example": 2133.979066573165
                      },
                      "token1_symbol": {
                        "type": "string",
                        "description": "The symbol of the second token involved in the swap.",
                        "example": "ETH"
                      },
                      "token1_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      },
                      "first_interaction": {
                        "type": "boolean",
                        "description": "Indicates whether this transaction was the first interaction between the involved wallet addresses.",
                        "example": "falsed"
                      },
                      "token_market_cap": {
                        "type": "object",
                        "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                        "properties": {
                          "token_address": {
                            "type": "string",
                            "description": "The address of the token.",
                            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                          },
                          "market_cap": {
                            "type": "number",
                            "format": "double",
                            "description": "The market capitalization of the token.",
                            "example": 28567534.5964843
                          },
                          "liquidity": {
                            "type": "number",
                            "format": "double",
                            "description": "The liquidity of the token.",
                            "example": 832322.8431867727
                          }
                        },
                        "required": [
                          "token_address",
                          "market_cap",
                          "liquidity"
                        ]
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "dex",
                      "from",
                      "to",
                      "token0_address",
                      "token0_amount",
                      "token0_amount_usd",
                      "token0_name",
                      "token0_price_usd",
                      "token0_symbol",
                      "token0_icon_link",
                      "token1_address",
                      "token1_amount",
                      "token1_amount_usd",
                      "token1_name",
                      "token1_price_usd",
                      "token1_symbol",
                      "token1_icon_link",
                      "first_interaction"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a comprehensive overview of a liquidity pool (LP) transaction on a decentralized exchange (DEX). It includes details about the wallet involved, the transaction hash, type, and associated blockchain, as well as specific information about the assets involved in the transaction. This structure is particularly useful for platforms that track and analyze liquidity pool actions, such as adding or removing liquidity, offering insights into the specifics of each action, including the assets involved, their amounts in both the native token and USD value, and their respective prices in USD.\n",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "dex": {
                        "type": "string",
                        "description": "The name of the decentralized exchange where the LP transaction occurred.",
                        "example": "Odos"
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the nature of the LP transaction, such as 'add' or 'remove'.",
                        "example": "add"
                      },
                      "token0_address": {
                        "type": "string",
                        "description": "The address of the first token involved in the LP transaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "token0_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of the first token involved in the transaction.",
                        "example": 25
                      },
                      "token0_amount_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The USD value of the first token amount at the time of the transaction.",
                        "example": 25
                      },
                      "token0_name": {
                        "type": "string",
                        "description": "The name of the first token involved in the transaction.",
                        "example": "USD Coin"
                      },
                      "token0_price_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the first token in USD.",
                        "example": 1
                      },
                      "token0_symbol": {
                        "type": "string",
                        "description": "The symbol of the first token involved in the transaction.",
                        "example": "USDC"
                      },
                      "token0_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      },
                      "token1_address": {
                        "type": "string",
                        "description": "The address of the second token involved in the LP transaction.",
                        "example": "0x0000000000000000000000000000000000000000"
                      },
                      "token1_amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of the second token involved in the transaction.",
                        "example": 25
                      },
                      "token1_amount_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The USD value of the second token amount at the time of the transaction.",
                        "example": 25
                      },
                      "token1_name": {
                        "type": "string",
                        "description": "The name of the second token involved in the transaction.",
                        "example": "USD Coin"
                      },
                      "token1_price_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the second token in USD.",
                        "example": 1
                      },
                      "token1_symbol": {
                        "type": "string",
                        "description": "The symbol of the second token involved in the transaction.",
                        "example": "USDC"
                      },
                      "token1_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      },
                      "lower_bound": {
                        "type": "number",
                        "format": "double",
                        "description": "Indicates the lower bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                        "example": 0
                      },
                      "upper_bound": {
                        "type": "number",
                        "format": "double",
                        "description": "Indicates the upper bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                        "example": 0
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "dex",
                      "from",
                      "type",
                      "token0_address",
                      "token0_amount",
                      "token0_amount_usd",
                      "token0_name",
                      "token0_price_usd",
                      "token0_symbol",
                      "token0_icon_link",
                      "token1_address",
                      "token1_amount",
                      "token1_amount_usd",
                      "token1_name",
                      "token1_price_usd",
                      "token1_symbol",
                      "token1_icon_link",
                      "lower_bound",
                      "upper_bound"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object represents the details of a cryptocurrency transfer transaction. It includes essential information such as wallet addresses, transaction hash, type of transfer, blockchain details, and timestamps. The structure is particularly useful for tracking standard token transfers on blockchain networks, providing a comprehensive overview of the transaction, including the amount transferred in USD, the token's contract address, its name, and symbol. This detailed structure is ideal for users or systems requiring a thorough view of token transfer transactions, including the specifics of the token involved and the value of the transaction.\n",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address involved in the transfer transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A readable label for the wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique hash identifier of the transfer transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Specifies the type of transaction, in this case, a token transfer.",
                        "example": "transfer"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network where the transfer transaction occurred.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address of the transaction.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address of the transaction.",
                        "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                      },
                      "from_label": {
                        "type": "string",
                        "description": "A readable version of the 'from' wallet address.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to_label": {
                        "type": "string",
                        "description": "A readable version of the 'to' wallet address.",
                        "example": "0xcfdb...6f8ff"
                      },
                      "amount_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The USD value of the amount transferred in the transaction.",
                        "example": 117.412291
                      },
                      "contract_address": {
                        "type": "string",
                        "description": "The blockchain address of the contract under which the token is registered.",
                        "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token being transferred.",
                        "example": "Tether USD"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the token being transferred.",
                        "example": "USDT"
                      },
                      "token_price_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the token in USD at the time of the transaction.",
                        "example": 1
                      },
                      "type": {
                        "type": "string",
                        "description": "Indicates the contract standard of the token, such as ERC20.",
                        "example": "ERC20"
                      },
                      "token_icon_link": {
                        "type": "string",
                        "description": "A URL link to the token's icon image.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      },
                      "token_market_cap": {
                        "type": "object",
                        "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                        "properties": {
                          "token_address": {
                            "type": "string",
                            "description": "The address of the token.",
                            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                          },
                          "market_cap": {
                            "type": "number",
                            "format": "double",
                            "description": "The market capitalization of the token.",
                            "example": 28567534.5964843
                          },
                          "liquidity": {
                            "type": "number",
                            "format": "double",
                            "description": "The liquidity of the token.",
                            "example": 832322.8431867727
                          }
                        },
                        "required": [
                          "token_address",
                          "market_cap",
                          "liquidity"
                        ]
                      },
                      "mempool": {
                        "type": "boolean",
                        "description": "For Bitcoin transactions, this field indicates whether the transaction is in the mempool."
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "to",
                      "from_label",
                      "to_label",
                      "amount_usd",
                      "contract_address",
                      "name",
                      "symbol",
                      "token_price_usd",
                      "type",
                      "token_icon_link"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object represents the data structure for a specific transaction related to decentralized finance (DeFi) activities such as lending, borrowing, and other related actions. It provides detailed information about the transaction, including wallet addresses, transaction hash, type of transaction, chain details, and financial figures. This structure is particularly useful for platforms tracking DeFi activities, offering insights into the specifics of each transaction, such as the asset involved, the amount, the health factor in lending platforms, and the price of the asset in USD at the time of the transaction.\n",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address associated with the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A more readable, shortened version of the wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique identifier of the transaction, represented as a hash.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Specifies the type of DeFi transaction, such as lending, borrowing, etc.",
                        "example": "lending"
                      },
                      "chain": {
                        "type": "string",
                        "description": "Indicates the blockchain network on which the transaction occurred.",
                        "example": "base"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A sequential index or identifier for the transaction within a particular dataset or list.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number in the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "from_label": {
                        "type": "string",
                        "description": "A readable, abbreviated form of the 'from' wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "action": {
                        "type": "string",
                        "description": "Describes the action taken in the transaction, such as 'Repaid' in a lending scenario.",
                        "example": "Repaid"
                      },
                      "address": {
                        "type": "string",
                        "description": "The smart contract address involved in the transaction.",
                        "example": "0x4200000000000000000000000000000000000006"
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of the asset involved in the transaction.",
                        "example": 50.007801987424834
                      },
                      "amount_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The equivalent value of the transaction amount in USD.",
                        "example": 106652.63945462069
                      },
                      "dex": {
                        "type": "string",
                        "description": "The decentralized exchange or platform where the transaction occurred, such as AaveV2.",
                        "example": "AaveV2"
                      },
                      "health_factor": {
                        "type": "number",
                        "format": "double",
                        "description": "A metric specific to lending platforms, indicating the health of the loan or position.",
                        "example": 1000
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the asset involved in the transaction.",
                        "example": "Wrapped Ether"
                      },
                      "platform": {
                        "type": "string",
                        "description": "The DeFi platform associated with the transaction, like AaveV3.",
                        "example": "AaveV3"
                      },
                      "price_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the asset in USD at the time of the transaction.",
                        "example": 2132.72
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the asset involved in the transaction.",
                        "example": "WETH"
                      },
                      "token_icon_link": {
                        "type": "string",
                        "description": "A URL link to the icon image of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "from_label",
                      "action",
                      "address",
                      "amount",
                      "amount_usd",
                      "dex",
                      "health_factor",
                      "name",
                      "platform",
                      "price_usd",
                      "symbol",
                      "token_icon_link"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object represents the data structure for a Non-Fungible Token (NFT) minting transaction. It provides detailed information about the transaction, including wallet addresses, transaction hash, the type of NFT transaction (in this case, minting), and blockchain specifics. Additionally, it includes detailed information about the NFT minted, such as its image, contract address, token ID, and associated fees. This structure is particularly useful for platforms tracking NFT minting activities, offering insights into the creation of new NFTs, their associated costs, and the blockchain details.\n",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address involved in the NFT minting transaction.",
                        "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A more readable label or identifier for the wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique hash identifier of the NFT minting transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Specifies the type of transaction, in this case, NFT minting.",
                        "example": "nft_mint"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network on which the minting transaction was conducted.",
                        "example": "ethereum"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address of the transaction.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address of the transaction.",
                        "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                      },
                      "from_label": {
                        "type": "string",
                        "description": "A readable version of the 'from' wallet address.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to_label": {
                        "type": "string",
                        "description": "A readable version of the 'to' wallet address.",
                        "example": "0xcfdb...6f8ff"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "A thumbnail image URL of the NFT involved in the transaction.",
                        "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "image": {
                        "type": "string",
                        "description": "A full image URL of the NFT.",
                        "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The number of items of the NFT minted in the transaction.",
                        "example": 1
                      },
                      "contract_address": {
                        "type": "string",
                        "description": "The blockchain address of the contract under which the NFT is minted.",
                        "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                      },
                      "contract_type": {
                        "type": "string",
                        "description": "The type of contract used for the NFT, such as ERC721.",
                        "example": "ERC721"
                      },
                      "fee": {
                        "type": "number",
                        "format": "double",
                        "description": "The transaction fee incurred for minting the NFT.",
                        "example": 0.21357696
                      },
                      "nft_name": {
                        "type": "string",
                        "description": "The name of the NFT minted.",
                        "example": "unknown"
                      },
                      "nft_symbol": {
                        "type": "string",
                        "description": "The symbol associated with the NFT.",
                        "example": "unknown"
                      },
                      "nft_token_id": {
                        "type": "string",
                        "description": "The unique token ID of the minted NFT.",
                        "example": 14
                      },
                      "currency_symbol": {
                        "type": "string",
                        "description": "The symbol of the currency used in the transaction (e.g., ETH, MATIC).",
                        "example": "MATIC"
                      },
                      "type": {
                        "type": "string",
                        "description": "Indicates the contract standard of the NFT, such as ERC721.",
                        "example": "ERC721"
                      },
                      "value": {
                        "type": "number",
                        "format": "double",
                        "description": "The value of the transaction. For minting, this is often zero since the NFT is being created.",
                        "example": 0
                      },
                      "value_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The equivalent USD value of the transaction.",
                        "example": 0
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "to",
                      "from_label",
                      "to_label",
                      "thumbnail",
                      "image",
                      "amount",
                      "contract_address",
                      "contract_type",
                      "fee",
                      "nft_name",
                      "nft_symbol",
                      "nft_token_id",
                      "currency_symbol",
                      "type",
                      "value",
                      "value_usd"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object encapsulates the details of a Non-Fungible Token (NFT) trading transaction. It includes comprehensive information such as wallet addresses, transaction hash, type of transaction (NFT trade), blockchain details, and timestamps. The structure provides specific data about the NFT trade, including the NFT's image, contract address, marketplace of the trade, and price details in both cryptocurrency and USD. Additionally, it includes information about the buyer, seller, and whether the transaction involved a bid being accepted. This structure is ideal for platforms that monitor and analyze NFT trading activities, offering detailed insights into each trade, its valuation, and the parties involved.\n",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address involved in the NFT trading transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A readable label for the wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique hash identifier of the NFT trading transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Specifies the type of transaction, in this case, NFT trading.",
                        "example": "nft_trade"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network where the trading transaction occurred.",
                        "example": "ethereum"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address of the transaction.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address of the transaction.",
                        "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "A thumbnail image URL of the NFT involved in the transaction.",
                        "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "image": {
                        "type": "string",
                        "description": "A full image URL of the NFT.",
                        "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "action": {
                        "type": "string",
                        "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                        "example": "buy"
                      },
                      "contract": {
                        "type": "string",
                        "description": "The blockchain contract address associated with the NFT.",
                        "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                      },
                      "marketplace": {
                        "type": "string",
                        "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                        "example": "OpenSea"
                      },
                      "nft_address": {
                        "type": "string",
                        "description": "The blockchain address of the NFT involved in the trade.",
                        "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                      },
                      "nft_name": {
                        "type": "string",
                        "description": "The name of the NFT traded.",
                        "example": "Gemesis"
                      },
                      "nft_symbol": {
                        "type": "string",
                        "description": "The symbol associated with the NFT.",
                        "example": "OSP"
                      },
                      "nft_token_id": {
                        "type": "string",
                        "description": "The unique token ID of the NFT involved in the trade.",
                        "example": 32507
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price at which the NFT was traded.",
                        "example": 0.0151
                      },
                      "price_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The equivalent USD value of the NFT trade.",
                        "example": 32.911356
                      },
                      "profit": {
                        "type": "number",
                        "format": "double",
                        "description": "The profit earned from the trade. This may be zero in some transactions.",
                        "example": 0
                      },
                      "currency_symbol": {
                        "type": "string",
                        "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                        "example": "WETH"
                      },
                      "buyer": {
                        "type": "string",
                        "description": "The wallet address of the buyer in the trade."
                      },
                      "seller": {
                        "type": "string",
                        "description": "The wallet address of the seller in the trade."
                      },
                      "token": {
                        "type": "string",
                        "description": "The token type used in the transaction."
                      },
                      "first_interaction": {
                        "type": "boolean",
                        "description": "Indicates whether this was the first interaction between the buyer and seller."
                      },
                      "bid_accepted": {
                        "type": "boolean",
                        "description": "Specifies if the transaction involved a bid being accepted."
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "to",
                      "thumbnail",
                      "image",
                      "action",
                      "contract",
                      "marketplace",
                      "nft_address",
                      "nft_name",
                      "nft_symbol",
                      "nft_token_id",
                      "price",
                      "price_usd",
                      "profit",
                      "currency_symbol",
                      "buyer",
                      "seller",
                      "token",
                      "first_interaction",
                      "bid_accepted"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object type details a Non-Fungible Token (NFT) transfer transaction. It includes essential information such as wallet addresses, transaction hash, NFT details, and blockchain specifics. This structure is particularly useful for tracking NFT transfers, providing a complete overview of the transaction, including the involved parties (from and to addresses), the NFT's contract details, and the transaction's metadata such as timestamps and blockchain network. The object also includes the NFT's image, name, symbol, and token ID, offering a comprehensive view of the NFT being transferred.\n",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address involved in the NFT transfer transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A readable label for the wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique hash identifier of the NFT transfer transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Specifies the type of transaction, in this case, NFT transfer.",
                        "example": "nft_transfer"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network where the transfer transaction occurred.",
                        "example": "ethereum"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address of the transaction.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address of the transaction.",
                        "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                      },
                      "from_label": {
                        "type": "string",
                        "description": "A readable version of the 'from' wallet address.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to_label": {
                        "type": "string",
                        "description": "A readable version of the 'to' wallet address.",
                        "example": "0xcfdb...6f8ff"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "A thumbnail image URL of the NFT involved in the transaction.",
                        "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "image": {
                        "type": "string",
                        "description": "A full image URL of the NFT.",
                        "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "contract_address": {
                        "type": "string",
                        "description": "The blockchain address of the contract under which the NFT is registered.",
                        "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                      },
                      "contract_type": {
                        "type": "string",
                        "description": "The type of contract used for the NFT, such as ERC721.",
                        "example": "ERC721"
                      },
                      "fee": {
                        "type": "number",
                        "format": "double",
                        "description": "The transaction fee incurred for the transfer of the NFT.",
                        "example": 0.21357696
                      },
                      "nft_name": {
                        "type": "string",
                        "description": "The name of the NFT being transferred.",
                        "example": "unknown"
                      },
                      "nft_symbol": {
                        "type": "string",
                        "description": "The symbol associated with the NFT.",
                        "example": "unknown"
                      },
                      "nft_token_id": {
                        "type": "string",
                        "description": "The unique token ID of the NFT involved in the transfer.",
                        "example": 3
                      },
                      "type": {
                        "type": "string",
                        "description": "Indicates the contract standard of the NFT, such as ERC721.",
                        "example": "ERC721"
                      },
                      "value": {
                        "type": "number",
                        "format": "double",
                        "description": "The value of the NFT at the time of the transfer. This might be represented in the native cryptocurrency of the blockchain."
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "to",
                      "from_label",
                      "to_label",
                      "thumbnail",
                      "image",
                      "contract_address",
                      "contract_type",
                      "fee",
                      "nft_name",
                      "nft_symbol",
                      "nft_token_id",
                      "type",
                      "value"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object encapsulates detailed information about a Non-Fungible Token (NFT) lending transaction. It includes comprehensive details such as wallet addresses, transaction hash, the type of NFT transaction, the blockchain used, and timestamps. Additionally, it provides specifics about the NFT involved, including its address, name, symbol, image, and the terms of the lending agreement. This structure is particularly useful for platforms that need to track and manage NFT lending activities, providing all necessary details for analyzing and processing such transactions.\n",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address involved in the NFT lending transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A more readable label or identifier for the wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique hash identifier of the NFT lending transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Specifies the type of transaction, in this case, NFT lending.",
                        "example": "nft_lending"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network on which the transaction was conducted.",
                        "example": "ethereum"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address of the transaction.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address of the transaction.",
                        "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                      },
                      "from_label": {
                        "type": "string",
                        "description": "A readable version of the 'from' wallet address.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to_label": {
                        "type": "string",
                        "description": "A readable version of the 'to' wallet address.",
                        "example": "0xcfdb...6f8ff"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "A thumbnail image URL of the NFT involved in the transaction.",
                        "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "image": {
                        "type": "string",
                        "description": "A full image URL of the NFT.",
                        "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "action": {
                        "type": "string",
                        "description": "Describes the action taken in the NFT lending transaction, such as 'buy', 'lend', etc.",
                        "example": "buy"
                      },
                      "currency_address": {
                        "type": "string",
                        "description": "The blockchain address of the currency used in the transaction.",
                        "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                      },
                      "currency_symbol": {
                        "type": "string",
                        "description": "The symbol of the currency used in the transaction.",
                        "example": "OpenSea"
                      },
                      "interest": {
                        "type": "number",
                        "format": "double",
                        "description": "The interest rate applied in the NFT lending transaction.",
                        "example": 0.0151
                      },
                      "nft_address": {
                        "type": "string",
                        "description": "The blockchain address of the NFT involved in the transaction.",
                        "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                      },
                      "nft_name": {
                        "type": "string",
                        "description": "The name of the NFT.",
                        "example": "Gemesis"
                      },
                      "nft_symbol": {
                        "type": "string",
                        "description": "The symbol of the NFT.",
                        "example": "OSP"
                      },
                      "platform": {
                        "type": "string",
                        "description": "The platform or service through which the NFT lending transaction was conducted.",
                        "example": "Blend"
                      },
                      "nft_token_id": {
                        "type": "string",
                        "description": "The unique identifier for the specific NFT within its collection.",
                        "example": 32507
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price at which the NFT was lent or transacted.",
                        "example": 0.0151
                      },
                      "price_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The equivalent USD value of the transaction price.",
                        "example": 32.911356
                      },
                      "terms": {
                        "type": "number",
                        "format": "double",
                        "description": "Specifies the terms of the NFT lending agreement.",
                        "example": 0.0151
                      },
                      "refinance": {
                        "type": "boolean",
                        "description": "Indicates whether the transaction involved refinancing of the NFT.",
                        "example": false
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "to",
                      "from_label",
                      "to_label",
                      "thumbnail",
                      "image",
                      "action",
                      "currency_address",
                      "currency_symbol",
                      "interest",
                      "nft_address",
                      "nft_name",
                      "nft_symbol",
                      "platform",
                      "nft_token_id",
                      "price",
                      "price_usd",
                      "terms",
                      "refinance"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object represents a detailed structure for a blockchain transaction, encompassing various aspects like wallet addresses, transaction hash, type, associated chains, and financial details. It is designed to provide a comprehensive view of a transaction, including the wallets involved, the transaction's nature, the chains it spans, and the financial details like the amount and its equivalent in USD. This structure is ideal for applications that require detailed tracking and analysis of blockchain transactions.\n",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address involved in the transaction.",
                        "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A shortened, more readable version of the wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique hash identifier of the transaction.",
                        "example": "0xb23dc807e8063feaefe20644f85d13a7238a8b01b9fd167135ef664146692f99"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "The type of transaction.",
                        "example": "bridge"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain on which the transaction occurred, like 'ethereum'.",
                        "example": "ethereum"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numeric index or identifier for the transaction.",
                        "example": 7
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp when the transaction occurred.",
                        "example": 1702899899
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain in which the transaction is included.",
                        "example": 18812661
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address of the transaction.",
                        "example": "0xecc19e177d24551aa7ed6bc6fe566eca726cc8a9"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address of the transaction.",
                        "example": "0xbf3b71decbcefabb3210b9d8f18ec22e0556f5f0"
                      },
                      "from_label": {
                        "type": "string",
                        "description": "A shortened, more readable version of the originating wallet address.",
                        "example": "0xecc1...cc8a9"
                      },
                      "to_label": {
                        "type": "string",
                        "description": "A shortened, more readable version of the destination wallet address.",
                        "example": "0xbf3b...6f5f0"
                      },
                      "token_address": {
                        "type": "string",
                        "description": "The address of the token involved in the transaction.",
                        "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                      },
                      "token_name": {
                        "type": "string",
                        "description": "The name of the token involved in the transaction.",
                        "example": "Wrapped Ether"
                      },
                      "token_symbol": {
                        "type": "string",
                        "description": "The symbol of the token involved in the transaction.",
                        "example": "WETH"
                      },
                      "token_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of the token involved in the transaction.",
                        "example": 0.09956219862680922
                      },
                      "amount_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                        "example": 212.00276764599622
                      },
                      "from_chain": {
                        "type": "string",
                        "description": "The originating chain of the transaction, in cases of cross-chain activities.",
                        "example": "Arbitrum"
                      },
                      "to_chain": {
                        "type": "string",
                        "description": "The destination chain of the transaction, in cases of cross-chain activities.",
                        "example": "Ethereum"
                      },
                      "platform": {
                        "type": "string",
                        "description": "The platform or service used for the transaction.",
                        "example": "Stargate"
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the token at the time of the transaction.",
                        "example": 2129.35
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the nature of the transaction, like 'withdraw', 'deposit', etc.",
                        "example": "withdraw"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "to",
                      "from_label",
                      "to_label",
                      "token_address",
                      "token_name",
                      "token_symbol",
                      "amount",
                      "amount_usd",
                      "from_chain",
                      "to_chain",
                      "platform",
                      "price",
                      "type",
                      "token_icon_link"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a contract interaction event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "contract_address": {
                        "type": "string",
                        "description": "The address of the smart contract involved in the interaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "contract_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the smart contract.",
                        "example": "Uniswap V3"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "to",
                      "contract_address",
                      "contract_label"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a wrap event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "dex": {
                        "type": "string",
                        "description": "The decentralized exchange where the wrap transaction occurred.",
                        "example": "Uniswap"
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "action": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "number",
                        "description": "The amount of tokens wrapped in the transaction.",
                        "example": 100
                      },
                      "amount_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the wrapped tokens.",
                        "example": "100.0"
                      },
                      "contract_address": {
                        "type": "string",
                        "description": "The address of the smart contract involved in the interaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token wrapped in the transaction.",
                        "example": "Wrapped Ether"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the token wrapped in the transaction.",
                        "example": "WETH"
                      },
                      "token_price_usd": {
                        "type": "number",
                        "description": "The price of the token in USD at the time of the transaction.",
                        "example": "100.0"
                      },
                      "token_type": {
                        "type": "string",
                        "description": "The type of token wrapped in the transaction.",
                        "example": "ERC20"
                      },
                      "token_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "dex",
                      "from",
                      "to",
                      "action",
                      "amount",
                      "amount_usd",
                      "contract_address",
                      "name",
                      "symbol",
                      "token_price_usd",
                      "token_type",
                      "token_icon_link"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a Sudo Pool event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "dex": {
                        "type": "string",
                        "description": "The decentralized exchange where the wrap transaction occurred.",
                        "example": "Uniswap"
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "nft_address": {
                        "type": "string",
                        "description": "The address of the NFT contract involved in the interaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "nft_amount": {
                        "type": "integer",
                        "description": "The amount of NFTs involved in the transaction.",
                        "example": 1
                      },
                      "nft_price": {
                        "type": "number",
                        "description": "The price of the NFT in the transaction.",
                        "example": 100
                      },
                      "nft_symbol": {
                        "type": "string",
                        "description": "The symbol of the NFT in the transaction.",
                        "example": "NFT"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "token0_address": {
                        "type": "string",
                        "description": "The address of the first token in the LP pair.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "token0_amount": {
                        "type": "number",
                        "description": "The amount of the first token in the LP pair.",
                        "example": 100
                      },
                      "token0_amount_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the first token in the LP pair.",
                        "example": 100
                      },
                      "token0_name": {
                        "type": "string",
                        "description": "The name of the first token in the LP pair.",
                        "example": "Wrapped Ether"
                      },
                      "token0_price_usd": {
                        "type": "number",
                        "description": "The price of the first token in the LP pair in USD.",
                        "example": 100
                      },
                      "token0_symbol": {
                        "type": "string",
                        "description": "The symbol of the first token in the LP pair.",
                        "example": "WETH"
                      },
                      "token0_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "nft_address",
                      "nft_amount",
                      "nft_price",
                      "nft_symbol",
                      "token0_address",
                      "token0_amount",
                      "token0_amount_usd",
                      "token0_name",
                      "token0_price_usd",
                      "token0_symbol",
                      "from",
                      "to",
                      "token0_icon_link"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a reward event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "address": {
                        "type": "string",
                        "description": "The address of the token involved in the transaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "amount": {
                        "type": "number",
                        "description": "The amount of tokens involved in the transaction.",
                        "example": 100
                      },
                      "amount_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                        "example": 100
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token involved in the transaction.",
                        "example": "Wrapped Ether"
                      },
                      "price_usd": {
                        "type": "number",
                        "description": "The price of the token in USD.",
                        "example": 100
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the token involved in the transaction.",
                        "example": "WETH"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "address",
                      "amount",
                      "amount_usd",
                      "from",
                      "name",
                      "price_usd",
                      "symbol"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a staking event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "from_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the originating wallet.",
                        "example": "Alice"
                      },
                      "to_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the destination wallet.",
                        "example": "Bob"
                      },
                      "amount": {
                        "type": "number",
                        "description": "The amount of tokens staked in the transaction.",
                        "example": 100
                      },
                      "amount_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the staked tokens.",
                        "example": 100
                      },
                      "token_price_usd": {
                        "type": "number",
                        "description": "The price of the token in USD.",
                        "example": 100
                      },
                      "contract_address": {
                        "type": "string",
                        "description": "The address of the smart contract involved in the interaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the token staked in the transaction.",
                        "example": "WETH"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token staked in the transaction.",
                        "example": "Wrapped Ether"
                      },
                      "action": {
                        "type": "string",
                        "description": "The action taken in the staking transaction.",
                        "example": "stake"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "to",
                      "from_label",
                      "to_label",
                      "amount",
                      "amount_usd",
                      "token_price_usd",
                      "contract_address",
                      "symbol",
                      "name",
                      "action"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a Perpetual event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "action": {
                        "type": "string",
                        "description": "The action taken in the Perpetual event.",
                        "example": "buy"
                      },
                      "amount_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                        "example": 100
                      },
                      "average_price": {
                        "type": "number",
                        "description": "The average price of the tokens involved in the transaction.",
                        "example": 100
                      },
                      "base_token_address": {
                        "type": "string",
                        "description": "The address of the base token involved in the transaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "base_token_amount": {
                        "type": "number",
                        "description": "The amount of base tokens involved in the transaction.",
                        "example": 100
                      },
                      "base_token_symbol": {
                        "type": "string",
                        "description": "The symbol of the base token involved in the transaction.",
                        "example": "ETH"
                      },
                      "dex": {
                        "type": "string",
                        "description": "The decentralized exchange where the Perpetual transaction occurred.",
                        "example": "Uniswap"
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "liquidation": {
                        "type": "boolean",
                        "description": "Indicates whether the transaction was a liquidation.",
                        "example": false
                      },
                      "liquidation_price": {
                        "type": "number",
                        "description": "The price at which the liquidation occurred.",
                        "example": 100
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "trade_direction": {
                        "type": "string",
                        "description": "The direction of the trade in the Perpetual transaction.",
                        "example": "long"
                      },
                      "perp_details": {
                        "type": "string",
                        "description": "Additional details about the Perpetual transaction.",
                        "example": "details"
                      },
                      "token0_address": {
                        "type": "string",
                        "description": "The address of the first token in the LP pair.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "token0_amount": {
                        "type": "number",
                        "description": "The amount of the first token in the LP pair.",
                        "example": 100
                      },
                      "token0_amount_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the first token in the LP pair.",
                        "example": 100
                      },
                      "token0_name": {
                        "type": "string",
                        "description": "The name of the first token in the LP pair.",
                        "example": "Wrapped Ether"
                      },
                      "token0_price_usd": {
                        "type": "number",
                        "description": "The price of the first token in the LP pair in USD.",
                        "example": 100
                      },
                      "token0_symbol": {
                        "type": "string",
                        "description": "The symbol of the first token in the LP pair.",
                        "example": "WETH"
                      },
                      "token0_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      },
                      "token1_address": {
                        "type": "string",
                        "description": "The address of the second token in the LP pair.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "token1_amount": {
                        "type": "number",
                        "description": "The amount of the second token in the LP pair.",
                        "example": 100
                      },
                      "token1_amount_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the second token in the LP pair.",
                        "example": 100
                      },
                      "token1_name": {
                        "type": "string",
                        "description": "The name of the second token in the LP pair.",
                        "example": "Wrapped Ether"
                      },
                      "token1_price_usd": {
                        "type": "number",
                        "description": "The price of the second token in the LP pair in USD.",
                        "example": 100
                      },
                      "token1_symbol": {
                        "type": "string",
                        "description": "The symbol of the second token in the LP pair.",
                        "example": "WETH"
                      },
                      "token1_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      },
                      "realized_pnl": {
                        "type": "number",
                        "description": "The realized profit and loss of the Perpetual transaction.",
                        "example": 100
                      },
                      "is_nft_perp": {
                        "type": "boolean",
                        "description": "Indicates whether the Perpetual transaction involves an NFT.",
                        "example": false
                      },
                      "position_size": {
                        "type": "number",
                        "description": "The size of the position in the Perpetual transaction.",
                        "example": 100
                      },
                      "position_size_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the position size.",
                        "example": 100
                      },
                      "leverage": {
                        "type": "number",
                        "description": "The leverage used in the Perpetual transaction.",
                        "example": 100
                      },
                      "unrealized_pnl": {
                        "type": "number",
                        "description": "The unrealized profit and loss of the Perpetual transaction.",
                        "example": 100
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "action",
                      "amount_usd",
                      "average_price",
                      "base_token_address",
                      "base_token_amount",
                      "base_token_symbol",
                      "dex",
                      "from",
                      "liquidation",
                      "liquidation_price",
                      "to",
                      "trade_direction",
                      "perp_details",
                      "token0_address",
                      "token0_amount",
                      "token0_amount_usd",
                      "token0_name",
                      "token0_price_usd",
                      "token0_symbol",
                      "token0_icon_link",
                      "token1_address",
                      "token1_amount",
                      "token1_amount_usd",
                      "token1_name",
                      "token1_price_usd",
                      "token1_symbol",
                      "token1_icon_link",
                      "realized_pnl",
                      "is_nft_perp"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a flashloan event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "address": {
                        "type": "string",
                        "description": "The address of the token involved in the transaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "amount": {
                        "type": "number",
                        "description": "The amount of tokens involved in the transaction.",
                        "example": 100
                      },
                      "amount_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                        "example": 100
                      },
                      "dex": {
                        "type": "string",
                        "description": "The decentralized exchange (DEX) where the flashloan transaction took place.",
                        "example": "Uniswap"
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "health_factor": {
                        "type": "number",
                        "description": "The health factor of the wallet after the flashloan transaction.",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the token involved in the transaction.",
                        "example": "Wrapped Ether"
                      },
                      "platform": {
                        "type": "string",
                        "description": "The platform where the flashloan transaction took place.",
                        "example": "Aave"
                      },
                      "price_usd": {
                        "type": "number",
                        "description": "The price of the token in USD.",
                        "example": 100
                      },
                      "symbol": {
                        "type": "string",
                        "description": "The symbol of the token involved in the transaction.",
                        "example": "ETH"
                      },
                      "token_icon_link": {
                        "type": "string",
                        "description": "A link to the icon of the token involved in the transaction.",
                        "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "address",
                      "amount",
                      "amount_usd",
                      "dex",
                      "from",
                      "health_factor",
                      "name",
                      "platform",
                      "price_usd",
                      "symbol",
                      "token_icon_link"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a contract creation event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "amount_usd": {
                        "type": "number",
                        "description": "The equivalent amount in USD of the wrapped tokens.",
                        "example": "100.0"
                      },
                      "contract_address": {
                        "type": "string",
                        "description": "The address of the smart contract involved in the interaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "from_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the originating wallet.",
                        "example": "Alice"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "amount_usd",
                      "contract_address",
                      "from",
                      "from_label"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a NFT liquidation event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "contract_address": {
                        "type": "string",
                        "description": "The address of the NFT contract involved in the interaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "currency_address": {
                        "type": "string",
                        "description": "The address of the currency involved in the transaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "currency_symbol": {
                        "type": "string",
                        "description": "The symbol of the currency involved in the transaction.",
                        "example": "ETH"
                      },
                      "dex": {
                        "type": "string",
                        "description": "The decentralized exchange where the wrap transaction occurred.",
                        "example": "Uniswap"
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "nft_address": {
                        "type": "string",
                        "description": "The address of the NFT contract involved in the interaction.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "nft_name": {
                        "type": "string",
                        "description": "The name of the NFT in the transaction.",
                        "example": "NFT"
                      },
                      "nft_symbol": {
                        "type": "string",
                        "description": "The symbol of the NFT in the transaction.",
                        "example": "NFT"
                      },
                      "platform": {
                        "type": "string",
                        "description": "The platform where the flashloan transaction took place.",
                        "example": "Aave"
                      },
                      "price": {
                        "type": "number",
                        "description": "The price of the NFT in the transaction.",
                        "example": 100
                      },
                      "price_usd": {
                        "type": "number",
                        "description": "The price of the NFT in USD.",
                        "example": 100
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "token_id": {
                        "type": "string",
                        "description": "The unique identifier of the NFT in the transaction.",
                        "example": "1"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "contract_address",
                      "currency_address",
                      "currency_symbol",
                      "dex",
                      "from",
                      "nft_address",
                      "nft_name",
                      "nft_symbol",
                      "platform",
                      "price",
                      "price_usd",
                      "to",
                      "token_id"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing an option event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address participating in the LP transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                        "example": "vitalik.eth"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique transaction hash identifying this specific LP transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                        "example": "lp"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                        "example": "optimism"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "action": {
                        "type": "string",
                        "description": "The action taken in the option event.",
                        "example": "buy"
                      },
                      "amount": {
                        "type": "number",
                        "description": "The amount of tokens involved in the transaction.",
                        "example": 100
                      },
                      "asset": {
                        "type": "string",
                        "description": "The asset involved in the option event.",
                        "example": "ETH"
                      },
                      "dex": {
                        "type": "string",
                        "description": "The decentralized exchange (DEX) where the option event took place.",
                        "example": "Uniswap"
                      },
                      "direction": {
                        "type": "string",
                        "description": "The direction of the option event.",
                        "example": "call"
                      },
                      "expiry": {
                        "type": "string",
                        "description": "The expiry date of the option.",
                        "example": "2022-12-31"
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "option_price_usd": {
                        "type": "number",
                        "description": "The price of the option in USD.",
                        "example": 100
                      },
                      "position_status": {
                        "type": "string",
                        "description": "The status of the option position.",
                        "example": "open"
                      },
                      "spot_price_usd": {
                        "type": "number",
                        "description": "The spot price of the asset in USD.",
                        "example": 100
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the option event.",
                        "example": "active"
                      },
                      "strike_price_usd": {
                        "type": "number",
                        "description": "The strike price of the option in USD.",
                        "example": 100
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address for the transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of option event.",
                        "example": "call"
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "action",
                      "amount",
                      "asset",
                      "dex",
                      "direction",
                      "expiry",
                      "from",
                      "option_price_usd",
                      "position_status",
                      "spot_price_usd",
                      "status",
                      "strike_price_usd",
                      "to",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "description": "This object provides a structure for representing a NFT sweep event on the blockchain.",
                    "properties": {
                      "wallet": {
                        "type": "string",
                        "description": "The wallet address involved in the NFT trading transaction.",
                        "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                      },
                      "wallet_label": {
                        "type": "string",
                        "description": "A readable label for the wallet address.",
                        "example": "0xa4c8...f9457d"
                      },
                      "tx_hash": {
                        "type": "string",
                        "description": "The unique hash identifier of the NFT trading transaction.",
                        "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                      },
                      "tx_type": {
                        "type": "string",
                        "description": "Specifies the type of transaction, in this case, NFT trading.",
                        "example": "nft_trade"
                      },
                      "chain": {
                        "type": "string",
                        "description": "The blockchain network where the trading transaction occurred.",
                        "example": "ethereum"
                      },
                      "index": {
                        "type": "integer",
                        "description": "A numerical index or identifier for the transaction.",
                        "example": 10
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "The timestamp marking when the transaction was executed.",
                        "example": 1702899395
                      },
                      "block": {
                        "type": "integer",
                        "description": "The block number on the blockchain where this transaction is recorded.",
                        "example": 113650309
                      },
                      "from": {
                        "type": "string",
                        "description": "The originating wallet address of the transaction.",
                        "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                      },
                      "to": {
                        "type": "string",
                        "description": "The destination wallet address of the transaction.",
                        "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                      },
                      "thumbnail": {
                        "type": "string",
                        "description": "A thumbnail image URL of the NFT involved in the transaction.",
                        "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "image": {
                        "type": "string",
                        "description": "A full image URL of the NFT.",
                        "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                      },
                      "action": {
                        "type": "string",
                        "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                        "example": "buy"
                      },
                      "contract": {
                        "type": "string",
                        "description": "The blockchain contract address associated with the NFT.",
                        "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                      },
                      "marketplace": {
                        "type": "string",
                        "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                        "example": "OpenSea"
                      },
                      "nft_address": {
                        "type": "string",
                        "description": "The blockchain address of the NFT involved in the trade.",
                        "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                      },
                      "nft_name": {
                        "type": "string",
                        "description": "The name of the NFT traded.",
                        "example": "Gemesis"
                      },
                      "nft_symbol": {
                        "type": "string",
                        "description": "The symbol associated with the NFT.",
                        "example": "OSP"
                      },
                      "nft_token_id": {
                        "type": "string",
                        "description": "The unique token ID of the NFT involved in the trade.",
                        "example": 32507
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price at which the NFT was traded.",
                        "example": 0.0151
                      },
                      "price_usd": {
                        "type": "number",
                        "format": "double",
                        "description": "The equivalent USD value of the NFT trade.",
                        "example": 32.911356
                      },
                      "profit": {
                        "type": "number",
                        "format": "double",
                        "description": "The profit earned from the trade. This may be zero in some transactions.",
                        "example": 0
                      },
                      "currency_symbol": {
                        "type": "string",
                        "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                        "example": "WETH"
                      },
                      "buyer": {
                        "type": "string",
                        "description": "The wallet address of the buyer in the trade."
                      },
                      "seller": {
                        "type": "string",
                        "description": "The wallet address of the seller in the trade."
                      },
                      "token": {
                        "type": "string",
                        "description": "The token type used in the transaction."
                      },
                      "first_interaction": {
                        "type": "boolean",
                        "description": "Indicates whether this was the first interaction between the buyer and seller."
                      },
                      "bid_accepted": {
                        "type": "boolean",
                        "description": "Specifies if the transaction involved a bid being accepted."
                      }
                    },
                    "required": [
                      "wallet",
                      "wallet_label",
                      "tx_hash",
                      "tx_type",
                      "chain",
                      "index",
                      "timestamp",
                      "block",
                      "from",
                      "to",
                      "thumbnail",
                      "image",
                      "action",
                      "contract",
                      "marketplace",
                      "nft_address",
                      "nft_name",
                      "nft_symbol",
                      "nft_token_id",
                      "price",
                      "price_usd",
                      "profit",
                      "currency_symbol",
                      "buyer",
                      "seller",
                      "token",
                      "first_interaction",
                      "bid_accepted"
                    ]
                  }
                ],
                "description": "The event data."
              }
            },
            "required": [
              "type",
              "data"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "error"
                ]
              },
              "data": {
                "type": "string",
                "description": "The error message."
              }
            },
            "required": [
              "type",
              "data"
            ],
            "example": {
              "type": "error",
              "data": "invalid command"
            }
          }
        ]
      },
      "WebsocketTxEvent": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of event.",
            "enum": [
              "tx"
            ]
          },
          "data": {
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "description": "This object type provides detailed information about a cryptocurrency swap transaction. It includes critical details such as wallet addresses, transaction hash, type of swap, blockchain specifics, and timestamps. The structure outlines the specifics of the assets involved in the swap, including their addresses, names, symbols, amounts, and USD values. It is particularly useful for platforms tracking and analyzing DeFi swap transactions, offering insights into the trade's details, such as the decentralized exchange (DEX) used, the tokens exchanged, and their respective values. This comprehensive structure is ideal for users or systems needing a detailed view of swap transactions on blockchain networks.\n",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address that initiated the swap transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A readable label for the wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique hash identifier of the swap transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Specifies the type of transaction, in this case, a token swap.",
                    "example": "swap"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network where the swap transaction occurred.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "dex": {
                    "type": "string",
                    "description": "The decentralized exchange where the swap transaction took place.",
                    "example": "Odos"
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address of the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address of the transaction (often the same as the 'from' address in swap transactions).",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "token0_address": {
                    "type": "string",
                    "description": "The address of the first token involved in the swap.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "token0_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount of the first token involved in the swap.",
                    "example": 25
                  },
                  "token0_amount_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The USD value of the first token amount at the time of the swap.",
                    "example": 25
                  },
                  "token0_name": {
                    "type": "string",
                    "description": "The name of the first token involved in the swap.",
                    "example": "USD Coin"
                  },
                  "token0_price_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the first token in USD.",
                    "example": 1
                  },
                  "token0_symbol": {
                    "type": "string",
                    "description": "The symbol of the first token involved in the swap.",
                    "example": "USDC"
                  },
                  "token0_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  },
                  "token1_address": {
                    "type": "string",
                    "description": "The address of the second token involved in the swap.",
                    "example": "0x0000000000000000000000000000000000000000"
                  },
                  "token1_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount of the second token involved in the swap.",
                    "example": 0.011715203954716423
                  },
                  "token1_amount_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The USD value of the second token amount at the time of the swap.",
                    "example": 25
                  },
                  "token1_name": {
                    "type": "string",
                    "description": "The name of the second token involved in the swap.",
                    "example": "Ethereum"
                  },
                  "token1_price_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the second token in USD.",
                    "example": 2133.979066573165
                  },
                  "token1_symbol": {
                    "type": "string",
                    "description": "The symbol of the second token involved in the swap.",
                    "example": "ETH"
                  },
                  "token1_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  },
                  "first_interaction": {
                    "type": "boolean",
                    "description": "Indicates whether this transaction was the first interaction between the involved wallet addresses.",
                    "example": "falsed"
                  },
                  "token_market_cap": {
                    "type": "object",
                    "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                    "properties": {
                      "token_address": {
                        "type": "string",
                        "description": "The address of the token.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "market_cap": {
                        "type": "number",
                        "format": "double",
                        "description": "The market capitalization of the token.",
                        "example": 28567534.5964843
                      },
                      "liquidity": {
                        "type": "number",
                        "format": "double",
                        "description": "The liquidity of the token.",
                        "example": 832322.8431867727
                      }
                    },
                    "required": [
                      "token_address",
                      "market_cap",
                      "liquidity"
                    ]
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "dex",
                  "from",
                  "to",
                  "token0_address",
                  "token0_amount",
                  "token0_amount_usd",
                  "token0_name",
                  "token0_price_usd",
                  "token0_symbol",
                  "token0_icon_link",
                  "token1_address",
                  "token1_amount",
                  "token1_amount_usd",
                  "token1_name",
                  "token1_price_usd",
                  "token1_symbol",
                  "token1_icon_link",
                  "first_interaction"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a comprehensive overview of a liquidity pool (LP) transaction on a decentralized exchange (DEX). It includes details about the wallet involved, the transaction hash, type, and associated blockchain, as well as specific information about the assets involved in the transaction. This structure is particularly useful for platforms that track and analyze liquidity pool actions, such as adding or removing liquidity, offering insights into the specifics of each action, including the assets involved, their amounts in both the native token and USD value, and their respective prices in USD.\n",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "dex": {
                    "type": "string",
                    "description": "The name of the decentralized exchange where the LP transaction occurred.",
                    "example": "Odos"
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "type": {
                    "type": "string",
                    "description": "Specifies the nature of the LP transaction, such as 'add' or 'remove'.",
                    "example": "add"
                  },
                  "token0_address": {
                    "type": "string",
                    "description": "The address of the first token involved in the LP transaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "token0_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount of the first token involved in the transaction.",
                    "example": 25
                  },
                  "token0_amount_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The USD value of the first token amount at the time of the transaction.",
                    "example": 25
                  },
                  "token0_name": {
                    "type": "string",
                    "description": "The name of the first token involved in the transaction.",
                    "example": "USD Coin"
                  },
                  "token0_price_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the first token in USD.",
                    "example": 1
                  },
                  "token0_symbol": {
                    "type": "string",
                    "description": "The symbol of the first token involved in the transaction.",
                    "example": "USDC"
                  },
                  "token0_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  },
                  "token1_address": {
                    "type": "string",
                    "description": "The address of the second token involved in the LP transaction.",
                    "example": "0x0000000000000000000000000000000000000000"
                  },
                  "token1_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount of the second token involved in the transaction.",
                    "example": 25
                  },
                  "token1_amount_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The USD value of the second token amount at the time of the transaction.",
                    "example": 25
                  },
                  "token1_name": {
                    "type": "string",
                    "description": "The name of the second token involved in the transaction.",
                    "example": "USD Coin"
                  },
                  "token1_price_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the second token in USD.",
                    "example": 1
                  },
                  "token1_symbol": {
                    "type": "string",
                    "description": "The symbol of the second token involved in the transaction.",
                    "example": "USDC"
                  },
                  "token1_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  },
                  "lower_bound": {
                    "type": "number",
                    "format": "double",
                    "description": "Indicates the lower bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                    "example": 0
                  },
                  "upper_bound": {
                    "type": "number",
                    "format": "double",
                    "description": "Indicates the upper bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                    "example": 0
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "dex",
                  "from",
                  "type",
                  "token0_address",
                  "token0_amount",
                  "token0_amount_usd",
                  "token0_name",
                  "token0_price_usd",
                  "token0_symbol",
                  "token0_icon_link",
                  "token1_address",
                  "token1_amount",
                  "token1_amount_usd",
                  "token1_name",
                  "token1_price_usd",
                  "token1_symbol",
                  "token1_icon_link",
                  "lower_bound",
                  "upper_bound"
                ]
              },
              {
                "type": "object",
                "description": "This object represents the details of a cryptocurrency transfer transaction. It includes essential information such as wallet addresses, transaction hash, type of transfer, blockchain details, and timestamps. The structure is particularly useful for tracking standard token transfers on blockchain networks, providing a comprehensive overview of the transaction, including the amount transferred in USD, the token's contract address, its name, and symbol. This detailed structure is ideal for users or systems requiring a thorough view of token transfer transactions, including the specifics of the token involved and the value of the transaction.\n",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address involved in the transfer transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A readable label for the wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique hash identifier of the transfer transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Specifies the type of transaction, in this case, a token transfer.",
                    "example": "transfer"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network where the transfer transaction occurred.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address of the transaction.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address of the transaction.",
                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                  },
                  "from_label": {
                    "type": "string",
                    "description": "A readable version of the 'from' wallet address.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to_label": {
                    "type": "string",
                    "description": "A readable version of the 'to' wallet address.",
                    "example": "0xcfdb...6f8ff"
                  },
                  "amount_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The USD value of the amount transferred in the transaction.",
                    "example": 117.412291
                  },
                  "contract_address": {
                    "type": "string",
                    "description": "The blockchain address of the contract under which the token is registered.",
                    "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the token being transferred.",
                    "example": "Tether USD"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the token being transferred.",
                    "example": "USDT"
                  },
                  "token_price_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the token in USD at the time of the transaction.",
                    "example": 1
                  },
                  "type": {
                    "type": "string",
                    "description": "Indicates the contract standard of the token, such as ERC20.",
                    "example": "ERC20"
                  },
                  "token_icon_link": {
                    "type": "string",
                    "description": "A URL link to the token's icon image.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  },
                  "token_market_cap": {
                    "type": "object",
                    "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                    "properties": {
                      "token_address": {
                        "type": "string",
                        "description": "The address of the token.",
                        "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                      },
                      "market_cap": {
                        "type": "number",
                        "format": "double",
                        "description": "The market capitalization of the token.",
                        "example": 28567534.5964843
                      },
                      "liquidity": {
                        "type": "number",
                        "format": "double",
                        "description": "The liquidity of the token.",
                        "example": 832322.8431867727
                      }
                    },
                    "required": [
                      "token_address",
                      "market_cap",
                      "liquidity"
                    ]
                  },
                  "mempool": {
                    "type": "boolean",
                    "description": "For Bitcoin transactions, this field indicates whether the transaction is in the mempool."
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "to",
                  "from_label",
                  "to_label",
                  "amount_usd",
                  "contract_address",
                  "name",
                  "symbol",
                  "token_price_usd",
                  "type",
                  "token_icon_link"
                ]
              },
              {
                "type": "object",
                "description": "This object represents the data structure for a specific transaction related to decentralized finance (DeFi) activities such as lending, borrowing, and other related actions. It provides detailed information about the transaction, including wallet addresses, transaction hash, type of transaction, chain details, and financial figures. This structure is particularly useful for platforms tracking DeFi activities, offering insights into the specifics of each transaction, such as the asset involved, the amount, the health factor in lending platforms, and the price of the asset in USD at the time of the transaction.\n",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address associated with the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A more readable, shortened version of the wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique identifier of the transaction, represented as a hash.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Specifies the type of DeFi transaction, such as lending, borrowing, etc.",
                    "example": "lending"
                  },
                  "chain": {
                    "type": "string",
                    "description": "Indicates the blockchain network on which the transaction occurred.",
                    "example": "base"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A sequential index or identifier for the transaction within a particular dataset or list.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number in the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "from_label": {
                    "type": "string",
                    "description": "A readable, abbreviated form of the 'from' wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "action": {
                    "type": "string",
                    "description": "Describes the action taken in the transaction, such as 'Repaid' in a lending scenario.",
                    "example": "Repaid"
                  },
                  "address": {
                    "type": "string",
                    "description": "The smart contract address involved in the transaction.",
                    "example": "0x4200000000000000000000000000000000000006"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount of the asset involved in the transaction.",
                    "example": 50.007801987424834
                  },
                  "amount_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The equivalent value of the transaction amount in USD.",
                    "example": 106652.63945462069
                  },
                  "dex": {
                    "type": "string",
                    "description": "The decentralized exchange or platform where the transaction occurred, such as AaveV2.",
                    "example": "AaveV2"
                  },
                  "health_factor": {
                    "type": "number",
                    "format": "double",
                    "description": "A metric specific to lending platforms, indicating the health of the loan or position.",
                    "example": 1000
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the asset involved in the transaction.",
                    "example": "Wrapped Ether"
                  },
                  "platform": {
                    "type": "string",
                    "description": "The DeFi platform associated with the transaction, like AaveV3.",
                    "example": "AaveV3"
                  },
                  "price_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the asset in USD at the time of the transaction.",
                    "example": 2132.72
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the asset involved in the transaction.",
                    "example": "WETH"
                  },
                  "token_icon_link": {
                    "type": "string",
                    "description": "A URL link to the icon image of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "from_label",
                  "action",
                  "address",
                  "amount",
                  "amount_usd",
                  "dex",
                  "health_factor",
                  "name",
                  "platform",
                  "price_usd",
                  "symbol",
                  "token_icon_link"
                ]
              },
              {
                "type": "object",
                "description": "This object represents the data structure for a Non-Fungible Token (NFT) minting transaction. It provides detailed information about the transaction, including wallet addresses, transaction hash, the type of NFT transaction (in this case, minting), and blockchain specifics. Additionally, it includes detailed information about the NFT minted, such as its image, contract address, token ID, and associated fees. This structure is particularly useful for platforms tracking NFT minting activities, offering insights into the creation of new NFTs, their associated costs, and the blockchain details.\n",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address involved in the NFT minting transaction.",
                    "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A more readable label or identifier for the wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique hash identifier of the NFT minting transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Specifies the type of transaction, in this case, NFT minting.",
                    "example": "nft_mint"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network on which the minting transaction was conducted.",
                    "example": "ethereum"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address of the transaction.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address of the transaction.",
                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                  },
                  "from_label": {
                    "type": "string",
                    "description": "A readable version of the 'from' wallet address.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to_label": {
                    "type": "string",
                    "description": "A readable version of the 'to' wallet address.",
                    "example": "0xcfdb...6f8ff"
                  },
                  "thumbnail": {
                    "type": "string",
                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "image": {
                    "type": "string",
                    "description": "A full image URL of the NFT.",
                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The number of items of the NFT minted in the transaction.",
                    "example": 1
                  },
                  "contract_address": {
                    "type": "string",
                    "description": "The blockchain address of the contract under which the NFT is minted.",
                    "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                  },
                  "contract_type": {
                    "type": "string",
                    "description": "The type of contract used for the NFT, such as ERC721.",
                    "example": "ERC721"
                  },
                  "fee": {
                    "type": "number",
                    "format": "double",
                    "description": "The transaction fee incurred for minting the NFT.",
                    "example": 0.21357696
                  },
                  "nft_name": {
                    "type": "string",
                    "description": "The name of the NFT minted.",
                    "example": "unknown"
                  },
                  "nft_symbol": {
                    "type": "string",
                    "description": "The symbol associated with the NFT.",
                    "example": "unknown"
                  },
                  "nft_token_id": {
                    "type": "string",
                    "description": "The unique token ID of the minted NFT.",
                    "example": 14
                  },
                  "currency_symbol": {
                    "type": "string",
                    "description": "The symbol of the currency used in the transaction (e.g., ETH, MATIC).",
                    "example": "MATIC"
                  },
                  "type": {
                    "type": "string",
                    "description": "Indicates the contract standard of the NFT, such as ERC721.",
                    "example": "ERC721"
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "description": "The value of the transaction. For minting, this is often zero since the NFT is being created.",
                    "example": 0
                  },
                  "value_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The equivalent USD value of the transaction.",
                    "example": 0
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "to",
                  "from_label",
                  "to_label",
                  "thumbnail",
                  "image",
                  "amount",
                  "contract_address",
                  "contract_type",
                  "fee",
                  "nft_name",
                  "nft_symbol",
                  "nft_token_id",
                  "currency_symbol",
                  "type",
                  "value",
                  "value_usd"
                ]
              },
              {
                "type": "object",
                "description": "This object encapsulates the details of a Non-Fungible Token (NFT) trading transaction. It includes comprehensive information such as wallet addresses, transaction hash, type of transaction (NFT trade), blockchain details, and timestamps. The structure provides specific data about the NFT trade, including the NFT's image, contract address, marketplace of the trade, and price details in both cryptocurrency and USD. Additionally, it includes information about the buyer, seller, and whether the transaction involved a bid being accepted. This structure is ideal for platforms that monitor and analyze NFT trading activities, offering detailed insights into each trade, its valuation, and the parties involved.\n",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address involved in the NFT trading transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A readable label for the wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique hash identifier of the NFT trading transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Specifies the type of transaction, in this case, NFT trading.",
                    "example": "nft_trade"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network where the trading transaction occurred.",
                    "example": "ethereum"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address of the transaction.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address of the transaction.",
                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                  },
                  "thumbnail": {
                    "type": "string",
                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "image": {
                    "type": "string",
                    "description": "A full image URL of the NFT.",
                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "action": {
                    "type": "string",
                    "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                    "example": "buy"
                  },
                  "contract": {
                    "type": "string",
                    "description": "The blockchain contract address associated with the NFT.",
                    "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                  },
                  "marketplace": {
                    "type": "string",
                    "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                    "example": "OpenSea"
                  },
                  "nft_address": {
                    "type": "string",
                    "description": "The blockchain address of the NFT involved in the trade.",
                    "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                  },
                  "nft_name": {
                    "type": "string",
                    "description": "The name of the NFT traded.",
                    "example": "Gemesis"
                  },
                  "nft_symbol": {
                    "type": "string",
                    "description": "The symbol associated with the NFT.",
                    "example": "OSP"
                  },
                  "nft_token_id": {
                    "type": "string",
                    "description": "The unique token ID of the NFT involved in the trade.",
                    "example": 32507
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "The price at which the NFT was traded.",
                    "example": 0.0151
                  },
                  "price_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The equivalent USD value of the NFT trade.",
                    "example": 32.911356
                  },
                  "profit": {
                    "type": "number",
                    "format": "double",
                    "description": "The profit earned from the trade. This may be zero in some transactions.",
                    "example": 0
                  },
                  "currency_symbol": {
                    "type": "string",
                    "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                    "example": "WETH"
                  },
                  "buyer": {
                    "type": "string",
                    "description": "The wallet address of the buyer in the trade."
                  },
                  "seller": {
                    "type": "string",
                    "description": "The wallet address of the seller in the trade."
                  },
                  "token": {
                    "type": "string",
                    "description": "The token type used in the transaction."
                  },
                  "first_interaction": {
                    "type": "boolean",
                    "description": "Indicates whether this was the first interaction between the buyer and seller."
                  },
                  "bid_accepted": {
                    "type": "boolean",
                    "description": "Specifies if the transaction involved a bid being accepted."
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "to",
                  "thumbnail",
                  "image",
                  "action",
                  "contract",
                  "marketplace",
                  "nft_address",
                  "nft_name",
                  "nft_symbol",
                  "nft_token_id",
                  "price",
                  "price_usd",
                  "profit",
                  "currency_symbol",
                  "buyer",
                  "seller",
                  "token",
                  "first_interaction",
                  "bid_accepted"
                ]
              },
              {
                "type": "object",
                "description": "This object type details a Non-Fungible Token (NFT) transfer transaction. It includes essential information such as wallet addresses, transaction hash, NFT details, and blockchain specifics. This structure is particularly useful for tracking NFT transfers, providing a complete overview of the transaction, including the involved parties (from and to addresses), the NFT's contract details, and the transaction's metadata such as timestamps and blockchain network. The object also includes the NFT's image, name, symbol, and token ID, offering a comprehensive view of the NFT being transferred.\n",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address involved in the NFT transfer transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A readable label for the wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique hash identifier of the NFT transfer transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Specifies the type of transaction, in this case, NFT transfer.",
                    "example": "nft_transfer"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network where the transfer transaction occurred.",
                    "example": "ethereum"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address of the transaction.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address of the transaction.",
                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                  },
                  "from_label": {
                    "type": "string",
                    "description": "A readable version of the 'from' wallet address.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to_label": {
                    "type": "string",
                    "description": "A readable version of the 'to' wallet address.",
                    "example": "0xcfdb...6f8ff"
                  },
                  "thumbnail": {
                    "type": "string",
                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "image": {
                    "type": "string",
                    "description": "A full image URL of the NFT.",
                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "contract_address": {
                    "type": "string",
                    "description": "The blockchain address of the contract under which the NFT is registered.",
                    "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                  },
                  "contract_type": {
                    "type": "string",
                    "description": "The type of contract used for the NFT, such as ERC721.",
                    "example": "ERC721"
                  },
                  "fee": {
                    "type": "number",
                    "format": "double",
                    "description": "The transaction fee incurred for the transfer of the NFT.",
                    "example": 0.21357696
                  },
                  "nft_name": {
                    "type": "string",
                    "description": "The name of the NFT being transferred.",
                    "example": "unknown"
                  },
                  "nft_symbol": {
                    "type": "string",
                    "description": "The symbol associated with the NFT.",
                    "example": "unknown"
                  },
                  "nft_token_id": {
                    "type": "string",
                    "description": "The unique token ID of the NFT involved in the transfer.",
                    "example": 3
                  },
                  "type": {
                    "type": "string",
                    "description": "Indicates the contract standard of the NFT, such as ERC721.",
                    "example": "ERC721"
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "description": "The value of the NFT at the time of the transfer. This might be represented in the native cryptocurrency of the blockchain."
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "to",
                  "from_label",
                  "to_label",
                  "thumbnail",
                  "image",
                  "contract_address",
                  "contract_type",
                  "fee",
                  "nft_name",
                  "nft_symbol",
                  "nft_token_id",
                  "type",
                  "value"
                ]
              },
              {
                "type": "object",
                "description": "This object encapsulates detailed information about a Non-Fungible Token (NFT) lending transaction. It includes comprehensive details such as wallet addresses, transaction hash, the type of NFT transaction, the blockchain used, and timestamps. Additionally, it provides specifics about the NFT involved, including its address, name, symbol, image, and the terms of the lending agreement. This structure is particularly useful for platforms that need to track and manage NFT lending activities, providing all necessary details for analyzing and processing such transactions.\n",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address involved in the NFT lending transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A more readable label or identifier for the wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique hash identifier of the NFT lending transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Specifies the type of transaction, in this case, NFT lending.",
                    "example": "nft_lending"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network on which the transaction was conducted.",
                    "example": "ethereum"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address of the transaction.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address of the transaction.",
                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                  },
                  "from_label": {
                    "type": "string",
                    "description": "A readable version of the 'from' wallet address.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to_label": {
                    "type": "string",
                    "description": "A readable version of the 'to' wallet address.",
                    "example": "0xcfdb...6f8ff"
                  },
                  "thumbnail": {
                    "type": "string",
                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "image": {
                    "type": "string",
                    "description": "A full image URL of the NFT.",
                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "action": {
                    "type": "string",
                    "description": "Describes the action taken in the NFT lending transaction, such as 'buy', 'lend', etc.",
                    "example": "buy"
                  },
                  "currency_address": {
                    "type": "string",
                    "description": "The blockchain address of the currency used in the transaction.",
                    "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                  },
                  "currency_symbol": {
                    "type": "string",
                    "description": "The symbol of the currency used in the transaction.",
                    "example": "OpenSea"
                  },
                  "interest": {
                    "type": "number",
                    "format": "double",
                    "description": "The interest rate applied in the NFT lending transaction.",
                    "example": 0.0151
                  },
                  "nft_address": {
                    "type": "string",
                    "description": "The blockchain address of the NFT involved in the transaction.",
                    "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                  },
                  "nft_name": {
                    "type": "string",
                    "description": "The name of the NFT.",
                    "example": "Gemesis"
                  },
                  "nft_symbol": {
                    "type": "string",
                    "description": "The symbol of the NFT.",
                    "example": "OSP"
                  },
                  "platform": {
                    "type": "string",
                    "description": "The platform or service through which the NFT lending transaction was conducted.",
                    "example": "Blend"
                  },
                  "nft_token_id": {
                    "type": "string",
                    "description": "The unique identifier for the specific NFT within its collection.",
                    "example": 32507
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "The price at which the NFT was lent or transacted.",
                    "example": 0.0151
                  },
                  "price_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The equivalent USD value of the transaction price.",
                    "example": 32.911356
                  },
                  "terms": {
                    "type": "number",
                    "format": "double",
                    "description": "Specifies the terms of the NFT lending agreement.",
                    "example": 0.0151
                  },
                  "refinance": {
                    "type": "boolean",
                    "description": "Indicates whether the transaction involved refinancing of the NFT.",
                    "example": false
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "to",
                  "from_label",
                  "to_label",
                  "thumbnail",
                  "image",
                  "action",
                  "currency_address",
                  "currency_symbol",
                  "interest",
                  "nft_address",
                  "nft_name",
                  "nft_symbol",
                  "platform",
                  "nft_token_id",
                  "price",
                  "price_usd",
                  "terms",
                  "refinance"
                ]
              },
              {
                "type": "object",
                "description": "This object represents a detailed structure for a blockchain transaction, encompassing various aspects like wallet addresses, transaction hash, type, associated chains, and financial details. It is designed to provide a comprehensive view of a transaction, including the wallets involved, the transaction's nature, the chains it spans, and the financial details like the amount and its equivalent in USD. This structure is ideal for applications that require detailed tracking and analysis of blockchain transactions.\n",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address involved in the transaction.",
                    "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A shortened, more readable version of the wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique hash identifier of the transaction.",
                    "example": "0xb23dc807e8063feaefe20644f85d13a7238a8b01b9fd167135ef664146692f99"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "The type of transaction.",
                    "example": "bridge"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain on which the transaction occurred, like 'ethereum'.",
                    "example": "ethereum"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numeric index or identifier for the transaction.",
                    "example": 7
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp when the transaction occurred.",
                    "example": 1702899899
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain in which the transaction is included.",
                    "example": 18812661
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address of the transaction.",
                    "example": "0xecc19e177d24551aa7ed6bc6fe566eca726cc8a9"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address of the transaction.",
                    "example": "0xbf3b71decbcefabb3210b9d8f18ec22e0556f5f0"
                  },
                  "from_label": {
                    "type": "string",
                    "description": "A shortened, more readable version of the originating wallet address.",
                    "example": "0xecc1...cc8a9"
                  },
                  "to_label": {
                    "type": "string",
                    "description": "A shortened, more readable version of the destination wallet address.",
                    "example": "0xbf3b...6f5f0"
                  },
                  "token_address": {
                    "type": "string",
                    "description": "The address of the token involved in the transaction.",
                    "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                  },
                  "token_name": {
                    "type": "string",
                    "description": "The name of the token involved in the transaction.",
                    "example": "Wrapped Ether"
                  },
                  "token_symbol": {
                    "type": "string",
                    "description": "The symbol of the token involved in the transaction.",
                    "example": "WETH"
                  },
                  "token_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount of the token involved in the transaction.",
                    "example": 0.09956219862680922
                  },
                  "amount_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                    "example": 212.00276764599622
                  },
                  "from_chain": {
                    "type": "string",
                    "description": "The originating chain of the transaction, in cases of cross-chain activities.",
                    "example": "Arbitrum"
                  },
                  "to_chain": {
                    "type": "string",
                    "description": "The destination chain of the transaction, in cases of cross-chain activities.",
                    "example": "Ethereum"
                  },
                  "platform": {
                    "type": "string",
                    "description": "The platform or service used for the transaction.",
                    "example": "Stargate"
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the token at the time of the transaction.",
                    "example": 2129.35
                  },
                  "type": {
                    "type": "string",
                    "description": "Specifies the nature of the transaction, like 'withdraw', 'deposit', etc.",
                    "example": "withdraw"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "to",
                  "from_label",
                  "to_label",
                  "token_address",
                  "token_name",
                  "token_symbol",
                  "amount",
                  "amount_usd",
                  "from_chain",
                  "to_chain",
                  "platform",
                  "price",
                  "type",
                  "token_icon_link"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a contract interaction event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "contract_address": {
                    "type": "string",
                    "description": "The address of the smart contract involved in the interaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "contract_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the smart contract.",
                    "example": "Uniswap V3"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "to",
                  "contract_address",
                  "contract_label"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a wrap event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "dex": {
                    "type": "string",
                    "description": "The decentralized exchange where the wrap transaction occurred.",
                    "example": "Uniswap"
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "action": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "description": "The amount of tokens wrapped in the transaction.",
                    "example": 100
                  },
                  "amount_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the wrapped tokens.",
                    "example": "100.0"
                  },
                  "contract_address": {
                    "type": "string",
                    "description": "The address of the smart contract involved in the interaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the token wrapped in the transaction.",
                    "example": "Wrapped Ether"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the token wrapped in the transaction.",
                    "example": "WETH"
                  },
                  "token_price_usd": {
                    "type": "number",
                    "description": "The price of the token in USD at the time of the transaction.",
                    "example": "100.0"
                  },
                  "token_type": {
                    "type": "string",
                    "description": "The type of token wrapped in the transaction.",
                    "example": "ERC20"
                  },
                  "token_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "dex",
                  "from",
                  "to",
                  "action",
                  "amount",
                  "amount_usd",
                  "contract_address",
                  "name",
                  "symbol",
                  "token_price_usd",
                  "token_type",
                  "token_icon_link"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a Sudo Pool event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "dex": {
                    "type": "string",
                    "description": "The decentralized exchange where the wrap transaction occurred.",
                    "example": "Uniswap"
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "nft_address": {
                    "type": "string",
                    "description": "The address of the NFT contract involved in the interaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "nft_amount": {
                    "type": "integer",
                    "description": "The amount of NFTs involved in the transaction.",
                    "example": 1
                  },
                  "nft_price": {
                    "type": "number",
                    "description": "The price of the NFT in the transaction.",
                    "example": 100
                  },
                  "nft_symbol": {
                    "type": "string",
                    "description": "The symbol of the NFT in the transaction.",
                    "example": "NFT"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "token0_address": {
                    "type": "string",
                    "description": "The address of the first token in the LP pair.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "token0_amount": {
                    "type": "number",
                    "description": "The amount of the first token in the LP pair.",
                    "example": 100
                  },
                  "token0_amount_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the first token in the LP pair.",
                    "example": 100
                  },
                  "token0_name": {
                    "type": "string",
                    "description": "The name of the first token in the LP pair.",
                    "example": "Wrapped Ether"
                  },
                  "token0_price_usd": {
                    "type": "number",
                    "description": "The price of the first token in the LP pair in USD.",
                    "example": 100
                  },
                  "token0_symbol": {
                    "type": "string",
                    "description": "The symbol of the first token in the LP pair.",
                    "example": "WETH"
                  },
                  "token0_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "nft_address",
                  "nft_amount",
                  "nft_price",
                  "nft_symbol",
                  "token0_address",
                  "token0_amount",
                  "token0_amount_usd",
                  "token0_name",
                  "token0_price_usd",
                  "token0_symbol",
                  "from",
                  "to",
                  "token0_icon_link"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a reward event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "address": {
                    "type": "string",
                    "description": "The address of the token involved in the transaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "amount": {
                    "type": "number",
                    "description": "The amount of tokens involved in the transaction.",
                    "example": 100
                  },
                  "amount_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                    "example": 100
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the token involved in the transaction.",
                    "example": "Wrapped Ether"
                  },
                  "price_usd": {
                    "type": "number",
                    "description": "The price of the token in USD.",
                    "example": 100
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the token involved in the transaction.",
                    "example": "WETH"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "address",
                  "amount",
                  "amount_usd",
                  "from",
                  "name",
                  "price_usd",
                  "symbol"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a staking event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "from_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the originating wallet.",
                    "example": "Alice"
                  },
                  "to_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the destination wallet.",
                    "example": "Bob"
                  },
                  "amount": {
                    "type": "number",
                    "description": "The amount of tokens staked in the transaction.",
                    "example": 100
                  },
                  "amount_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the staked tokens.",
                    "example": 100
                  },
                  "token_price_usd": {
                    "type": "number",
                    "description": "The price of the token in USD.",
                    "example": 100
                  },
                  "contract_address": {
                    "type": "string",
                    "description": "The address of the smart contract involved in the interaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the token staked in the transaction.",
                    "example": "WETH"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the token staked in the transaction.",
                    "example": "Wrapped Ether"
                  },
                  "action": {
                    "type": "string",
                    "description": "The action taken in the staking transaction.",
                    "example": "stake"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "to",
                  "from_label",
                  "to_label",
                  "amount",
                  "amount_usd",
                  "token_price_usd",
                  "contract_address",
                  "symbol",
                  "name",
                  "action"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a Perpetual event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "action": {
                    "type": "string",
                    "description": "The action taken in the Perpetual event.",
                    "example": "buy"
                  },
                  "amount_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                    "example": 100
                  },
                  "average_price": {
                    "type": "number",
                    "description": "The average price of the tokens involved in the transaction.",
                    "example": 100
                  },
                  "base_token_address": {
                    "type": "string",
                    "description": "The address of the base token involved in the transaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "base_token_amount": {
                    "type": "number",
                    "description": "The amount of base tokens involved in the transaction.",
                    "example": 100
                  },
                  "base_token_symbol": {
                    "type": "string",
                    "description": "The symbol of the base token involved in the transaction.",
                    "example": "ETH"
                  },
                  "dex": {
                    "type": "string",
                    "description": "The decentralized exchange where the Perpetual transaction occurred.",
                    "example": "Uniswap"
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "liquidation": {
                    "type": "boolean",
                    "description": "Indicates whether the transaction was a liquidation.",
                    "example": false
                  },
                  "liquidation_price": {
                    "type": "number",
                    "description": "The price at which the liquidation occurred.",
                    "example": 100
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "trade_direction": {
                    "type": "string",
                    "description": "The direction of the trade in the Perpetual transaction.",
                    "example": "long"
                  },
                  "perp_details": {
                    "type": "string",
                    "description": "Additional details about the Perpetual transaction.",
                    "example": "details"
                  },
                  "token0_address": {
                    "type": "string",
                    "description": "The address of the first token in the LP pair.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "token0_amount": {
                    "type": "number",
                    "description": "The amount of the first token in the LP pair.",
                    "example": 100
                  },
                  "token0_amount_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the first token in the LP pair.",
                    "example": 100
                  },
                  "token0_name": {
                    "type": "string",
                    "description": "The name of the first token in the LP pair.",
                    "example": "Wrapped Ether"
                  },
                  "token0_price_usd": {
                    "type": "number",
                    "description": "The price of the first token in the LP pair in USD.",
                    "example": 100
                  },
                  "token0_symbol": {
                    "type": "string",
                    "description": "The symbol of the first token in the LP pair.",
                    "example": "WETH"
                  },
                  "token0_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  },
                  "token1_address": {
                    "type": "string",
                    "description": "The address of the second token in the LP pair.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "token1_amount": {
                    "type": "number",
                    "description": "The amount of the second token in the LP pair.",
                    "example": 100
                  },
                  "token1_amount_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the second token in the LP pair.",
                    "example": 100
                  },
                  "token1_name": {
                    "type": "string",
                    "description": "The name of the second token in the LP pair.",
                    "example": "Wrapped Ether"
                  },
                  "token1_price_usd": {
                    "type": "number",
                    "description": "The price of the second token in the LP pair in USD.",
                    "example": 100
                  },
                  "token1_symbol": {
                    "type": "string",
                    "description": "The symbol of the second token in the LP pair.",
                    "example": "WETH"
                  },
                  "token1_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  },
                  "realized_pnl": {
                    "type": "number",
                    "description": "The realized profit and loss of the Perpetual transaction.",
                    "example": 100
                  },
                  "is_nft_perp": {
                    "type": "boolean",
                    "description": "Indicates whether the Perpetual transaction involves an NFT.",
                    "example": false
                  },
                  "position_size": {
                    "type": "number",
                    "description": "The size of the position in the Perpetual transaction.",
                    "example": 100
                  },
                  "position_size_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the position size.",
                    "example": 100
                  },
                  "leverage": {
                    "type": "number",
                    "description": "The leverage used in the Perpetual transaction.",
                    "example": 100
                  },
                  "unrealized_pnl": {
                    "type": "number",
                    "description": "The unrealized profit and loss of the Perpetual transaction.",
                    "example": 100
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "action",
                  "amount_usd",
                  "average_price",
                  "base_token_address",
                  "base_token_amount",
                  "base_token_symbol",
                  "dex",
                  "from",
                  "liquidation",
                  "liquidation_price",
                  "to",
                  "trade_direction",
                  "perp_details",
                  "token0_address",
                  "token0_amount",
                  "token0_amount_usd",
                  "token0_name",
                  "token0_price_usd",
                  "token0_symbol",
                  "token0_icon_link",
                  "token1_address",
                  "token1_amount",
                  "token1_amount_usd",
                  "token1_name",
                  "token1_price_usd",
                  "token1_symbol",
                  "token1_icon_link",
                  "realized_pnl",
                  "is_nft_perp"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a flashloan event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "address": {
                    "type": "string",
                    "description": "The address of the token involved in the transaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "amount": {
                    "type": "number",
                    "description": "The amount of tokens involved in the transaction.",
                    "example": 100
                  },
                  "amount_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                    "example": 100
                  },
                  "dex": {
                    "type": "string",
                    "description": "The decentralized exchange (DEX) where the flashloan transaction took place.",
                    "example": "Uniswap"
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "health_factor": {
                    "type": "number",
                    "description": "The health factor of the wallet after the flashloan transaction.",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the token involved in the transaction.",
                    "example": "Wrapped Ether"
                  },
                  "platform": {
                    "type": "string",
                    "description": "The platform where the flashloan transaction took place.",
                    "example": "Aave"
                  },
                  "price_usd": {
                    "type": "number",
                    "description": "The price of the token in USD.",
                    "example": 100
                  },
                  "symbol": {
                    "type": "string",
                    "description": "The symbol of the token involved in the transaction.",
                    "example": "ETH"
                  },
                  "token_icon_link": {
                    "type": "string",
                    "description": "A link to the icon of the token involved in the transaction.",
                    "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "address",
                  "amount",
                  "amount_usd",
                  "dex",
                  "from",
                  "health_factor",
                  "name",
                  "platform",
                  "price_usd",
                  "symbol",
                  "token_icon_link"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a contract creation event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "amount_usd": {
                    "type": "number",
                    "description": "The equivalent amount in USD of the wrapped tokens.",
                    "example": "100.0"
                  },
                  "contract_address": {
                    "type": "string",
                    "description": "The address of the smart contract involved in the interaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "from_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the originating wallet.",
                    "example": "Alice"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "amount_usd",
                  "contract_address",
                  "from",
                  "from_label"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a NFT liquidation event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "contract_address": {
                    "type": "string",
                    "description": "The address of the NFT contract involved in the interaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "currency_address": {
                    "type": "string",
                    "description": "The address of the currency involved in the transaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "currency_symbol": {
                    "type": "string",
                    "description": "The symbol of the currency involved in the transaction.",
                    "example": "ETH"
                  },
                  "dex": {
                    "type": "string",
                    "description": "The decentralized exchange where the wrap transaction occurred.",
                    "example": "Uniswap"
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "nft_address": {
                    "type": "string",
                    "description": "The address of the NFT contract involved in the interaction.",
                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                  },
                  "nft_name": {
                    "type": "string",
                    "description": "The name of the NFT in the transaction.",
                    "example": "NFT"
                  },
                  "nft_symbol": {
                    "type": "string",
                    "description": "The symbol of the NFT in the transaction.",
                    "example": "NFT"
                  },
                  "platform": {
                    "type": "string",
                    "description": "The platform where the flashloan transaction took place.",
                    "example": "Aave"
                  },
                  "price": {
                    "type": "number",
                    "description": "The price of the NFT in the transaction.",
                    "example": 100
                  },
                  "price_usd": {
                    "type": "number",
                    "description": "The price of the NFT in USD.",
                    "example": 100
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "token_id": {
                    "type": "string",
                    "description": "The unique identifier of the NFT in the transaction.",
                    "example": "1"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "contract_address",
                  "currency_address",
                  "currency_symbol",
                  "dex",
                  "from",
                  "nft_address",
                  "nft_name",
                  "nft_symbol",
                  "platform",
                  "price",
                  "price_usd",
                  "to",
                  "token_id"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing an option event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address participating in the LP transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                    "example": "vitalik.eth"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique transaction hash identifying this specific LP transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                    "example": "lp"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                    "example": "optimism"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "action": {
                    "type": "string",
                    "description": "The action taken in the option event.",
                    "example": "buy"
                  },
                  "amount": {
                    "type": "number",
                    "description": "The amount of tokens involved in the transaction.",
                    "example": 100
                  },
                  "asset": {
                    "type": "string",
                    "description": "The asset involved in the option event.",
                    "example": "ETH"
                  },
                  "dex": {
                    "type": "string",
                    "description": "The decentralized exchange (DEX) where the option event took place.",
                    "example": "Uniswap"
                  },
                  "direction": {
                    "type": "string",
                    "description": "The direction of the option event.",
                    "example": "call"
                  },
                  "expiry": {
                    "type": "string",
                    "description": "The expiry date of the option.",
                    "example": "2022-12-31"
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "option_price_usd": {
                    "type": "number",
                    "description": "The price of the option in USD.",
                    "example": 100
                  },
                  "position_status": {
                    "type": "string",
                    "description": "The status of the option position.",
                    "example": "open"
                  },
                  "spot_price_usd": {
                    "type": "number",
                    "description": "The spot price of the asset in USD.",
                    "example": 100
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the option event.",
                    "example": "active"
                  },
                  "strike_price_usd": {
                    "type": "number",
                    "description": "The strike price of the option in USD.",
                    "example": 100
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address for the transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of option event.",
                    "example": "call"
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "action",
                  "amount",
                  "asset",
                  "dex",
                  "direction",
                  "expiry",
                  "from",
                  "option_price_usd",
                  "position_status",
                  "spot_price_usd",
                  "status",
                  "strike_price_usd",
                  "to",
                  "type"
                ]
              },
              {
                "type": "object",
                "description": "This object provides a structure for representing a NFT sweep event on the blockchain.",
                "properties": {
                  "wallet": {
                    "type": "string",
                    "description": "The wallet address involved in the NFT trading transaction.",
                    "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                  },
                  "wallet_label": {
                    "type": "string",
                    "description": "A readable label for the wallet address.",
                    "example": "0xa4c8...f9457d"
                  },
                  "tx_hash": {
                    "type": "string",
                    "description": "The unique hash identifier of the NFT trading transaction.",
                    "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                  },
                  "tx_type": {
                    "type": "string",
                    "description": "Specifies the type of transaction, in this case, NFT trading.",
                    "example": "nft_trade"
                  },
                  "chain": {
                    "type": "string",
                    "description": "The blockchain network where the trading transaction occurred.",
                    "example": "ethereum"
                  },
                  "index": {
                    "type": "integer",
                    "description": "A numerical index or identifier for the transaction.",
                    "example": 10
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "The timestamp marking when the transaction was executed.",
                    "example": 1702899395
                  },
                  "block": {
                    "type": "integer",
                    "description": "The block number on the blockchain where this transaction is recorded.",
                    "example": 113650309
                  },
                  "from": {
                    "type": "string",
                    "description": "The originating wallet address of the transaction.",
                    "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                  },
                  "to": {
                    "type": "string",
                    "description": "The destination wallet address of the transaction.",
                    "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                  },
                  "thumbnail": {
                    "type": "string",
                    "description": "A thumbnail image URL of the NFT involved in the transaction.",
                    "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "image": {
                    "type": "string",
                    "description": "A full image URL of the NFT.",
                    "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                  },
                  "action": {
                    "type": "string",
                    "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                    "example": "buy"
                  },
                  "contract": {
                    "type": "string",
                    "description": "The blockchain contract address associated with the NFT.",
                    "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                  },
                  "marketplace": {
                    "type": "string",
                    "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                    "example": "OpenSea"
                  },
                  "nft_address": {
                    "type": "string",
                    "description": "The blockchain address of the NFT involved in the trade.",
                    "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                  },
                  "nft_name": {
                    "type": "string",
                    "description": "The name of the NFT traded.",
                    "example": "Gemesis"
                  },
                  "nft_symbol": {
                    "type": "string",
                    "description": "The symbol associated with the NFT.",
                    "example": "OSP"
                  },
                  "nft_token_id": {
                    "type": "string",
                    "description": "The unique token ID of the NFT involved in the trade.",
                    "example": 32507
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "The price at which the NFT was traded.",
                    "example": 0.0151
                  },
                  "price_usd": {
                    "type": "number",
                    "format": "double",
                    "description": "The equivalent USD value of the NFT trade.",
                    "example": 32.911356
                  },
                  "profit": {
                    "type": "number",
                    "format": "double",
                    "description": "The profit earned from the trade. This may be zero in some transactions.",
                    "example": 0
                  },
                  "currency_symbol": {
                    "type": "string",
                    "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                    "example": "WETH"
                  },
                  "buyer": {
                    "type": "string",
                    "description": "The wallet address of the buyer in the trade."
                  },
                  "seller": {
                    "type": "string",
                    "description": "The wallet address of the seller in the trade."
                  },
                  "token": {
                    "type": "string",
                    "description": "The token type used in the transaction."
                  },
                  "first_interaction": {
                    "type": "boolean",
                    "description": "Indicates whether this was the first interaction between the buyer and seller."
                  },
                  "bid_accepted": {
                    "type": "boolean",
                    "description": "Specifies if the transaction involved a bid being accepted."
                  }
                },
                "required": [
                  "wallet",
                  "wallet_label",
                  "tx_hash",
                  "tx_type",
                  "chain",
                  "index",
                  "timestamp",
                  "block",
                  "from",
                  "to",
                  "thumbnail",
                  "image",
                  "action",
                  "contract",
                  "marketplace",
                  "nft_address",
                  "nft_name",
                  "nft_symbol",
                  "nft_token_id",
                  "price",
                  "price_usd",
                  "profit",
                  "currency_symbol",
                  "buyer",
                  "seller",
                  "token",
                  "first_interaction",
                  "bid_accepted"
                ]
              }
            ],
            "description": "The event data."
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "WebsocketErrorEvent": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "error"
            ]
          },
          "data": {
            "type": "string",
            "description": "The error message."
          }
        },
        "required": [
          "type",
          "data"
        ],
        "example": {
          "type": "error",
          "data": "invalid command"
        }
      },
      "Bridge": {
        "type": "object",
        "description": "This object represents a detailed structure for a blockchain transaction, encompassing various aspects like wallet addresses, transaction hash, type, associated chains, and financial details. It is designed to provide a comprehensive view of a transaction, including the wallets involved, the transaction's nature, the chains it spans, and the financial details like the amount and its equivalent in USD. This structure is ideal for applications that require detailed tracking and analysis of blockchain transactions.\n",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address involved in the transaction.",
            "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
          },
          "wallet_label": {
            "type": "string",
            "description": "A shortened, more readable version of the wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique hash identifier of the transaction.",
            "example": "0xb23dc807e8063feaefe20644f85d13a7238a8b01b9fd167135ef664146692f99"
          },
          "tx_type": {
            "type": "string",
            "description": "The type of transaction.",
            "example": "bridge"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain on which the transaction occurred, like 'ethereum'.",
            "example": "ethereum"
          },
          "index": {
            "type": "integer",
            "description": "A numeric index or identifier for the transaction.",
            "example": 7
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp when the transaction occurred.",
            "example": 1702899899
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain in which the transaction is included.",
            "example": 18812661
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address of the transaction.",
            "example": "0xecc19e177d24551aa7ed6bc6fe566eca726cc8a9"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address of the transaction.",
            "example": "0xbf3b71decbcefabb3210b9d8f18ec22e0556f5f0"
          },
          "from_label": {
            "type": "string",
            "description": "A shortened, more readable version of the originating wallet address.",
            "example": "0xecc1...cc8a9"
          },
          "to_label": {
            "type": "string",
            "description": "A shortened, more readable version of the destination wallet address.",
            "example": "0xbf3b...6f5f0"
          },
          "token_address": {
            "type": "string",
            "description": "The address of the token involved in the transaction.",
            "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
          },
          "token_name": {
            "type": "string",
            "description": "The name of the token involved in the transaction.",
            "example": "Wrapped Ether"
          },
          "token_symbol": {
            "type": "string",
            "description": "The symbol of the token involved in the transaction.",
            "example": "WETH"
          },
          "token_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the token involved in the transaction.",
            "example": 0.09956219862680922
          },
          "amount_usd": {
            "type": "number",
            "format": "double",
            "description": "The equivalent amount in USD of the tokens involved in the transaction.",
            "example": 212.00276764599622
          },
          "from_chain": {
            "type": "string",
            "description": "The originating chain of the transaction, in cases of cross-chain activities.",
            "example": "Arbitrum"
          },
          "to_chain": {
            "type": "string",
            "description": "The destination chain of the transaction, in cases of cross-chain activities.",
            "example": "Ethereum"
          },
          "platform": {
            "type": "string",
            "description": "The platform or service used for the transaction.",
            "example": "Stargate"
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "The price of the token at the time of the transaction.",
            "example": 2129.35
          },
          "type": {
            "type": "string",
            "description": "Specifies the nature of the transaction, like 'withdraw', 'deposit', etc.",
            "example": "withdraw"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "to",
          "from_label",
          "to_label",
          "token_address",
          "token_name",
          "token_symbol",
          "amount",
          "amount_usd",
          "from_chain",
          "to_chain",
          "platform",
          "price",
          "type",
          "token_icon_link"
        ]
      },
      "Lending": {
        "type": "object",
        "description": "This object represents the data structure for a specific transaction related to decentralized finance (DeFi) activities such as lending, borrowing, and other related actions. It provides detailed information about the transaction, including wallet addresses, transaction hash, type of transaction, chain details, and financial figures. This structure is particularly useful for platforms tracking DeFi activities, offering insights into the specifics of each transaction, such as the asset involved, the amount, the health factor in lending platforms, and the price of the asset in USD at the time of the transaction.\n",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address associated with the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A more readable, shortened version of the wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique identifier of the transaction, represented as a hash.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Specifies the type of DeFi transaction, such as lending, borrowing, etc.",
            "example": "lending"
          },
          "chain": {
            "type": "string",
            "description": "Indicates the blockchain network on which the transaction occurred.",
            "example": "base"
          },
          "index": {
            "type": "integer",
            "description": "A sequential index or identifier for the transaction within a particular dataset or list.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number in the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "from_label": {
            "type": "string",
            "description": "A readable, abbreviated form of the 'from' wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "action": {
            "type": "string",
            "description": "Describes the action taken in the transaction, such as 'Repaid' in a lending scenario.",
            "example": "Repaid"
          },
          "address": {
            "type": "string",
            "description": "The smart contract address involved in the transaction.",
            "example": "0x4200000000000000000000000000000000000006"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the asset involved in the transaction.",
            "example": 50.007801987424834
          },
          "amount_usd": {
            "type": "number",
            "format": "double",
            "description": "The equivalent value of the transaction amount in USD.",
            "example": 106652.63945462069
          },
          "dex": {
            "type": "string",
            "description": "The decentralized exchange or platform where the transaction occurred, such as AaveV2.",
            "example": "AaveV2"
          },
          "health_factor": {
            "type": "number",
            "format": "double",
            "description": "A metric specific to lending platforms, indicating the health of the loan or position.",
            "example": 1000
          },
          "name": {
            "type": "string",
            "description": "The name of the asset involved in the transaction.",
            "example": "Wrapped Ether"
          },
          "platform": {
            "type": "string",
            "description": "The DeFi platform associated with the transaction, like AaveV3.",
            "example": "AaveV3"
          },
          "price_usd": {
            "type": "number",
            "format": "double",
            "description": "The price of the asset in USD at the time of the transaction.",
            "example": 2132.72
          },
          "symbol": {
            "type": "string",
            "description": "The symbol of the asset involved in the transaction.",
            "example": "WETH"
          },
          "token_icon_link": {
            "type": "string",
            "description": "A URL link to the icon image of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "from_label",
          "action",
          "address",
          "amount",
          "amount_usd",
          "dex",
          "health_factor",
          "name",
          "platform",
          "price_usd",
          "symbol",
          "token_icon_link"
        ]
      },
      "LP": {
        "type": "object",
        "description": "This object provides a comprehensive overview of a liquidity pool (LP) transaction on a decentralized exchange (DEX). It includes details about the wallet involved, the transaction hash, type, and associated blockchain, as well as specific information about the assets involved in the transaction. This structure is particularly useful for platforms that track and analyze liquidity pool actions, such as adding or removing liquidity, offering insights into the specifics of each action, including the assets involved, their amounts in both the native token and USD value, and their respective prices in USD.\n",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "dex": {
            "type": "string",
            "description": "The name of the decentralized exchange where the LP transaction occurred.",
            "example": "Odos"
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "type": {
            "type": "string",
            "description": "Specifies the nature of the LP transaction, such as 'add' or 'remove'.",
            "example": "add"
          },
          "token0_address": {
            "type": "string",
            "description": "The address of the first token involved in the LP transaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "token0_amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the first token involved in the transaction.",
            "example": 25
          },
          "token0_amount_usd": {
            "type": "number",
            "format": "double",
            "description": "The USD value of the first token amount at the time of the transaction.",
            "example": 25
          },
          "token0_name": {
            "type": "string",
            "description": "The name of the first token involved in the transaction.",
            "example": "USD Coin"
          },
          "token0_price_usd": {
            "type": "number",
            "format": "double",
            "description": "The price of the first token in USD.",
            "example": 1
          },
          "token0_symbol": {
            "type": "string",
            "description": "The symbol of the first token involved in the transaction.",
            "example": "USDC"
          },
          "token0_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          },
          "token1_address": {
            "type": "string",
            "description": "The address of the second token involved in the LP transaction.",
            "example": "0x0000000000000000000000000000000000000000"
          },
          "token1_amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the second token involved in the transaction.",
            "example": 25
          },
          "token1_amount_usd": {
            "type": "number",
            "format": "double",
            "description": "The USD value of the second token amount at the time of the transaction.",
            "example": 25
          },
          "token1_name": {
            "type": "string",
            "description": "The name of the second token involved in the transaction.",
            "example": "USD Coin"
          },
          "token1_price_usd": {
            "type": "number",
            "format": "double",
            "description": "The price of the second token in USD.",
            "example": 1
          },
          "token1_symbol": {
            "type": "string",
            "description": "The symbol of the second token involved in the transaction.",
            "example": "USDC"
          },
          "token1_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          },
          "lower_bound": {
            "type": "number",
            "format": "double",
            "description": "Indicates the lower bound of the price range for the LP position, relevant in certain types of liquidity pools.",
            "example": 0
          },
          "upper_bound": {
            "type": "number",
            "format": "double",
            "description": "Indicates the upper bound of the price range for the LP position, relevant in certain types of liquidity pools.",
            "example": 0
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "dex",
          "from",
          "type",
          "token0_address",
          "token0_amount",
          "token0_amount_usd",
          "token0_name",
          "token0_price_usd",
          "token0_symbol",
          "token0_icon_link",
          "token1_address",
          "token1_amount",
          "token1_amount_usd",
          "token1_name",
          "token1_price_usd",
          "token1_symbol",
          "token1_icon_link",
          "lower_bound",
          "upper_bound"
        ]
      },
      "NftLending": {
        "type": "object",
        "description": "This object encapsulates detailed information about a Non-Fungible Token (NFT) lending transaction. It includes comprehensive details such as wallet addresses, transaction hash, the type of NFT transaction, the blockchain used, and timestamps. Additionally, it provides specifics about the NFT involved, including its address, name, symbol, image, and the terms of the lending agreement. This structure is particularly useful for platforms that need to track and manage NFT lending activities, providing all necessary details for analyzing and processing such transactions.\n",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address involved in the NFT lending transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A more readable label or identifier for the wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique hash identifier of the NFT lending transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Specifies the type of transaction, in this case, NFT lending.",
            "example": "nft_lending"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network on which the transaction was conducted.",
            "example": "ethereum"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address of the transaction.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address of the transaction.",
            "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
          },
          "from_label": {
            "type": "string",
            "description": "A readable version of the 'from' wallet address.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to_label": {
            "type": "string",
            "description": "A readable version of the 'to' wallet address.",
            "example": "0xcfdb...6f8ff"
          },
          "thumbnail": {
            "type": "string",
            "description": "A thumbnail image URL of the NFT involved in the transaction.",
            "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "image": {
            "type": "string",
            "description": "A full image URL of the NFT.",
            "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "action": {
            "type": "string",
            "description": "Describes the action taken in the NFT lending transaction, such as 'buy', 'lend', etc.",
            "example": "buy"
          },
          "currency_address": {
            "type": "string",
            "description": "The blockchain address of the currency used in the transaction.",
            "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
          },
          "currency_symbol": {
            "type": "string",
            "description": "The symbol of the currency used in the transaction.",
            "example": "OpenSea"
          },
          "interest": {
            "type": "number",
            "format": "double",
            "description": "The interest rate applied in the NFT lending transaction.",
            "example": 0.0151
          },
          "nft_address": {
            "type": "string",
            "description": "The blockchain address of the NFT involved in the transaction.",
            "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
          },
          "nft_name": {
            "type": "string",
            "description": "The name of the NFT.",
            "example": "Gemesis"
          },
          "nft_symbol": {
            "type": "string",
            "description": "The symbol of the NFT.",
            "example": "OSP"
          },
          "platform": {
            "type": "string",
            "description": "The platform or service through which the NFT lending transaction was conducted.",
            "example": "Blend"
          },
          "nft_token_id": {
            "type": "string",
            "description": "The unique identifier for the specific NFT within its collection.",
            "example": 32507
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "The price at which the NFT was lent or transacted.",
            "example": 0.0151
          },
          "price_usd": {
            "type": "number",
            "format": "double",
            "description": "The equivalent USD value of the transaction price.",
            "example": 32.911356
          },
          "terms": {
            "type": "number",
            "format": "double",
            "description": "Specifies the terms of the NFT lending agreement.",
            "example": 0.0151
          },
          "refinance": {
            "type": "boolean",
            "description": "Indicates whether the transaction involved refinancing of the NFT.",
            "example": false
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "to",
          "from_label",
          "to_label",
          "thumbnail",
          "image",
          "action",
          "currency_address",
          "currency_symbol",
          "interest",
          "nft_address",
          "nft_name",
          "nft_symbol",
          "platform",
          "nft_token_id",
          "price",
          "price_usd",
          "terms",
          "refinance"
        ]
      },
      "NftMint": {
        "type": "object",
        "description": "This object represents the data structure for a Non-Fungible Token (NFT) minting transaction. It provides detailed information about the transaction, including wallet addresses, transaction hash, the type of NFT transaction (in this case, minting), and blockchain specifics. Additionally, it includes detailed information about the NFT minted, such as its image, contract address, token ID, and associated fees. This structure is particularly useful for platforms tracking NFT minting activities, offering insights into the creation of new NFTs, their associated costs, and the blockchain details.\n",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address involved in the NFT minting transaction.",
            "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
          },
          "wallet_label": {
            "type": "string",
            "description": "A more readable label or identifier for the wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique hash identifier of the NFT minting transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Specifies the type of transaction, in this case, NFT minting.",
            "example": "nft_mint"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network on which the minting transaction was conducted.",
            "example": "ethereum"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address of the transaction.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address of the transaction.",
            "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
          },
          "from_label": {
            "type": "string",
            "description": "A readable version of the 'from' wallet address.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to_label": {
            "type": "string",
            "description": "A readable version of the 'to' wallet address.",
            "example": "0xcfdb...6f8ff"
          },
          "thumbnail": {
            "type": "string",
            "description": "A thumbnail image URL of the NFT involved in the transaction.",
            "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "image": {
            "type": "string",
            "description": "A full image URL of the NFT.",
            "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The number of items of the NFT minted in the transaction.",
            "example": 1
          },
          "contract_address": {
            "type": "string",
            "description": "The blockchain address of the contract under which the NFT is minted.",
            "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
          },
          "contract_type": {
            "type": "string",
            "description": "The type of contract used for the NFT, such as ERC721.",
            "example": "ERC721"
          },
          "fee": {
            "type": "number",
            "format": "double",
            "description": "The transaction fee incurred for minting the NFT.",
            "example": 0.21357696
          },
          "nft_name": {
            "type": "string",
            "description": "The name of the NFT minted.",
            "example": "unknown"
          },
          "nft_symbol": {
            "type": "string",
            "description": "The symbol associated with the NFT.",
            "example": "unknown"
          },
          "nft_token_id": {
            "type": "string",
            "description": "The unique token ID of the minted NFT.",
            "example": 14
          },
          "currency_symbol": {
            "type": "string",
            "description": "The symbol of the currency used in the transaction (e.g., ETH, MATIC).",
            "example": "MATIC"
          },
          "type": {
            "type": "string",
            "description": "Indicates the contract standard of the NFT, such as ERC721.",
            "example": "ERC721"
          },
          "value": {
            "type": "number",
            "format": "double",
            "description": "The value of the transaction. For minting, this is often zero since the NFT is being created.",
            "example": 0
          },
          "value_usd": {
            "type": "number",
            "format": "double",
            "description": "The equivalent USD value of the transaction.",
            "example": 0
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "to",
          "from_label",
          "to_label",
          "thumbnail",
          "image",
          "amount",
          "contract_address",
          "contract_type",
          "fee",
          "nft_name",
          "nft_symbol",
          "nft_token_id",
          "currency_symbol",
          "type",
          "value",
          "value_usd"
        ]
      },
      "NftTrade": {
        "type": "object",
        "description": "This object encapsulates the details of a Non-Fungible Token (NFT) trading transaction. It includes comprehensive information such as wallet addresses, transaction hash, type of transaction (NFT trade), blockchain details, and timestamps. The structure provides specific data about the NFT trade, including the NFT's image, contract address, marketplace of the trade, and price details in both cryptocurrency and USD. Additionally, it includes information about the buyer, seller, and whether the transaction involved a bid being accepted. This structure is ideal for platforms that monitor and analyze NFT trading activities, offering detailed insights into each trade, its valuation, and the parties involved.\n",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address involved in the NFT trading transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A readable label for the wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique hash identifier of the NFT trading transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Specifies the type of transaction, in this case, NFT trading.",
            "example": "nft_trade"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network where the trading transaction occurred.",
            "example": "ethereum"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address of the transaction.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address of the transaction.",
            "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
          },
          "thumbnail": {
            "type": "string",
            "description": "A thumbnail image URL of the NFT involved in the transaction.",
            "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "image": {
            "type": "string",
            "description": "A full image URL of the NFT.",
            "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "action": {
            "type": "string",
            "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
            "example": "buy"
          },
          "contract": {
            "type": "string",
            "description": "The blockchain contract address associated with the NFT.",
            "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
          },
          "marketplace": {
            "type": "string",
            "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
            "example": "OpenSea"
          },
          "nft_address": {
            "type": "string",
            "description": "The blockchain address of the NFT involved in the trade.",
            "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
          },
          "nft_name": {
            "type": "string",
            "description": "The name of the NFT traded.",
            "example": "Gemesis"
          },
          "nft_symbol": {
            "type": "string",
            "description": "The symbol associated with the NFT.",
            "example": "OSP"
          },
          "nft_token_id": {
            "type": "string",
            "description": "The unique token ID of the NFT involved in the trade.",
            "example": 32507
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "The price at which the NFT was traded.",
            "example": 0.0151
          },
          "price_usd": {
            "type": "number",
            "format": "double",
            "description": "The equivalent USD value of the NFT trade.",
            "example": 32.911356
          },
          "profit": {
            "type": "number",
            "format": "double",
            "description": "The profit earned from the trade. This may be zero in some transactions.",
            "example": 0
          },
          "currency_symbol": {
            "type": "string",
            "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
            "example": "WETH"
          },
          "buyer": {
            "type": "string",
            "description": "The wallet address of the buyer in the trade."
          },
          "seller": {
            "type": "string",
            "description": "The wallet address of the seller in the trade."
          },
          "token": {
            "type": "string",
            "description": "The token type used in the transaction."
          },
          "first_interaction": {
            "type": "boolean",
            "description": "Indicates whether this was the first interaction between the buyer and seller."
          },
          "bid_accepted": {
            "type": "boolean",
            "description": "Specifies if the transaction involved a bid being accepted."
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "to",
          "thumbnail",
          "image",
          "action",
          "contract",
          "marketplace",
          "nft_address",
          "nft_name",
          "nft_symbol",
          "nft_token_id",
          "price",
          "price_usd",
          "profit",
          "currency_symbol",
          "buyer",
          "seller",
          "token",
          "first_interaction",
          "bid_accepted"
        ]
      },
      "NftTransfer": {
        "type": "object",
        "description": "This object type details a Non-Fungible Token (NFT) transfer transaction. It includes essential information such as wallet addresses, transaction hash, NFT details, and blockchain specifics. This structure is particularly useful for tracking NFT transfers, providing a complete overview of the transaction, including the involved parties (from and to addresses), the NFT's contract details, and the transaction's metadata such as timestamps and blockchain network. The object also includes the NFT's image, name, symbol, and token ID, offering a comprehensive view of the NFT being transferred.\n",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address involved in the NFT transfer transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A readable label for the wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique hash identifier of the NFT transfer transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Specifies the type of transaction, in this case, NFT transfer.",
            "example": "nft_transfer"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network where the transfer transaction occurred.",
            "example": "ethereum"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address of the transaction.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address of the transaction.",
            "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
          },
          "from_label": {
            "type": "string",
            "description": "A readable version of the 'from' wallet address.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to_label": {
            "type": "string",
            "description": "A readable version of the 'to' wallet address.",
            "example": "0xcfdb...6f8ff"
          },
          "thumbnail": {
            "type": "string",
            "description": "A thumbnail image URL of the NFT involved in the transaction.",
            "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "image": {
            "type": "string",
            "description": "A full image URL of the NFT.",
            "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "contract_address": {
            "type": "string",
            "description": "The blockchain address of the contract under which the NFT is registered.",
            "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
          },
          "contract_type": {
            "type": "string",
            "description": "The type of contract used for the NFT, such as ERC721.",
            "example": "ERC721"
          },
          "fee": {
            "type": "number",
            "format": "double",
            "description": "The transaction fee incurred for the transfer of the NFT.",
            "example": 0.21357696
          },
          "nft_name": {
            "type": "string",
            "description": "The name of the NFT being transferred.",
            "example": "unknown"
          },
          "nft_symbol": {
            "type": "string",
            "description": "The symbol associated with the NFT.",
            "example": "unknown"
          },
          "nft_token_id": {
            "type": "string",
            "description": "The unique token ID of the NFT involved in the transfer.",
            "example": 3
          },
          "type": {
            "type": "string",
            "description": "Indicates the contract standard of the NFT, such as ERC721.",
            "example": "ERC721"
          },
          "value": {
            "type": "number",
            "format": "double",
            "description": "The value of the NFT at the time of the transfer. This might be represented in the native cryptocurrency of the blockchain."
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "to",
          "from_label",
          "to_label",
          "thumbnail",
          "image",
          "contract_address",
          "contract_type",
          "fee",
          "nft_name",
          "nft_symbol",
          "nft_token_id",
          "type",
          "value"
        ]
      },
      "Swap": {
        "type": "object",
        "description": "This object type provides detailed information about a cryptocurrency swap transaction. It includes critical details such as wallet addresses, transaction hash, type of swap, blockchain specifics, and timestamps. The structure outlines the specifics of the assets involved in the swap, including their addresses, names, symbols, amounts, and USD values. It is particularly useful for platforms tracking and analyzing DeFi swap transactions, offering insights into the trade's details, such as the decentralized exchange (DEX) used, the tokens exchanged, and their respective values. This comprehensive structure is ideal for users or systems needing a detailed view of swap transactions on blockchain networks.\n",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address that initiated the swap transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A readable label for the wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique hash identifier of the swap transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Specifies the type of transaction, in this case, a token swap.",
            "example": "swap"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network where the swap transaction occurred.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "dex": {
            "type": "string",
            "description": "The decentralized exchange where the swap transaction took place.",
            "example": "Odos"
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address of the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address of the transaction (often the same as the 'from' address in swap transactions).",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "token0_address": {
            "type": "string",
            "description": "The address of the first token involved in the swap.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "token0_amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the first token involved in the swap.",
            "example": 25
          },
          "token0_amount_usd": {
            "type": "number",
            "format": "double",
            "description": "The USD value of the first token amount at the time of the swap.",
            "example": 25
          },
          "token0_name": {
            "type": "string",
            "description": "The name of the first token involved in the swap.",
            "example": "USD Coin"
          },
          "token0_price_usd": {
            "type": "number",
            "format": "double",
            "description": "The price of the first token in USD.",
            "example": 1
          },
          "token0_symbol": {
            "type": "string",
            "description": "The symbol of the first token involved in the swap.",
            "example": "USDC"
          },
          "token0_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          },
          "token1_address": {
            "type": "string",
            "description": "The address of the second token involved in the swap.",
            "example": "0x0000000000000000000000000000000000000000"
          },
          "token1_amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the second token involved in the swap.",
            "example": 0.011715203954716423
          },
          "token1_amount_usd": {
            "type": "number",
            "format": "double",
            "description": "The USD value of the second token amount at the time of the swap.",
            "example": 25
          },
          "token1_name": {
            "type": "string",
            "description": "The name of the second token involved in the swap.",
            "example": "Ethereum"
          },
          "token1_price_usd": {
            "type": "number",
            "format": "double",
            "description": "The price of the second token in USD.",
            "example": 2133.979066573165
          },
          "token1_symbol": {
            "type": "string",
            "description": "The symbol of the second token involved in the swap.",
            "example": "ETH"
          },
          "token1_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          },
          "first_interaction": {
            "type": "boolean",
            "description": "Indicates whether this transaction was the first interaction between the involved wallet addresses.",
            "example": "falsed"
          },
          "token_market_cap": {
            "type": "object",
            "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
            "properties": {
              "token_address": {
                "type": "string",
                "description": "The address of the token.",
                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
              },
              "market_cap": {
                "type": "number",
                "format": "double",
                "description": "The market capitalization of the token.",
                "example": 28567534.5964843
              },
              "liquidity": {
                "type": "number",
                "format": "double",
                "description": "The liquidity of the token.",
                "example": 832322.8431867727
              }
            },
            "required": [
              "token_address",
              "market_cap",
              "liquidity"
            ]
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "dex",
          "from",
          "to",
          "token0_address",
          "token0_amount",
          "token0_amount_usd",
          "token0_name",
          "token0_price_usd",
          "token0_symbol",
          "token0_icon_link",
          "token1_address",
          "token1_amount",
          "token1_amount_usd",
          "token1_name",
          "token1_price_usd",
          "token1_symbol",
          "token1_icon_link",
          "first_interaction"
        ]
      },
      "Transfer": {
        "type": "object",
        "description": "This object represents the details of a cryptocurrency transfer transaction. It includes essential information such as wallet addresses, transaction hash, type of transfer, blockchain details, and timestamps. The structure is particularly useful for tracking standard token transfers on blockchain networks, providing a comprehensive overview of the transaction, including the amount transferred in USD, the token's contract address, its name, and symbol. This detailed structure is ideal for users or systems requiring a thorough view of token transfer transactions, including the specifics of the token involved and the value of the transaction.\n",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address involved in the transfer transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A readable label for the wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique hash identifier of the transfer transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Specifies the type of transaction, in this case, a token transfer.",
            "example": "transfer"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network where the transfer transaction occurred.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address of the transaction.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address of the transaction.",
            "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
          },
          "from_label": {
            "type": "string",
            "description": "A readable version of the 'from' wallet address.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to_label": {
            "type": "string",
            "description": "A readable version of the 'to' wallet address.",
            "example": "0xcfdb...6f8ff"
          },
          "amount_usd": {
            "type": "number",
            "format": "double",
            "description": "The USD value of the amount transferred in the transaction.",
            "example": 117.412291
          },
          "contract_address": {
            "type": "string",
            "description": "The blockchain address of the contract under which the token is registered.",
            "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
          },
          "name": {
            "type": "string",
            "description": "The name of the token being transferred.",
            "example": "Tether USD"
          },
          "symbol": {
            "type": "string",
            "description": "The symbol of the token being transferred.",
            "example": "USDT"
          },
          "token_price_usd": {
            "type": "number",
            "format": "double",
            "description": "The price of the token in USD at the time of the transaction.",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "Indicates the contract standard of the token, such as ERC20.",
            "example": "ERC20"
          },
          "token_icon_link": {
            "type": "string",
            "description": "A URL link to the token's icon image.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          },
          "token_market_cap": {
            "type": "object",
            "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
            "properties": {
              "token_address": {
                "type": "string",
                "description": "The address of the token.",
                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
              },
              "market_cap": {
                "type": "number",
                "format": "double",
                "description": "The market capitalization of the token.",
                "example": 28567534.5964843
              },
              "liquidity": {
                "type": "number",
                "format": "double",
                "description": "The liquidity of the token.",
                "example": 832322.8431867727
              }
            },
            "required": [
              "token_address",
              "market_cap",
              "liquidity"
            ]
          },
          "mempool": {
            "type": "boolean",
            "description": "For Bitcoin transactions, this field indicates whether the transaction is in the mempool."
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "to",
          "from_label",
          "to_label",
          "amount_usd",
          "contract_address",
          "name",
          "symbol",
          "token_price_usd",
          "type",
          "token_icon_link"
        ]
      },
      "ContractInteraction": {
        "type": "object",
        "description": "This object provides a structure for representing a contract interaction event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "contract_address": {
            "type": "string",
            "description": "The address of the smart contract involved in the interaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "contract_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the smart contract.",
            "example": "Uniswap V3"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "to",
          "contract_address",
          "contract_label"
        ]
      },
      "Wrap": {
        "type": "object",
        "description": "This object provides a structure for representing a wrap event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "dex": {
            "type": "string",
            "description": "The decentralized exchange where the wrap transaction occurred.",
            "example": "Uniswap"
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "action": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "description": "The amount of tokens wrapped in the transaction.",
            "example": 100
          },
          "amount_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the wrapped tokens.",
            "example": "100.0"
          },
          "contract_address": {
            "type": "string",
            "description": "The address of the smart contract involved in the interaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "name": {
            "type": "string",
            "description": "The name of the token wrapped in the transaction.",
            "example": "Wrapped Ether"
          },
          "symbol": {
            "type": "string",
            "description": "The symbol of the token wrapped in the transaction.",
            "example": "WETH"
          },
          "token_price_usd": {
            "type": "number",
            "description": "The price of the token in USD at the time of the transaction.",
            "example": "100.0"
          },
          "token_type": {
            "type": "string",
            "description": "The type of token wrapped in the transaction.",
            "example": "ERC20"
          },
          "token_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "dex",
          "from",
          "to",
          "action",
          "amount",
          "amount_usd",
          "contract_address",
          "name",
          "symbol",
          "token_price_usd",
          "token_type",
          "token_icon_link"
        ]
      },
      "SudoPool": {
        "type": "object",
        "description": "This object provides a structure for representing a Sudo Pool event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "dex": {
            "type": "string",
            "description": "The decentralized exchange where the wrap transaction occurred.",
            "example": "Uniswap"
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "nft_address": {
            "type": "string",
            "description": "The address of the NFT contract involved in the interaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "nft_amount": {
            "type": "integer",
            "description": "The amount of NFTs involved in the transaction.",
            "example": 1
          },
          "nft_price": {
            "type": "number",
            "description": "The price of the NFT in the transaction.",
            "example": 100
          },
          "nft_symbol": {
            "type": "string",
            "description": "The symbol of the NFT in the transaction.",
            "example": "NFT"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "token0_address": {
            "type": "string",
            "description": "The address of the first token in the LP pair.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "token0_amount": {
            "type": "number",
            "description": "The amount of the first token in the LP pair.",
            "example": 100
          },
          "token0_amount_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the first token in the LP pair.",
            "example": 100
          },
          "token0_name": {
            "type": "string",
            "description": "The name of the first token in the LP pair.",
            "example": "Wrapped Ether"
          },
          "token0_price_usd": {
            "type": "number",
            "description": "The price of the first token in the LP pair in USD.",
            "example": 100
          },
          "token0_symbol": {
            "type": "string",
            "description": "The symbol of the first token in the LP pair.",
            "example": "WETH"
          },
          "token0_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "nft_address",
          "nft_amount",
          "nft_price",
          "nft_symbol",
          "token0_address",
          "token0_amount",
          "token0_amount_usd",
          "token0_name",
          "token0_price_usd",
          "token0_symbol",
          "from",
          "to",
          "token0_icon_link"
        ]
      },
      "Reward": {
        "type": "object",
        "description": "This object provides a structure for representing a reward event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "address": {
            "type": "string",
            "description": "The address of the token involved in the transaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "amount": {
            "type": "number",
            "description": "The amount of tokens involved in the transaction.",
            "example": 100
          },
          "amount_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the tokens involved in the transaction.",
            "example": 100
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "name": {
            "type": "string",
            "description": "The name of the token involved in the transaction.",
            "example": "Wrapped Ether"
          },
          "price_usd": {
            "type": "number",
            "description": "The price of the token in USD.",
            "example": 100
          },
          "symbol": {
            "type": "string",
            "description": "The symbol of the token involved in the transaction.",
            "example": "WETH"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "address",
          "amount",
          "amount_usd",
          "from",
          "name",
          "price_usd",
          "symbol"
        ]
      },
      "Staking": {
        "type": "object",
        "description": "This object provides a structure for representing a staking event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "from_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the originating wallet.",
            "example": "Alice"
          },
          "to_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the destination wallet.",
            "example": "Bob"
          },
          "amount": {
            "type": "number",
            "description": "The amount of tokens staked in the transaction.",
            "example": 100
          },
          "amount_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the staked tokens.",
            "example": 100
          },
          "token_price_usd": {
            "type": "number",
            "description": "The price of the token in USD.",
            "example": 100
          },
          "contract_address": {
            "type": "string",
            "description": "The address of the smart contract involved in the interaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "symbol": {
            "type": "string",
            "description": "The symbol of the token staked in the transaction.",
            "example": "WETH"
          },
          "name": {
            "type": "string",
            "description": "The name of the token staked in the transaction.",
            "example": "Wrapped Ether"
          },
          "action": {
            "type": "string",
            "description": "The action taken in the staking transaction.",
            "example": "stake"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "to",
          "from_label",
          "to_label",
          "amount",
          "amount_usd",
          "token_price_usd",
          "contract_address",
          "symbol",
          "name",
          "action"
        ]
      },
      "Perp": {
        "type": "object",
        "description": "This object provides a structure for representing a Perpetual event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "action": {
            "type": "string",
            "description": "The action taken in the Perpetual event.",
            "example": "buy"
          },
          "amount_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the tokens involved in the transaction.",
            "example": 100
          },
          "average_price": {
            "type": "number",
            "description": "The average price of the tokens involved in the transaction.",
            "example": 100
          },
          "base_token_address": {
            "type": "string",
            "description": "The address of the base token involved in the transaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "base_token_amount": {
            "type": "number",
            "description": "The amount of base tokens involved in the transaction.",
            "example": 100
          },
          "base_token_symbol": {
            "type": "string",
            "description": "The symbol of the base token involved in the transaction.",
            "example": "ETH"
          },
          "dex": {
            "type": "string",
            "description": "The decentralized exchange where the Perpetual transaction occurred.",
            "example": "Uniswap"
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "liquidation": {
            "type": "boolean",
            "description": "Indicates whether the transaction was a liquidation.",
            "example": false
          },
          "liquidation_price": {
            "type": "number",
            "description": "The price at which the liquidation occurred.",
            "example": 100
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "trade_direction": {
            "type": "string",
            "description": "The direction of the trade in the Perpetual transaction.",
            "example": "long"
          },
          "perp_details": {
            "type": "string",
            "description": "Additional details about the Perpetual transaction.",
            "example": "details"
          },
          "token0_address": {
            "type": "string",
            "description": "The address of the first token in the LP pair.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "token0_amount": {
            "type": "number",
            "description": "The amount of the first token in the LP pair.",
            "example": 100
          },
          "token0_amount_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the first token in the LP pair.",
            "example": 100
          },
          "token0_name": {
            "type": "string",
            "description": "The name of the first token in the LP pair.",
            "example": "Wrapped Ether"
          },
          "token0_price_usd": {
            "type": "number",
            "description": "The price of the first token in the LP pair in USD.",
            "example": 100
          },
          "token0_symbol": {
            "type": "string",
            "description": "The symbol of the first token in the LP pair.",
            "example": "WETH"
          },
          "token0_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          },
          "token1_address": {
            "type": "string",
            "description": "The address of the second token in the LP pair.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "token1_amount": {
            "type": "number",
            "description": "The amount of the second token in the LP pair.",
            "example": 100
          },
          "token1_amount_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the second token in the LP pair.",
            "example": 100
          },
          "token1_name": {
            "type": "string",
            "description": "The name of the second token in the LP pair.",
            "example": "Wrapped Ether"
          },
          "token1_price_usd": {
            "type": "number",
            "description": "The price of the second token in the LP pair in USD.",
            "example": 100
          },
          "token1_symbol": {
            "type": "string",
            "description": "The symbol of the second token in the LP pair.",
            "example": "WETH"
          },
          "token1_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          },
          "realized_pnl": {
            "type": "number",
            "description": "The realized profit and loss of the Perpetual transaction.",
            "example": 100
          },
          "is_nft_perp": {
            "type": "boolean",
            "description": "Indicates whether the Perpetual transaction involves an NFT.",
            "example": false
          },
          "position_size": {
            "type": "number",
            "description": "The size of the position in the Perpetual transaction.",
            "example": 100
          },
          "position_size_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the position size.",
            "example": 100
          },
          "leverage": {
            "type": "number",
            "description": "The leverage used in the Perpetual transaction.",
            "example": 100
          },
          "unrealized_pnl": {
            "type": "number",
            "description": "The unrealized profit and loss of the Perpetual transaction.",
            "example": 100
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "action",
          "amount_usd",
          "average_price",
          "base_token_address",
          "base_token_amount",
          "base_token_symbol",
          "dex",
          "from",
          "liquidation",
          "liquidation_price",
          "to",
          "trade_direction",
          "perp_details",
          "token0_address",
          "token0_amount",
          "token0_amount_usd",
          "token0_name",
          "token0_price_usd",
          "token0_symbol",
          "token0_icon_link",
          "token1_address",
          "token1_amount",
          "token1_amount_usd",
          "token1_name",
          "token1_price_usd",
          "token1_symbol",
          "token1_icon_link",
          "realized_pnl",
          "is_nft_perp"
        ]
      },
      "Flashloan": {
        "type": "object",
        "description": "This object provides a structure for representing a flashloan event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "address": {
            "type": "string",
            "description": "The address of the token involved in the transaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "amount": {
            "type": "number",
            "description": "The amount of tokens involved in the transaction.",
            "example": 100
          },
          "amount_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the tokens involved in the transaction.",
            "example": 100
          },
          "dex": {
            "type": "string",
            "description": "The decentralized exchange (DEX) where the flashloan transaction took place.",
            "example": "Uniswap"
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "health_factor": {
            "type": "number",
            "description": "The health factor of the wallet after the flashloan transaction.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the token involved in the transaction.",
            "example": "Wrapped Ether"
          },
          "platform": {
            "type": "string",
            "description": "The platform where the flashloan transaction took place.",
            "example": "Aave"
          },
          "price_usd": {
            "type": "number",
            "description": "The price of the token in USD.",
            "example": 100
          },
          "symbol": {
            "type": "string",
            "description": "The symbol of the token involved in the transaction.",
            "example": "ETH"
          },
          "token_icon_link": {
            "type": "string",
            "description": "A link to the icon of the token involved in the transaction.",
            "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "address",
          "amount",
          "amount_usd",
          "dex",
          "from",
          "health_factor",
          "name",
          "platform",
          "price_usd",
          "symbol",
          "token_icon_link"
        ]
      },
      "ContractCreation": {
        "type": "object",
        "description": "This object provides a structure for representing a contract creation event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "amount_usd": {
            "type": "number",
            "description": "The equivalent amount in USD of the wrapped tokens.",
            "example": "100.0"
          },
          "contract_address": {
            "type": "string",
            "description": "The address of the smart contract involved in the interaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "from_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the originating wallet.",
            "example": "Alice"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "amount_usd",
          "contract_address",
          "from",
          "from_label"
        ]
      },
      "NftLiquidation": {
        "type": "object",
        "description": "This object provides a structure for representing a NFT liquidation event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "contract_address": {
            "type": "string",
            "description": "The address of the NFT contract involved in the interaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "currency_address": {
            "type": "string",
            "description": "The address of the currency involved in the transaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "currency_symbol": {
            "type": "string",
            "description": "The symbol of the currency involved in the transaction.",
            "example": "ETH"
          },
          "dex": {
            "type": "string",
            "description": "The decentralized exchange where the wrap transaction occurred.",
            "example": "Uniswap"
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "nft_address": {
            "type": "string",
            "description": "The address of the NFT contract involved in the interaction.",
            "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
          },
          "nft_name": {
            "type": "string",
            "description": "The name of the NFT in the transaction.",
            "example": "NFT"
          },
          "nft_symbol": {
            "type": "string",
            "description": "The symbol of the NFT in the transaction.",
            "example": "NFT"
          },
          "platform": {
            "type": "string",
            "description": "The platform where the flashloan transaction took place.",
            "example": "Aave"
          },
          "price": {
            "type": "number",
            "description": "The price of the NFT in the transaction.",
            "example": 100
          },
          "price_usd": {
            "type": "number",
            "description": "The price of the NFT in USD.",
            "example": 100
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "token_id": {
            "type": "string",
            "description": "The unique identifier of the NFT in the transaction.",
            "example": "1"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "contract_address",
          "currency_address",
          "currency_symbol",
          "dex",
          "from",
          "nft_address",
          "nft_name",
          "nft_symbol",
          "platform",
          "price",
          "price_usd",
          "to",
          "token_id"
        ]
      },
      "Option": {
        "type": "object",
        "description": "This object provides a structure for representing an option event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address participating in the LP transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
            "example": "vitalik.eth"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique transaction hash identifying this specific LP transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
            "example": "lp"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
            "example": "optimism"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "action": {
            "type": "string",
            "description": "The action taken in the option event.",
            "example": "buy"
          },
          "amount": {
            "type": "number",
            "description": "The amount of tokens involved in the transaction.",
            "example": 100
          },
          "asset": {
            "type": "string",
            "description": "The asset involved in the option event.",
            "example": "ETH"
          },
          "dex": {
            "type": "string",
            "description": "The decentralized exchange (DEX) where the option event took place.",
            "example": "Uniswap"
          },
          "direction": {
            "type": "string",
            "description": "The direction of the option event.",
            "example": "call"
          },
          "expiry": {
            "type": "string",
            "description": "The expiry date of the option.",
            "example": "2022-12-31"
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "option_price_usd": {
            "type": "number",
            "description": "The price of the option in USD.",
            "example": 100
          },
          "position_status": {
            "type": "string",
            "description": "The status of the option position.",
            "example": "open"
          },
          "spot_price_usd": {
            "type": "number",
            "description": "The spot price of the asset in USD.",
            "example": 100
          },
          "status": {
            "type": "string",
            "description": "The status of the option event.",
            "example": "active"
          },
          "strike_price_usd": {
            "type": "number",
            "description": "The strike price of the option in USD.",
            "example": 100
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address for the transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "type": {
            "type": "string",
            "description": "The type of option event.",
            "example": "call"
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "action",
          "amount",
          "asset",
          "dex",
          "direction",
          "expiry",
          "from",
          "option_price_usd",
          "position_status",
          "spot_price_usd",
          "status",
          "strike_price_usd",
          "to",
          "type"
        ]
      },
      "NftSweep": {
        "type": "object",
        "description": "This object provides a structure for representing a NFT sweep event on the blockchain.",
        "properties": {
          "wallet": {
            "type": "string",
            "description": "The wallet address involved in the NFT trading transaction.",
            "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
          },
          "wallet_label": {
            "type": "string",
            "description": "A readable label for the wallet address.",
            "example": "0xa4c8...f9457d"
          },
          "tx_hash": {
            "type": "string",
            "description": "The unique hash identifier of the NFT trading transaction.",
            "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
          },
          "tx_type": {
            "type": "string",
            "description": "Specifies the type of transaction, in this case, NFT trading.",
            "example": "nft_trade"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain network where the trading transaction occurred.",
            "example": "ethereum"
          },
          "index": {
            "type": "integer",
            "description": "A numerical index or identifier for the transaction.",
            "example": 10
          },
          "timestamp": {
            "type": "integer",
            "description": "The timestamp marking when the transaction was executed.",
            "example": 1702899395
          },
          "block": {
            "type": "integer",
            "description": "The block number on the blockchain where this transaction is recorded.",
            "example": 113650309
          },
          "from": {
            "type": "string",
            "description": "The originating wallet address of the transaction.",
            "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
          },
          "to": {
            "type": "string",
            "description": "The destination wallet address of the transaction.",
            "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
          },
          "thumbnail": {
            "type": "string",
            "description": "A thumbnail image URL of the NFT involved in the transaction.",
            "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "image": {
            "type": "string",
            "description": "A full image URL of the NFT.",
            "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
          },
          "action": {
            "type": "string",
            "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
            "example": "buy"
          },
          "contract": {
            "type": "string",
            "description": "The blockchain contract address associated with the NFT.",
            "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
          },
          "marketplace": {
            "type": "string",
            "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
            "example": "OpenSea"
          },
          "nft_address": {
            "type": "string",
            "description": "The blockchain address of the NFT involved in the trade.",
            "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
          },
          "nft_name": {
            "type": "string",
            "description": "The name of the NFT traded.",
            "example": "Gemesis"
          },
          "nft_symbol": {
            "type": "string",
            "description": "The symbol associated with the NFT.",
            "example": "OSP"
          },
          "nft_token_id": {
            "type": "string",
            "description": "The unique token ID of the NFT involved in the trade.",
            "example": 32507
          },
          "price": {
            "type": "number",
            "format": "double",
            "description": "The price at which the NFT was traded.",
            "example": 0.0151
          },
          "price_usd": {
            "type": "number",
            "format": "double",
            "description": "The equivalent USD value of the NFT trade.",
            "example": 32.911356
          },
          "profit": {
            "type": "number",
            "format": "double",
            "description": "The profit earned from the trade. This may be zero in some transactions.",
            "example": 0
          },
          "currency_symbol": {
            "type": "string",
            "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
            "example": "WETH"
          },
          "buyer": {
            "type": "string",
            "description": "The wallet address of the buyer in the trade."
          },
          "seller": {
            "type": "string",
            "description": "The wallet address of the seller in the trade."
          },
          "token": {
            "type": "string",
            "description": "The token type used in the transaction."
          },
          "first_interaction": {
            "type": "boolean",
            "description": "Indicates whether this was the first interaction between the buyer and seller."
          },
          "bid_accepted": {
            "type": "boolean",
            "description": "Specifies if the transaction involved a bid being accepted."
          }
        },
        "required": [
          "wallet",
          "wallet_label",
          "tx_hash",
          "tx_type",
          "chain",
          "index",
          "timestamp",
          "block",
          "from",
          "to",
          "thumbnail",
          "image",
          "action",
          "contract",
          "marketplace",
          "nft_address",
          "nft_name",
          "nft_symbol",
          "nft_token_id",
          "price",
          "price_usd",
          "profit",
          "currency_symbol",
          "buyer",
          "seller",
          "token",
          "first_interaction",
          "bid_accepted"
        ]
      }
    },
    "responses": {
      "FeedResponse": {
        "description": "Successfull Feed response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The response schema for the /v1/feed endpoint.",
              "properties": {
                "status": {
                  "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                  "type": "string",
                  "enum": [
                    "ok",
                    "error"
                  ]
                },
                "data": {
                  "type": "object",
                  "description": "Contains the main data of the response, including a list of transaction items and pagination details.",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "An array of transaction items, each conforming to one of several types like Swap, LP, Transfer, Lending, etc. This array can contain a mix of these types.",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "description": "This object type provides detailed information about a cryptocurrency swap transaction. It includes critical details such as wallet addresses, transaction hash, type of swap, blockchain specifics, and timestamps. The structure outlines the specifics of the assets involved in the swap, including their addresses, names, symbols, amounts, and USD values. It is particularly useful for platforms tracking and analyzing DeFi swap transactions, offering insights into the trade's details, such as the decentralized exchange (DEX) used, the tokens exchanged, and their respective values. This comprehensive structure is ideal for users or systems needing a detailed view of swap transactions on blockchain networks.\n",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address that initiated the swap transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A readable label for the wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique hash identifier of the swap transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Specifies the type of transaction, in this case, a token swap.",
                                "example": "swap"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network where the swap transaction occurred.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "dex": {
                                "type": "string",
                                "description": "The decentralized exchange where the swap transaction took place.",
                                "example": "Odos"
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address of the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address of the transaction (often the same as the 'from' address in swap transactions).",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "token0_address": {
                                "type": "string",
                                "description": "The address of the first token involved in the swap.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "token0_amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The amount of the first token involved in the swap.",
                                "example": 25
                              },
                              "token0_amount_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The USD value of the first token amount at the time of the swap.",
                                "example": 25
                              },
                              "token0_name": {
                                "type": "string",
                                "description": "The name of the first token involved in the swap.",
                                "example": "USD Coin"
                              },
                              "token0_price_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the first token in USD.",
                                "example": 1
                              },
                              "token0_symbol": {
                                "type": "string",
                                "description": "The symbol of the first token involved in the swap.",
                                "example": "USDC"
                              },
                              "token0_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              },
                              "token1_address": {
                                "type": "string",
                                "description": "The address of the second token involved in the swap.",
                                "example": "0x0000000000000000000000000000000000000000"
                              },
                              "token1_amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The amount of the second token involved in the swap.",
                                "example": 0.011715203954716423
                              },
                              "token1_amount_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The USD value of the second token amount at the time of the swap.",
                                "example": 25
                              },
                              "token1_name": {
                                "type": "string",
                                "description": "The name of the second token involved in the swap.",
                                "example": "Ethereum"
                              },
                              "token1_price_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the second token in USD.",
                                "example": 2133.979066573165
                              },
                              "token1_symbol": {
                                "type": "string",
                                "description": "The symbol of the second token involved in the swap.",
                                "example": "ETH"
                              },
                              "token1_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              },
                              "first_interaction": {
                                "type": "boolean",
                                "description": "Indicates whether this transaction was the first interaction between the involved wallet addresses.",
                                "example": "falsed"
                              },
                              "token_market_cap": {
                                "type": "object",
                                "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                                "properties": {
                                  "token_address": {
                                    "type": "string",
                                    "description": "The address of the token.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "market_cap": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The market capitalization of the token.",
                                    "example": 28567534.5964843
                                  },
                                  "liquidity": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The liquidity of the token.",
                                    "example": 832322.8431867727
                                  }
                                },
                                "required": [
                                  "token_address",
                                  "market_cap",
                                  "liquidity"
                                ]
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "dex",
                              "from",
                              "to",
                              "token0_address",
                              "token0_amount",
                              "token0_amount_usd",
                              "token0_name",
                              "token0_price_usd",
                              "token0_symbol",
                              "token0_icon_link",
                              "token1_address",
                              "token1_amount",
                              "token1_amount_usd",
                              "token1_name",
                              "token1_price_usd",
                              "token1_symbol",
                              "token1_icon_link",
                              "first_interaction"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a comprehensive overview of a liquidity pool (LP) transaction on a decentralized exchange (DEX). It includes details about the wallet involved, the transaction hash, type, and associated blockchain, as well as specific information about the assets involved in the transaction. This structure is particularly useful for platforms that track and analyze liquidity pool actions, such as adding or removing liquidity, offering insights into the specifics of each action, including the assets involved, their amounts in both the native token and USD value, and their respective prices in USD.\n",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "dex": {
                                "type": "string",
                                "description": "The name of the decentralized exchange where the LP transaction occurred.",
                                "example": "Odos"
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the nature of the LP transaction, such as 'add' or 'remove'.",
                                "example": "add"
                              },
                              "token0_address": {
                                "type": "string",
                                "description": "The address of the first token involved in the LP transaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "token0_amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The amount of the first token involved in the transaction.",
                                "example": 25
                              },
                              "token0_amount_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The USD value of the first token amount at the time of the transaction.",
                                "example": 25
                              },
                              "token0_name": {
                                "type": "string",
                                "description": "The name of the first token involved in the transaction.",
                                "example": "USD Coin"
                              },
                              "token0_price_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the first token in USD.",
                                "example": 1
                              },
                              "token0_symbol": {
                                "type": "string",
                                "description": "The symbol of the first token involved in the transaction.",
                                "example": "USDC"
                              },
                              "token0_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              },
                              "token1_address": {
                                "type": "string",
                                "description": "The address of the second token involved in the LP transaction.",
                                "example": "0x0000000000000000000000000000000000000000"
                              },
                              "token1_amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The amount of the second token involved in the transaction.",
                                "example": 25
                              },
                              "token1_amount_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The USD value of the second token amount at the time of the transaction.",
                                "example": 25
                              },
                              "token1_name": {
                                "type": "string",
                                "description": "The name of the second token involved in the transaction.",
                                "example": "USD Coin"
                              },
                              "token1_price_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the second token in USD.",
                                "example": 1
                              },
                              "token1_symbol": {
                                "type": "string",
                                "description": "The symbol of the second token involved in the transaction.",
                                "example": "USDC"
                              },
                              "token1_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              },
                              "lower_bound": {
                                "type": "number",
                                "format": "double",
                                "description": "Indicates the lower bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                                "example": 0
                              },
                              "upper_bound": {
                                "type": "number",
                                "format": "double",
                                "description": "Indicates the upper bound of the price range for the LP position, relevant in certain types of liquidity pools.",
                                "example": 0
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "dex",
                              "from",
                              "type",
                              "token0_address",
                              "token0_amount",
                              "token0_amount_usd",
                              "token0_name",
                              "token0_price_usd",
                              "token0_symbol",
                              "token0_icon_link",
                              "token1_address",
                              "token1_amount",
                              "token1_amount_usd",
                              "token1_name",
                              "token1_price_usd",
                              "token1_symbol",
                              "token1_icon_link",
                              "lower_bound",
                              "upper_bound"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object represents the details of a cryptocurrency transfer transaction. It includes essential information such as wallet addresses, transaction hash, type of transfer, blockchain details, and timestamps. The structure is particularly useful for tracking standard token transfers on blockchain networks, providing a comprehensive overview of the transaction, including the amount transferred in USD, the token's contract address, its name, and symbol. This detailed structure is ideal for users or systems requiring a thorough view of token transfer transactions, including the specifics of the token involved and the value of the transaction.\n",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address involved in the transfer transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A readable label for the wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique hash identifier of the transfer transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Specifies the type of transaction, in this case, a token transfer.",
                                "example": "transfer"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network where the transfer transaction occurred.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address of the transaction.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address of the transaction.",
                                "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                              },
                              "from_label": {
                                "type": "string",
                                "description": "A readable version of the 'from' wallet address.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to_label": {
                                "type": "string",
                                "description": "A readable version of the 'to' wallet address.",
                                "example": "0xcfdb...6f8ff"
                              },
                              "amount_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The USD value of the amount transferred in the transaction.",
                                "example": 117.412291
                              },
                              "contract_address": {
                                "type": "string",
                                "description": "The blockchain address of the contract under which the token is registered.",
                                "example": "0xdac17f958d2ee523a2206206994597c13d831ec7"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the token being transferred.",
                                "example": "Tether USD"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The symbol of the token being transferred.",
                                "example": "USDT"
                              },
                              "token_price_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the token in USD at the time of the transaction.",
                                "example": 1
                              },
                              "type": {
                                "type": "string",
                                "description": "Indicates the contract standard of the token, such as ERC20.",
                                "example": "ERC20"
                              },
                              "token_icon_link": {
                                "type": "string",
                                "description": "A URL link to the token's icon image.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              },
                              "token_market_cap": {
                                "type": "object",
                                "description": "Contains the market capitalization and liquidity details of the tokens involved in the swap transaction.",
                                "properties": {
                                  "token_address": {
                                    "type": "string",
                                    "description": "The address of the token.",
                                    "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                                  },
                                  "market_cap": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The market capitalization of the token.",
                                    "example": 28567534.5964843
                                  },
                                  "liquidity": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The liquidity of the token.",
                                    "example": 832322.8431867727
                                  }
                                },
                                "required": [
                                  "token_address",
                                  "market_cap",
                                  "liquidity"
                                ]
                              },
                              "mempool": {
                                "type": "boolean",
                                "description": "For Bitcoin transactions, this field indicates whether the transaction is in the mempool."
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "to",
                              "from_label",
                              "to_label",
                              "amount_usd",
                              "contract_address",
                              "name",
                              "symbol",
                              "token_price_usd",
                              "type",
                              "token_icon_link"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object represents the data structure for a specific transaction related to decentralized finance (DeFi) activities such as lending, borrowing, and other related actions. It provides detailed information about the transaction, including wallet addresses, transaction hash, type of transaction, chain details, and financial figures. This structure is particularly useful for platforms tracking DeFi activities, offering insights into the specifics of each transaction, such as the asset involved, the amount, the health factor in lending platforms, and the price of the asset in USD at the time of the transaction.\n",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address associated with the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A more readable, shortened version of the wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique identifier of the transaction, represented as a hash.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Specifies the type of DeFi transaction, such as lending, borrowing, etc.",
                                "example": "lending"
                              },
                              "chain": {
                                "type": "string",
                                "description": "Indicates the blockchain network on which the transaction occurred.",
                                "example": "base"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A sequential index or identifier for the transaction within a particular dataset or list.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number in the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "from_label": {
                                "type": "string",
                                "description": "A readable, abbreviated form of the 'from' wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "action": {
                                "type": "string",
                                "description": "Describes the action taken in the transaction, such as 'Repaid' in a lending scenario.",
                                "example": "Repaid"
                              },
                              "address": {
                                "type": "string",
                                "description": "The smart contract address involved in the transaction.",
                                "example": "0x4200000000000000000000000000000000000006"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The amount of the asset involved in the transaction.",
                                "example": 50.007801987424834
                              },
                              "amount_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The equivalent value of the transaction amount in USD.",
                                "example": 106652.63945462069
                              },
                              "dex": {
                                "type": "string",
                                "description": "The decentralized exchange or platform where the transaction occurred, such as AaveV2.",
                                "example": "AaveV2"
                              },
                              "health_factor": {
                                "type": "number",
                                "format": "double",
                                "description": "A metric specific to lending platforms, indicating the health of the loan or position.",
                                "example": 1000
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the asset involved in the transaction.",
                                "example": "Wrapped Ether"
                              },
                              "platform": {
                                "type": "string",
                                "description": "The DeFi platform associated with the transaction, like AaveV3.",
                                "example": "AaveV3"
                              },
                              "price_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the asset in USD at the time of the transaction.",
                                "example": 2132.72
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The symbol of the asset involved in the transaction.",
                                "example": "WETH"
                              },
                              "token_icon_link": {
                                "type": "string",
                                "description": "A URL link to the icon image of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "from_label",
                              "action",
                              "address",
                              "amount",
                              "amount_usd",
                              "dex",
                              "health_factor",
                              "name",
                              "platform",
                              "price_usd",
                              "symbol",
                              "token_icon_link"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object represents the data structure for a Non-Fungible Token (NFT) minting transaction. It provides detailed information about the transaction, including wallet addresses, transaction hash, the type of NFT transaction (in this case, minting), and blockchain specifics. Additionally, it includes detailed information about the NFT minted, such as its image, contract address, token ID, and associated fees. This structure is particularly useful for platforms tracking NFT minting activities, offering insights into the creation of new NFTs, their associated costs, and the blockchain details.\n",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address involved in the NFT minting transaction.",
                                "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A more readable label or identifier for the wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique hash identifier of the NFT minting transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Specifies the type of transaction, in this case, NFT minting.",
                                "example": "nft_mint"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network on which the minting transaction was conducted.",
                                "example": "ethereum"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address of the transaction.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address of the transaction.",
                                "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                              },
                              "from_label": {
                                "type": "string",
                                "description": "A readable version of the 'from' wallet address.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to_label": {
                                "type": "string",
                                "description": "A readable version of the 'to' wallet address.",
                                "example": "0xcfdb...6f8ff"
                              },
                              "thumbnail": {
                                "type": "string",
                                "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "image": {
                                "type": "string",
                                "description": "A full image URL of the NFT.",
                                "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The number of items of the NFT minted in the transaction.",
                                "example": 1
                              },
                              "contract_address": {
                                "type": "string",
                                "description": "The blockchain address of the contract under which the NFT is minted.",
                                "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                              },
                              "contract_type": {
                                "type": "string",
                                "description": "The type of contract used for the NFT, such as ERC721.",
                                "example": "ERC721"
                              },
                              "fee": {
                                "type": "number",
                                "format": "double",
                                "description": "The transaction fee incurred for minting the NFT.",
                                "example": 0.21357696
                              },
                              "nft_name": {
                                "type": "string",
                                "description": "The name of the NFT minted.",
                                "example": "unknown"
                              },
                              "nft_symbol": {
                                "type": "string",
                                "description": "The symbol associated with the NFT.",
                                "example": "unknown"
                              },
                              "nft_token_id": {
                                "type": "string",
                                "description": "The unique token ID of the minted NFT.",
                                "example": 14
                              },
                              "currency_symbol": {
                                "type": "string",
                                "description": "The symbol of the currency used in the transaction (e.g., ETH, MATIC).",
                                "example": "MATIC"
                              },
                              "type": {
                                "type": "string",
                                "description": "Indicates the contract standard of the NFT, such as ERC721.",
                                "example": "ERC721"
                              },
                              "value": {
                                "type": "number",
                                "format": "double",
                                "description": "The value of the transaction. For minting, this is often zero since the NFT is being created.",
                                "example": 0
                              },
                              "value_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The equivalent USD value of the transaction.",
                                "example": 0
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "to",
                              "from_label",
                              "to_label",
                              "thumbnail",
                              "image",
                              "amount",
                              "contract_address",
                              "contract_type",
                              "fee",
                              "nft_name",
                              "nft_symbol",
                              "nft_token_id",
                              "currency_symbol",
                              "type",
                              "value",
                              "value_usd"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object encapsulates the details of a Non-Fungible Token (NFT) trading transaction. It includes comprehensive information such as wallet addresses, transaction hash, type of transaction (NFT trade), blockchain details, and timestamps. The structure provides specific data about the NFT trade, including the NFT's image, contract address, marketplace of the trade, and price details in both cryptocurrency and USD. Additionally, it includes information about the buyer, seller, and whether the transaction involved a bid being accepted. This structure is ideal for platforms that monitor and analyze NFT trading activities, offering detailed insights into each trade, its valuation, and the parties involved.\n",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address involved in the NFT trading transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A readable label for the wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique hash identifier of the NFT trading transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Specifies the type of transaction, in this case, NFT trading.",
                                "example": "nft_trade"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network where the trading transaction occurred.",
                                "example": "ethereum"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address of the transaction.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address of the transaction.",
                                "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                              },
                              "thumbnail": {
                                "type": "string",
                                "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "image": {
                                "type": "string",
                                "description": "A full image URL of the NFT.",
                                "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "action": {
                                "type": "string",
                                "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                                "example": "buy"
                              },
                              "contract": {
                                "type": "string",
                                "description": "The blockchain contract address associated with the NFT.",
                                "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                              },
                              "marketplace": {
                                "type": "string",
                                "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                                "example": "OpenSea"
                              },
                              "nft_address": {
                                "type": "string",
                                "description": "The blockchain address of the NFT involved in the trade.",
                                "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                              },
                              "nft_name": {
                                "type": "string",
                                "description": "The name of the NFT traded.",
                                "example": "Gemesis"
                              },
                              "nft_symbol": {
                                "type": "string",
                                "description": "The symbol associated with the NFT.",
                                "example": "OSP"
                              },
                              "nft_token_id": {
                                "type": "string",
                                "description": "The unique token ID of the NFT involved in the trade.",
                                "example": 32507
                              },
                              "price": {
                                "type": "number",
                                "format": "double",
                                "description": "The price at which the NFT was traded.",
                                "example": 0.0151
                              },
                              "price_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The equivalent USD value of the NFT trade.",
                                "example": 32.911356
                              },
                              "profit": {
                                "type": "number",
                                "format": "double",
                                "description": "The profit earned from the trade. This may be zero in some transactions.",
                                "example": 0
                              },
                              "currency_symbol": {
                                "type": "string",
                                "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                                "example": "WETH"
                              },
                              "buyer": {
                                "type": "string",
                                "description": "The wallet address of the buyer in the trade."
                              },
                              "seller": {
                                "type": "string",
                                "description": "The wallet address of the seller in the trade."
                              },
                              "token": {
                                "type": "string",
                                "description": "The token type used in the transaction."
                              },
                              "first_interaction": {
                                "type": "boolean",
                                "description": "Indicates whether this was the first interaction between the buyer and seller."
                              },
                              "bid_accepted": {
                                "type": "boolean",
                                "description": "Specifies if the transaction involved a bid being accepted."
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "to",
                              "thumbnail",
                              "image",
                              "action",
                              "contract",
                              "marketplace",
                              "nft_address",
                              "nft_name",
                              "nft_symbol",
                              "nft_token_id",
                              "price",
                              "price_usd",
                              "profit",
                              "currency_symbol",
                              "buyer",
                              "seller",
                              "token",
                              "first_interaction",
                              "bid_accepted"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object type details a Non-Fungible Token (NFT) transfer transaction. It includes essential information such as wallet addresses, transaction hash, NFT details, and blockchain specifics. This structure is particularly useful for tracking NFT transfers, providing a complete overview of the transaction, including the involved parties (from and to addresses), the NFT's contract details, and the transaction's metadata such as timestamps and blockchain network. The object also includes the NFT's image, name, symbol, and token ID, offering a comprehensive view of the NFT being transferred.\n",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address involved in the NFT transfer transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A readable label for the wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique hash identifier of the NFT transfer transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Specifies the type of transaction, in this case, NFT transfer.",
                                "example": "nft_transfer"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network where the transfer transaction occurred.",
                                "example": "ethereum"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address of the transaction.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address of the transaction.",
                                "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                              },
                              "from_label": {
                                "type": "string",
                                "description": "A readable version of the 'from' wallet address.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to_label": {
                                "type": "string",
                                "description": "A readable version of the 'to' wallet address.",
                                "example": "0xcfdb...6f8ff"
                              },
                              "thumbnail": {
                                "type": "string",
                                "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "image": {
                                "type": "string",
                                "description": "A full image URL of the NFT.",
                                "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "contract_address": {
                                "type": "string",
                                "description": "The blockchain address of the contract under which the NFT is registered.",
                                "example": "0xb27bbc8f0092284a880d1616f184d86c1a640fae"
                              },
                              "contract_type": {
                                "type": "string",
                                "description": "The type of contract used for the NFT, such as ERC721.",
                                "example": "ERC721"
                              },
                              "fee": {
                                "type": "number",
                                "format": "double",
                                "description": "The transaction fee incurred for the transfer of the NFT.",
                                "example": 0.21357696
                              },
                              "nft_name": {
                                "type": "string",
                                "description": "The name of the NFT being transferred.",
                                "example": "unknown"
                              },
                              "nft_symbol": {
                                "type": "string",
                                "description": "The symbol associated with the NFT.",
                                "example": "unknown"
                              },
                              "nft_token_id": {
                                "type": "string",
                                "description": "The unique token ID of the NFT involved in the transfer.",
                                "example": 3
                              },
                              "type": {
                                "type": "string",
                                "description": "Indicates the contract standard of the NFT, such as ERC721.",
                                "example": "ERC721"
                              },
                              "value": {
                                "type": "number",
                                "format": "double",
                                "description": "The value of the NFT at the time of the transfer. This might be represented in the native cryptocurrency of the blockchain."
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "to",
                              "from_label",
                              "to_label",
                              "thumbnail",
                              "image",
                              "contract_address",
                              "contract_type",
                              "fee",
                              "nft_name",
                              "nft_symbol",
                              "nft_token_id",
                              "type",
                              "value"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object encapsulates detailed information about a Non-Fungible Token (NFT) lending transaction. It includes comprehensive details such as wallet addresses, transaction hash, the type of NFT transaction, the blockchain used, and timestamps. Additionally, it provides specifics about the NFT involved, including its address, name, symbol, image, and the terms of the lending agreement. This structure is particularly useful for platforms that need to track and manage NFT lending activities, providing all necessary details for analyzing and processing such transactions.\n",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address involved in the NFT lending transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A more readable label or identifier for the wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique hash identifier of the NFT lending transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Specifies the type of transaction, in this case, NFT lending.",
                                "example": "nft_lending"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network on which the transaction was conducted.",
                                "example": "ethereum"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address of the transaction.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address of the transaction.",
                                "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                              },
                              "from_label": {
                                "type": "string",
                                "description": "A readable version of the 'from' wallet address.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to_label": {
                                "type": "string",
                                "description": "A readable version of the 'to' wallet address.",
                                "example": "0xcfdb...6f8ff"
                              },
                              "thumbnail": {
                                "type": "string",
                                "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "image": {
                                "type": "string",
                                "description": "A full image URL of the NFT.",
                                "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "action": {
                                "type": "string",
                                "description": "Describes the action taken in the NFT lending transaction, such as 'buy', 'lend', etc.",
                                "example": "buy"
                              },
                              "currency_address": {
                                "type": "string",
                                "description": "The blockchain address of the currency used in the transaction.",
                                "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                              },
                              "currency_symbol": {
                                "type": "string",
                                "description": "The symbol of the currency used in the transaction.",
                                "example": "OpenSea"
                              },
                              "interest": {
                                "type": "number",
                                "format": "double",
                                "description": "The interest rate applied in the NFT lending transaction.",
                                "example": 0.0151
                              },
                              "nft_address": {
                                "type": "string",
                                "description": "The blockchain address of the NFT involved in the transaction.",
                                "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                              },
                              "nft_name": {
                                "type": "string",
                                "description": "The name of the NFT.",
                                "example": "Gemesis"
                              },
                              "nft_symbol": {
                                "type": "string",
                                "description": "The symbol of the NFT.",
                                "example": "OSP"
                              },
                              "platform": {
                                "type": "string",
                                "description": "The platform or service through which the NFT lending transaction was conducted.",
                                "example": "Blend"
                              },
                              "nft_token_id": {
                                "type": "string",
                                "description": "The unique identifier for the specific NFT within its collection.",
                                "example": 32507
                              },
                              "price": {
                                "type": "number",
                                "format": "double",
                                "description": "The price at which the NFT was lent or transacted.",
                                "example": 0.0151
                              },
                              "price_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The equivalent USD value of the transaction price.",
                                "example": 32.911356
                              },
                              "terms": {
                                "type": "number",
                                "format": "double",
                                "description": "Specifies the terms of the NFT lending agreement.",
                                "example": 0.0151
                              },
                              "refinance": {
                                "type": "boolean",
                                "description": "Indicates whether the transaction involved refinancing of the NFT.",
                                "example": false
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "to",
                              "from_label",
                              "to_label",
                              "thumbnail",
                              "image",
                              "action",
                              "currency_address",
                              "currency_symbol",
                              "interest",
                              "nft_address",
                              "nft_name",
                              "nft_symbol",
                              "platform",
                              "nft_token_id",
                              "price",
                              "price_usd",
                              "terms",
                              "refinance"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object represents a detailed structure for a blockchain transaction, encompassing various aspects like wallet addresses, transaction hash, type, associated chains, and financial details. It is designed to provide a comprehensive view of a transaction, including the wallets involved, the transaction's nature, the chains it spans, and the financial details like the amount and its equivalent in USD. This structure is ideal for applications that require detailed tracking and analysis of blockchain transactions.\n",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address involved in the transaction.",
                                "example": "0xa4c8d9e4ec5f2831701a81389465498b83f9457d"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A shortened, more readable version of the wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique hash identifier of the transaction.",
                                "example": "0xb23dc807e8063feaefe20644f85d13a7238a8b01b9fd167135ef664146692f99"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "The type of transaction.",
                                "example": "bridge"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain on which the transaction occurred, like 'ethereum'.",
                                "example": "ethereum"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numeric index or identifier for the transaction.",
                                "example": 7
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp when the transaction occurred.",
                                "example": 1702899899
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain in which the transaction is included.",
                                "example": 18812661
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address of the transaction.",
                                "example": "0xecc19e177d24551aa7ed6bc6fe566eca726cc8a9"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address of the transaction.",
                                "example": "0xbf3b71decbcefabb3210b9d8f18ec22e0556f5f0"
                              },
                              "from_label": {
                                "type": "string",
                                "description": "A shortened, more readable version of the originating wallet address.",
                                "example": "0xecc1...cc8a9"
                              },
                              "to_label": {
                                "type": "string",
                                "description": "A shortened, more readable version of the destination wallet address.",
                                "example": "0xbf3b...6f5f0"
                              },
                              "token_address": {
                                "type": "string",
                                "description": "The address of the token involved in the transaction.",
                                "example": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
                              },
                              "token_name": {
                                "type": "string",
                                "description": "The name of the token involved in the transaction.",
                                "example": "Wrapped Ether"
                              },
                              "token_symbol": {
                                "type": "string",
                                "description": "The symbol of the token involved in the transaction.",
                                "example": "WETH"
                              },
                              "token_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double",
                                "description": "The amount of the token involved in the transaction.",
                                "example": 0.09956219862680922
                              },
                              "amount_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                                "example": 212.00276764599622
                              },
                              "from_chain": {
                                "type": "string",
                                "description": "The originating chain of the transaction, in cases of cross-chain activities.",
                                "example": "Arbitrum"
                              },
                              "to_chain": {
                                "type": "string",
                                "description": "The destination chain of the transaction, in cases of cross-chain activities.",
                                "example": "Ethereum"
                              },
                              "platform": {
                                "type": "string",
                                "description": "The platform or service used for the transaction.",
                                "example": "Stargate"
                              },
                              "price": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the token at the time of the transaction.",
                                "example": 2129.35
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the nature of the transaction, like 'withdraw', 'deposit', etc.",
                                "example": "withdraw"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "to",
                              "from_label",
                              "to_label",
                              "token_address",
                              "token_name",
                              "token_symbol",
                              "amount",
                              "amount_usd",
                              "from_chain",
                              "to_chain",
                              "platform",
                              "price",
                              "type",
                              "token_icon_link"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a contract interaction event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "contract_address": {
                                "type": "string",
                                "description": "The address of the smart contract involved in the interaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "contract_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the smart contract.",
                                "example": "Uniswap V3"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "to",
                              "contract_address",
                              "contract_label"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a wrap event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "dex": {
                                "type": "string",
                                "description": "The decentralized exchange where the wrap transaction occurred.",
                                "example": "Uniswap"
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "action": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number",
                                "description": "The amount of tokens wrapped in the transaction.",
                                "example": 100
                              },
                              "amount_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the wrapped tokens.",
                                "example": "100.0"
                              },
                              "contract_address": {
                                "type": "string",
                                "description": "The address of the smart contract involved in the interaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the token wrapped in the transaction.",
                                "example": "Wrapped Ether"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The symbol of the token wrapped in the transaction.",
                                "example": "WETH"
                              },
                              "token_price_usd": {
                                "type": "number",
                                "description": "The price of the token in USD at the time of the transaction.",
                                "example": "100.0"
                              },
                              "token_type": {
                                "type": "string",
                                "description": "The type of token wrapped in the transaction.",
                                "example": "ERC20"
                              },
                              "token_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "dex",
                              "from",
                              "to",
                              "action",
                              "amount",
                              "amount_usd",
                              "contract_address",
                              "name",
                              "symbol",
                              "token_price_usd",
                              "token_type",
                              "token_icon_link"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a Sudo Pool event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "dex": {
                                "type": "string",
                                "description": "The decentralized exchange where the wrap transaction occurred.",
                                "example": "Uniswap"
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "nft_address": {
                                "type": "string",
                                "description": "The address of the NFT contract involved in the interaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "nft_amount": {
                                "type": "integer",
                                "description": "The amount of NFTs involved in the transaction.",
                                "example": 1
                              },
                              "nft_price": {
                                "type": "number",
                                "description": "The price of the NFT in the transaction.",
                                "example": 100
                              },
                              "nft_symbol": {
                                "type": "string",
                                "description": "The symbol of the NFT in the transaction.",
                                "example": "NFT"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "token0_address": {
                                "type": "string",
                                "description": "The address of the first token in the LP pair.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "token0_amount": {
                                "type": "number",
                                "description": "The amount of the first token in the LP pair.",
                                "example": 100
                              },
                              "token0_amount_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the first token in the LP pair.",
                                "example": 100
                              },
                              "token0_name": {
                                "type": "string",
                                "description": "The name of the first token in the LP pair.",
                                "example": "Wrapped Ether"
                              },
                              "token0_price_usd": {
                                "type": "number",
                                "description": "The price of the first token in the LP pair in USD.",
                                "example": 100
                              },
                              "token0_symbol": {
                                "type": "string",
                                "description": "The symbol of the first token in the LP pair.",
                                "example": "WETH"
                              },
                              "token0_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "nft_address",
                              "nft_amount",
                              "nft_price",
                              "nft_symbol",
                              "token0_address",
                              "token0_amount",
                              "token0_amount_usd",
                              "token0_name",
                              "token0_price_usd",
                              "token0_symbol",
                              "from",
                              "to",
                              "token0_icon_link"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a reward event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "address": {
                                "type": "string",
                                "description": "The address of the token involved in the transaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "amount": {
                                "type": "number",
                                "description": "The amount of tokens involved in the transaction.",
                                "example": 100
                              },
                              "amount_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                                "example": 100
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the token involved in the transaction.",
                                "example": "Wrapped Ether"
                              },
                              "price_usd": {
                                "type": "number",
                                "description": "The price of the token in USD.",
                                "example": 100
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The symbol of the token involved in the transaction.",
                                "example": "WETH"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "address",
                              "amount",
                              "amount_usd",
                              "from",
                              "name",
                              "price_usd",
                              "symbol"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a staking event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "from_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the originating wallet.",
                                "example": "Alice"
                              },
                              "to_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the destination wallet.",
                                "example": "Bob"
                              },
                              "amount": {
                                "type": "number",
                                "description": "The amount of tokens staked in the transaction.",
                                "example": 100
                              },
                              "amount_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the staked tokens.",
                                "example": 100
                              },
                              "token_price_usd": {
                                "type": "number",
                                "description": "The price of the token in USD.",
                                "example": 100
                              },
                              "contract_address": {
                                "type": "string",
                                "description": "The address of the smart contract involved in the interaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The symbol of the token staked in the transaction.",
                                "example": "WETH"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the token staked in the transaction.",
                                "example": "Wrapped Ether"
                              },
                              "action": {
                                "type": "string",
                                "description": "The action taken in the staking transaction.",
                                "example": "stake"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "to",
                              "from_label",
                              "to_label",
                              "amount",
                              "amount_usd",
                              "token_price_usd",
                              "contract_address",
                              "symbol",
                              "name",
                              "action"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a Perpetual event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "action": {
                                "type": "string",
                                "description": "The action taken in the Perpetual event.",
                                "example": "buy"
                              },
                              "amount_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                                "example": 100
                              },
                              "average_price": {
                                "type": "number",
                                "description": "The average price of the tokens involved in the transaction.",
                                "example": 100
                              },
                              "base_token_address": {
                                "type": "string",
                                "description": "The address of the base token involved in the transaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "base_token_amount": {
                                "type": "number",
                                "description": "The amount of base tokens involved in the transaction.",
                                "example": 100
                              },
                              "base_token_symbol": {
                                "type": "string",
                                "description": "The symbol of the base token involved in the transaction.",
                                "example": "ETH"
                              },
                              "dex": {
                                "type": "string",
                                "description": "The decentralized exchange where the Perpetual transaction occurred.",
                                "example": "Uniswap"
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "liquidation": {
                                "type": "boolean",
                                "description": "Indicates whether the transaction was a liquidation.",
                                "example": false
                              },
                              "liquidation_price": {
                                "type": "number",
                                "description": "The price at which the liquidation occurred.",
                                "example": 100
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "trade_direction": {
                                "type": "string",
                                "description": "The direction of the trade in the Perpetual transaction.",
                                "example": "long"
                              },
                              "perp_details": {
                                "type": "string",
                                "description": "Additional details about the Perpetual transaction.",
                                "example": "details"
                              },
                              "token0_address": {
                                "type": "string",
                                "description": "The address of the first token in the LP pair.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "token0_amount": {
                                "type": "number",
                                "description": "The amount of the first token in the LP pair.",
                                "example": 100
                              },
                              "token0_amount_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the first token in the LP pair.",
                                "example": 100
                              },
                              "token0_name": {
                                "type": "string",
                                "description": "The name of the first token in the LP pair.",
                                "example": "Wrapped Ether"
                              },
                              "token0_price_usd": {
                                "type": "number",
                                "description": "The price of the first token in the LP pair in USD.",
                                "example": 100
                              },
                              "token0_symbol": {
                                "type": "string",
                                "description": "The symbol of the first token in the LP pair.",
                                "example": "WETH"
                              },
                              "token0_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              },
                              "token1_address": {
                                "type": "string",
                                "description": "The address of the second token in the LP pair.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "token1_amount": {
                                "type": "number",
                                "description": "The amount of the second token in the LP pair.",
                                "example": 100
                              },
                              "token1_amount_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the second token in the LP pair.",
                                "example": 100
                              },
                              "token1_name": {
                                "type": "string",
                                "description": "The name of the second token in the LP pair.",
                                "example": "Wrapped Ether"
                              },
                              "token1_price_usd": {
                                "type": "number",
                                "description": "The price of the second token in the LP pair in USD.",
                                "example": 100
                              },
                              "token1_symbol": {
                                "type": "string",
                                "description": "The symbol of the second token in the LP pair.",
                                "example": "WETH"
                              },
                              "token1_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              },
                              "realized_pnl": {
                                "type": "number",
                                "description": "The realized profit and loss of the Perpetual transaction.",
                                "example": 100
                              },
                              "is_nft_perp": {
                                "type": "boolean",
                                "description": "Indicates whether the Perpetual transaction involves an NFT.",
                                "example": false
                              },
                              "position_size": {
                                "type": "number",
                                "description": "The size of the position in the Perpetual transaction.",
                                "example": 100
                              },
                              "position_size_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the position size.",
                                "example": 100
                              },
                              "leverage": {
                                "type": "number",
                                "description": "The leverage used in the Perpetual transaction.",
                                "example": 100
                              },
                              "unrealized_pnl": {
                                "type": "number",
                                "description": "The unrealized profit and loss of the Perpetual transaction.",
                                "example": 100
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "action",
                              "amount_usd",
                              "average_price",
                              "base_token_address",
                              "base_token_amount",
                              "base_token_symbol",
                              "dex",
                              "from",
                              "liquidation",
                              "liquidation_price",
                              "to",
                              "trade_direction",
                              "perp_details",
                              "token0_address",
                              "token0_amount",
                              "token0_amount_usd",
                              "token0_name",
                              "token0_price_usd",
                              "token0_symbol",
                              "token0_icon_link",
                              "token1_address",
                              "token1_amount",
                              "token1_amount_usd",
                              "token1_name",
                              "token1_price_usd",
                              "token1_symbol",
                              "token1_icon_link",
                              "realized_pnl",
                              "is_nft_perp"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a flashloan event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "address": {
                                "type": "string",
                                "description": "The address of the token involved in the transaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "amount": {
                                "type": "number",
                                "description": "The amount of tokens involved in the transaction.",
                                "example": 100
                              },
                              "amount_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the tokens involved in the transaction.",
                                "example": 100
                              },
                              "dex": {
                                "type": "string",
                                "description": "The decentralized exchange (DEX) where the flashloan transaction took place.",
                                "example": "Uniswap"
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "health_factor": {
                                "type": "number",
                                "description": "The health factor of the wallet after the flashloan transaction.",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the token involved in the transaction.",
                                "example": "Wrapped Ether"
                              },
                              "platform": {
                                "type": "string",
                                "description": "The platform where the flashloan transaction took place.",
                                "example": "Aave"
                              },
                              "price_usd": {
                                "type": "number",
                                "description": "The price of the token in USD.",
                                "example": 100
                              },
                              "symbol": {
                                "type": "string",
                                "description": "The symbol of the token involved in the transaction.",
                                "example": "ETH"
                              },
                              "token_icon_link": {
                                "type": "string",
                                "description": "A link to the icon of the token involved in the transaction.",
                                "example": "https://logos.uniwhales.io/ethereum/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.jpg"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "address",
                              "amount",
                              "amount_usd",
                              "dex",
                              "from",
                              "health_factor",
                              "name",
                              "platform",
                              "price_usd",
                              "symbol",
                              "token_icon_link"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a contract creation event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "amount_usd": {
                                "type": "number",
                                "description": "The equivalent amount in USD of the wrapped tokens.",
                                "example": "100.0"
                              },
                              "contract_address": {
                                "type": "string",
                                "description": "The address of the smart contract involved in the interaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "from_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the originating wallet.",
                                "example": "Alice"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "amount_usd",
                              "contract_address",
                              "from",
                              "from_label"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a NFT liquidation event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "contract_address": {
                                "type": "string",
                                "description": "The address of the NFT contract involved in the interaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "currency_address": {
                                "type": "string",
                                "description": "The address of the currency involved in the transaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "currency_symbol": {
                                "type": "string",
                                "description": "The symbol of the currency involved in the transaction.",
                                "example": "ETH"
                              },
                              "dex": {
                                "type": "string",
                                "description": "The decentralized exchange where the wrap transaction occurred.",
                                "example": "Uniswap"
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "nft_address": {
                                "type": "string",
                                "description": "The address of the NFT contract involved in the interaction.",
                                "example": "0x7f5c764cbc14f9669b88837ca1490cca17c31607"
                              },
                              "nft_name": {
                                "type": "string",
                                "description": "The name of the NFT in the transaction.",
                                "example": "NFT"
                              },
                              "nft_symbol": {
                                "type": "string",
                                "description": "The symbol of the NFT in the transaction.",
                                "example": "NFT"
                              },
                              "platform": {
                                "type": "string",
                                "description": "The platform where the flashloan transaction took place.",
                                "example": "Aave"
                              },
                              "price": {
                                "type": "number",
                                "description": "The price of the NFT in the transaction.",
                                "example": 100
                              },
                              "price_usd": {
                                "type": "number",
                                "description": "The price of the NFT in USD.",
                                "example": 100
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "token_id": {
                                "type": "string",
                                "description": "The unique identifier of the NFT in the transaction.",
                                "example": "1"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "contract_address",
                              "currency_address",
                              "currency_symbol",
                              "dex",
                              "from",
                              "nft_address",
                              "nft_name",
                              "nft_symbol",
                              "platform",
                              "price",
                              "price_usd",
                              "to",
                              "token_id"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing an option event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address participating in the LP transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A human-readable label or name associated with the wallet, such as a ENS name.",
                                "example": "vitalik.eth"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique transaction hash identifying this specific LP transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Indicates the type of transaction, in this case, liquidity pool (LP) related.",
                                "example": "lp"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network (e.g., Ethereum, Optimism) where this transaction takes place.",
                                "example": "optimism"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "action": {
                                "type": "string",
                                "description": "The action taken in the option event.",
                                "example": "buy"
                              },
                              "amount": {
                                "type": "number",
                                "description": "The amount of tokens involved in the transaction.",
                                "example": 100
                              },
                              "asset": {
                                "type": "string",
                                "description": "The asset involved in the option event.",
                                "example": "ETH"
                              },
                              "dex": {
                                "type": "string",
                                "description": "The decentralized exchange (DEX) where the option event took place.",
                                "example": "Uniswap"
                              },
                              "direction": {
                                "type": "string",
                                "description": "The direction of the option event.",
                                "example": "call"
                              },
                              "expiry": {
                                "type": "string",
                                "description": "The expiry date of the option.",
                                "example": "2022-12-31"
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "option_price_usd": {
                                "type": "number",
                                "description": "The price of the option in USD.",
                                "example": 100
                              },
                              "position_status": {
                                "type": "string",
                                "description": "The status of the option position.",
                                "example": "open"
                              },
                              "spot_price_usd": {
                                "type": "number",
                                "description": "The spot price of the asset in USD.",
                                "example": 100
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the option event.",
                                "example": "active"
                              },
                              "strike_price_usd": {
                                "type": "number",
                                "description": "The strike price of the option in USD.",
                                "example": 100
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address for the transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of option event.",
                                "example": "call"
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "action",
                              "amount",
                              "asset",
                              "dex",
                              "direction",
                              "expiry",
                              "from",
                              "option_price_usd",
                              "position_status",
                              "spot_price_usd",
                              "status",
                              "strike_price_usd",
                              "to",
                              "type"
                            ]
                          },
                          {
                            "type": "object",
                            "description": "This object provides a structure for representing a NFT sweep event on the blockchain.",
                            "properties": {
                              "wallet": {
                                "type": "string",
                                "description": "The wallet address involved in the NFT trading transaction.",
                                "example": "0xb4fb31e7b1471a8e52dd1e962a281a732ead59c1"
                              },
                              "wallet_label": {
                                "type": "string",
                                "description": "A readable label for the wallet address.",
                                "example": "0xa4c8...f9457d"
                              },
                              "tx_hash": {
                                "type": "string",
                                "description": "The unique hash identifier of the NFT trading transaction.",
                                "example": "0xe0f84917036e7e2ebb2f8d73199547bde30d4d2918c67904a4bb200dc5bad215"
                              },
                              "tx_type": {
                                "type": "string",
                                "description": "Specifies the type of transaction, in this case, NFT trading.",
                                "example": "nft_trade"
                              },
                              "chain": {
                                "type": "string",
                                "description": "The blockchain network where the trading transaction occurred.",
                                "example": "ethereum"
                              },
                              "index": {
                                "type": "integer",
                                "description": "A numerical index or identifier for the transaction.",
                                "example": 10
                              },
                              "timestamp": {
                                "type": "integer",
                                "description": "The timestamp marking when the transaction was executed.",
                                "example": 1702899395
                              },
                              "block": {
                                "type": "integer",
                                "description": "The block number on the blockchain where this transaction is recorded.",
                                "example": 113650309
                              },
                              "from": {
                                "type": "string",
                                "description": "The originating wallet address of the transaction.",
                                "example": "0xebc18d25d8122da21f73a6bcb78971671f21f6ff"
                              },
                              "to": {
                                "type": "string",
                                "description": "The destination wallet address of the transaction.",
                                "example": "0xcfdbdb8723619bca23765e09d59c8f745366f8ff"
                              },
                              "thumbnail": {
                                "type": "string",
                                "description": "A thumbnail image URL of the NFT involved in the transaction.",
                                "example": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "image": {
                                "type": "string",
                                "description": "A full image URL of the NFT.",
                                "example": "https://nft-cdn.alchemy.com/matic-mainnet/284ed679247466683591389baddcfc9b"
                              },
                              "action": {
                                "type": "string",
                                "description": "Describes the action taken in the NFT trade, such as 'buy' or 'sell'.",
                                "example": "buy"
                              },
                              "contract": {
                                "type": "string",
                                "description": "The blockchain contract address associated with the NFT.",
                                "example": "0x00000000000000adc04c56bf30ac9d3c0aaf14dc"
                              },
                              "marketplace": {
                                "type": "string",
                                "description": "The marketplace where the NFT trade occurred, such as OpenSea.",
                                "example": "OpenSea"
                              },
                              "nft_address": {
                                "type": "string",
                                "description": "The blockchain address of the NFT involved in the trade.",
                                "example": "0xbe9371326f91345777b04394448c23e2bfeaa826"
                              },
                              "nft_name": {
                                "type": "string",
                                "description": "The name of the NFT traded.",
                                "example": "Gemesis"
                              },
                              "nft_symbol": {
                                "type": "string",
                                "description": "The symbol associated with the NFT.",
                                "example": "OSP"
                              },
                              "nft_token_id": {
                                "type": "string",
                                "description": "The unique token ID of the NFT involved in the trade.",
                                "example": 32507
                              },
                              "price": {
                                "type": "number",
                                "format": "double",
                                "description": "The price at which the NFT was traded.",
                                "example": 0.0151
                              },
                              "price_usd": {
                                "type": "number",
                                "format": "double",
                                "description": "The equivalent USD value of the NFT trade.",
                                "example": 32.911356
                              },
                              "profit": {
                                "type": "number",
                                "format": "double",
                                "description": "The profit earned from the trade. This may be zero in some transactions.",
                                "example": 0
                              },
                              "currency_symbol": {
                                "type": "string",
                                "description": "The symbol of the currency used in the trade, such as WETH or ETH.",
                                "example": "WETH"
                              },
                              "buyer": {
                                "type": "string",
                                "description": "The wallet address of the buyer in the trade."
                              },
                              "seller": {
                                "type": "string",
                                "description": "The wallet address of the seller in the trade."
                              },
                              "token": {
                                "type": "string",
                                "description": "The token type used in the transaction."
                              },
                              "first_interaction": {
                                "type": "boolean",
                                "description": "Indicates whether this was the first interaction between the buyer and seller."
                              },
                              "bid_accepted": {
                                "type": "boolean",
                                "description": "Specifies if the transaction involved a bid being accepted."
                              }
                            },
                            "required": [
                              "wallet",
                              "wallet_label",
                              "tx_hash",
                              "tx_type",
                              "chain",
                              "index",
                              "timestamp",
                              "block",
                              "from",
                              "to",
                              "thumbnail",
                              "image",
                              "action",
                              "contract",
                              "marketplace",
                              "nft_address",
                              "nft_name",
                              "nft_symbol",
                              "nft_token_id",
                              "price",
                              "price_usd",
                              "profit",
                              "currency_symbol",
                              "buyer",
                              "seller",
                              "token",
                              "first_interaction",
                              "bid_accepted"
                            ]
                          }
                        ]
                      }
                    },
                    "paging": {
                      "type": "object",
                      "description": "Provides details about pagination, indicating the total number of rows on the current page, whether a next page exists, and the identifier for the next object.",
                      "properties": {
                        "total_rows_in_page": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "The total number of rows present in the current page of the response.",
                          "example": 10
                        },
                        "has_next_page": {
                          "type": "boolean",
                          "description": "A boolean flag indicating if there is a subsequent page available after the current page.",
                          "example": true
                        },
                        "next_object": {
                          "type": "string",
                          "description": "An identifier for the next object or page, used for pagination purposes."
                        }
                      },
                      "required": [
                        "total_rows_in_page",
                        "has_next_page"
                      ]
                    }
                  },
                  "required": [
                    "items",
                    "paging"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                }
              },
              "required": [
                "status",
                "data"
              ]
            }
          }
        }
      },
      "TokensPNLResponse": {
        "description": "Successfull tokens PnL response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The response schema for the /v1/tokens_pnl endpoint.",
              "properties": {
                "status": {
                  "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                  "type": "string",
                  "enum": [
                    "ok",
                    "error"
                  ]
                },
                "data": {
                  "type": "object",
                  "description": "Contains the main data of the response, including a list of tokens PNL items and pagination details.",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "An array of tokens PNL items, each providing detailed information on token transactions and performance.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "num_swaps": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "total_buy_usd": {
                            "type": "number",
                            "format": "double"
                          },
                          "total_buy_amount": {
                            "type": "number",
                            "format": "double"
                          },
                          "total_sell_usd": {
                            "type": "number",
                            "format": "double"
                          },
                          "total_sell_amount": {
                            "type": "number",
                            "format": "double"
                          },
                          "average_buy_price": {
                            "type": "number",
                            "format": "double"
                          },
                          "average_sell_price": {
                            "type": "number",
                            "format": "double"
                          },
                          "total_pnl_usd": {
                            "type": "number",
                            "format": "double"
                          },
                          "roi_percentage": {
                            "type": "number",
                            "format": "double"
                          },
                          "unrealized_pnl_usd": {
                            "type": "number",
                            "format": "double"
                          },
                          "unrealized_roi_percentage": {
                            "type": "number",
                            "format": "double"
                          },
                          "token_price": {
                            "type": "number",
                            "format": "double"
                          },
                          "token_address": {
                            "type": "string"
                          },
                          "token_symbol": {
                            "type": "string"
                          },
                          "token_name": {
                            "type": "string"
                          },
                          "chain": {
                            "type": "string"
                          },
                          "is_honeypot": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "total_rows_in_page": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "has_next_page": {
                          "type": "boolean"
                        },
                        "next_object": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "total_rows_in_page",
                        "has_next_page"
                      ]
                    }
                  },
                  "required": [
                    "items",
                    "paging"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                }
              },
              "required": [
                "status",
                "data"
              ]
            }
          }
        }
      },
      "NftsPnLResponse": {
        "description": "Successfull Nft PnL response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The response schema for the /v1/nftss_pnl endpoint.",
              "properties": {
                "status": {
                  "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                  "type": "string",
                  "enum": [
                    "ok",
                    "error"
                  ]
                },
                "data": {
                  "type": "object",
                  "description": "Contains the main data of the response, including a list of Nft PnL items and pagination details.",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "An array of Nft PnL items, each providing detailed information on token transactions and performance.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "num_swaps": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "total_buy_amount": {
                            "type": "number",
                            "format": "double"
                          },
                          "total_sell_amount": {
                            "type": "number",
                            "format": "double"
                          },
                          "total_buy_avg": {
                            "type": "number",
                            "format": "double"
                          },
                          "total_sell_avg": {
                            "type": "number",
                            "format": "double"
                          },
                          "total_buy_usd": {
                            "type": "number",
                            "format": "double"
                          },
                          "total_sell_usd": {
                            "type": "number",
                            "format": "double"
                          },
                          "profit_loss": {
                            "type": "number",
                            "format": "double"
                          },
                          "roi_percentage": {
                            "type": "number",
                            "format": "double"
                          },
                          "chain": {
                            "type": "string"
                          },
                          "token_address": {
                            "type": "string"
                          },
                          "nft_symbol": {
                            "type": "string"
                          },
                          "nft_name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "properties": {
                        "total_rows_in_page": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "has_next_page": {
                          "type": "boolean"
                        },
                        "next_object": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "total_rows_in_page",
                        "has_next_page"
                      ]
                    }
                  },
                  "required": [
                    "items",
                    "paging"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                }
              },
              "required": [
                "status",
                "data"
              ]
            }
          }
        }
      },
      "TotalStatsResponse": {
        "description": "Successfull Total Stats response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The response schema for the /v1/{wallet}/pnl/total-stats endpoint.",
              "properties": {
                "status": {
                  "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                  "type": "string",
                  "enum": [
                    "ok",
                    "error"
                  ]
                },
                "data": {
                  "type": "object",
                  "description": "Contains the main data of the response, including aggregated PnL stats for the specified wallet.",
                  "properties": {
                    "wallet": {
                      "type": "string",
                      "description": "The wallet address for which the PnL stats are provided.",
                      "example": "6sdb5o3XWM27RSjcYqoVZ88ruuPzHTfqFQEq26nN6eVq"
                    },
                    "realized_pnl_usd": {
                      "type": "integer",
                      "format": "float64",
                      "description": "The total PnL in usd for the specified wallet.",
                      "example": 10000
                    },
                    "realized_roi_percentage": {
                      "type": "integer",
                      "format": "float64",
                      "description": "The total ROI percentage for the specified wallet.",
                      "example": 52.2
                    },
                    "tokens_traded": {
                      "type": "integer",
                      "format": "float64",
                      "description": "The total number of tokens traded for the specified wallet.",
                      "example": 25
                    },
                    "unrealized_pnl_usd": {
                      "type": "integer",
                      "format": "float64",
                      "description": "The total unrealized PnL in usd for the specified wallet.",
                      "example": 5000
                    },
                    "unrealized_roi_percentage": {
                      "type": "integer",
                      "format": "float64",
                      "description": "The total unrealized ROI percentage for the specified wallet.",
                      "example": 75.2
                    },
                    "winrate": {
                      "type": "integer",
                      "format": "float64",
                      "description": "The winrate percentage for the specified wallet.",
                      "example": 53.5
                    },
                    "average_holding_time": {
                      "type": "integer",
                      "format": "float64",
                      "description": "The average holding time for the specified wallet in hours.",
                      "example": 5
                    },
                    "combined_pnl_usd": {
                      "type": "integer",
                      "format": "float64",
                      "description": "The combined PnL in usd for the specified wallet.",
                      "example": 15000
                    },
                    "combined_roi_percentage": {
                      "type": "integer",
                      "format": "float64",
                      "description": "The combined ROI percentage for the specified wallet.",
                      "example": 127.4
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                }
              },
              "required": [
                "status",
                "data"
              ]
            }
          }
        }
      },
      "TagsResponse": {
        "description": "Successfull Tags response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The response schema for the /v1/{wallet}/tags endpoint.",
              "properties": {
                "status": {
                  "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                  "type": "string",
                  "enum": [
                    "ok",
                    "error"
                  ]
                },
                "data": {
                  "type": "object",
                  "description": "Contains the main data of the response.",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "description": "An array of tags associated with the wallet address.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "A unique identifier for the tag.",
                            "example": "nft_trader",
                            "type": "string",
                            "enum": [
                              "high_volume_dex_trader",
                              "early_defi",
                              "multichain",
                              "new_wallet",
                              "high_leverage_trader",
                              "nft_trader",
                              "nftfi",
                              "nft_high_pnl",
                              "popular_wallet",
                              "airdrop_hunter",
                              "gem_finder",
                              "high_win_rate",
                              "new_whale",
                              "flipper",
                              "honeypot",
                              "mev"
                            ]
                          },
                          "tag": {
                            "type": "string",
                            "description": "The tag label or name.",
                            "example": "NFT Trader"
                          },
                          "description": {
                            "type": "string",
                            "description": "A description of what the tag represents.",
                            "example": "More than 50 ETH volume trading NFTs"
                          }
                        },
                        "required": [
                          "key",
                          "tag",
                          "description"
                        ]
                      }
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                }
              },
              "required": [
                "status",
                "data"
              ]
            }
          }
        }
      },
      "RelatedWalletsResponse": {
        "description": "Successfull Related Wallets response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The response schema for the /v1/{wallet}/related-wallets endpoint.",
              "properties": {
                "status": {
                  "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                  "type": "string",
                  "enum": [
                    "ok",
                    "error"
                  ]
                },
                "data": {
                  "type": "object",
                  "description": "Contains the main data of the response.",
                  "properties": {
                    "related_wallets": {
                      "type": "array",
                      "description": "An array of related wallets associated with the wallet address.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "wallet": {
                            "type": "string",
                            "description": "The wallet address for which the related wallets are provided.",
                            "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
                          },
                          "inflow_usd": {
                            "type": "integer",
                            "description": "The total inflow in usd for the specified wallet.",
                            "example": 10000
                          },
                          "outflow_usd": {
                            "type": "integer",
                            "description": "The total outflow in usd for the specified wallet.",
                            "example": 15000
                          },
                          "total_usd": {
                            "type": "integer",
                            "description": "The total inflow and outflow in usd for the specified wallet.",
                            "example": 25000
                          },
                          "count": {
                            "type": "integer",
                            "description": "The total number of transactions for the specified wallet.",
                            "example": 2
                          },
                          "label": {
                            "type": "string",
                            "description": "The label for the related wallet.",
                            "example": "Wallet Name"
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                }
              },
              "required": [
                "status",
                "data"
              ]
            }
          }
        }
      },
      "WalletsByTagResponse": {
        "description": "Successfull Wallets by Tag response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "The response schema for the /v1/tags/wallets endpoint.",
              "properties": {
                "status": {
                  "description": "A reference to the standard response status object, which indicates the success or failure of the API request.",
                  "type": "string",
                  "enum": [
                    "ok",
                    "error"
                  ]
                },
                "data": {
                  "type": "object",
                  "description": "Contains the main data of the response.",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "An array of related wallets associated with the wallet address.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "wallet": {
                            "type": "string",
                            "description": "The wallet address for a wallet with the provided tags.",
                            "example": "0x0f9d76acdbc4417b026f876be1e2042e45f3bcd2"
                          },
                          "wallet_type": {
                            "type": "string",
                            "enum": [
                              "evm",
                              "solana"
                            ],
                            "description": "The wallet type for the wallet returned.",
                            "example": "evm"
                          }
                        }
                      }
                    },
                    "paging": {
                      "type": "object",
                      "description": "Provides details about pagination, indicating the total number of rows on the current page, whether a next page exists, and the identifier for the next object.",
                      "properties": {
                        "next_page": {
                          "type": "string",
                          "description": "An identifier for the next page, used for pagination purposes."
                        },
                        "has_next_page": {
                          "type": "boolean",
                          "description": "Indicates whether a next page exists."
                        }
                      },
                      "required": [
                        "has_next_page"
                      ]
                    }
                  },
                  "required": [
                    "items",
                    "paging"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "A descriptive message accompanying the response, often used to provide additional information or context about the results or the status of the request."
                }
              },
              "required": [
                "status",
                "data"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    }
  }
}